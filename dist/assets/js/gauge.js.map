{"version":3,"sources":["webpack:///../vischart/dist/common/vischartbase.js","webpack:///../vischart/dist/geometry/geometry.js","webpack:///../vischart/dist/common/utils.js","webpack:///../vischart/dist/common/pointat.js","webpack:///../vischart/dist/index.js","webpack:///../vischart/dist/dount/index.js","webpack:///../vischart/dist/icon/iconcircle.js","webpack:///../vischart/dist/gauge/index.js","webpack:///../vischart/dist/icon/iconround.js","webpack:///../vischart/dist/icon/roundstatetext.js","webpack:///../vischart/dist/common/constant.js","webpack:///../vischart/dist/common/legend.js","webpack:///./src/assets/js/gauge.js"],"names":["Object","defineProperty","exports","value","obj","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_konva","__webpack_require__","_konva2","__esModule","default","VisChartBase","box","width","height","instance","TypeError","_classCallCheck","this","customWidth","customHeight","offsetWidth","offsetHeight","max","Math","min","cx","cy","cpoint","x","y","totalAngle","angleOffset","countAngle","images","rateWidth","rateHeight","rotationBg","rotationBgCount","rotationBgStep","colors","data","allData","loadImage","legend","_this","isDestroy","map","item","rotation","stage","add","iconLayer","window","requestAnimationFrame","animationBg","imgUrl","offsetX","arguments","undefined","offsetY","rateW","rateH","push","url","_this2","remove","Layer","background","val","addImage","img","Image","onload","icon","image","fixCx","fixCy","offset","src","r","direction","outerHeight","options","layer","setDestroy","pointRectangleIntersection","p","x2","y2","pointDistance","_p1","_p2","_dx","_dy","sqrt","pointAngle","angle","atan2","PI","distanceAngleToPoint","_distance","_angle","_radian","cos","sin","radians","degree","_radians","intersectRect","r1","r2","fixEndAngle","startAngle","endAngle","pointPlus","p1","p2","parseFinance","_i","_dot","parseFloat","toFixed","_interopRequireDefault","_jsonUtilsx2","geometry","newObj","hasOwnProperty","call","_interopRequireWildcard","PointAt","point","init","rects","params","clone","fill","rect","Rect","leftTop","rightTop","leftBottom","rightBottom","isLeftTop","isRightTop","isRightBottom","isLeftBottom","DIRE_NAME","topCenter","rightMid","bottomCenter","leftMid","DIRE_NUM","1","2","4","8","3","6","9","12","_vischartbase2","_index2","_index4","constant","_legend2","VisChart","_VisChartBase","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","ins","subClass","superClass","create","constructor","setPrototypeOf","_inherits","Stage","container","style","jsonInData","destroy","removeChildren","setStage","setOptions","onChange","group","initChart","update","_this3","series","type","CHART_TYPE","dount","gauge","setLegend","getLegendData","tmp","disabled","_get","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","parent","getter","_pointat2","utils","_iconcircle2","Dount","name","Date","now","outPercent","inPercent","circleLinePercent","circlePercent","circleLineRotation","circleLineRotationStep","animationStep","angleStep","textHeight","lineOffset","path","textOffset","lineColor","lineRange","lineWidth","lineSpace","lineAngle","lineHeight","lineCurveLength","loopSort","calcLayoutPosition","calcDataPosition","initDataLayout","animation","animationCircleLine","pathData","circleLine","layoutLayer","isDone","tmppoint","step","reset","tmpAngle","itemData","outRadius","join","_i2","inRadius","setData","setZIndex","animationLine","circleRadius","ceil","circle","Circle","radius","stroke","strokeWidth","circleLineRadius","points","_i3","_tmp","Path","_this4","line","drawCircle","drawCircleLine","color","itemStyle","Line","_this5","total","_percent","_totalPercent","percent","parseInt","midAngle","lineStart","lineEnd","lineLength","textPoint","pointDirection","fixWidth","fixHeight","autoAngle","lineExpend","tmpPoint","_tmpAngle","_tmpPoint","pre","cur","abs","tmpY","_i4","_pre","_cur","_tmpY","_i5","_pre2","_cur2","_tmpY2","_i6","_pre3","_cur3","_tmpY3","_i7","_pre4","_cur4","_this6","lineLengthCount","lineLengthStep","addText","addIcon","text","Text","fontFamily","fontSize","fontStyle","angleDirect","textWidth","textX","textY","auto","lineLeft","lineRight","IconCircle","isplus","Group","outcircle","scale","plus","_roundstatetext2","Gauge","curRate","totalNum","totalNumStep","roundRadiusPercent","arcLinePercent","arcOutPercent","arcInPercent","arcLabelLength","arcTextLength","arcAngle","part","arcTotal","arcOffset","arcOffsetPad","partLabel","partAngle","partNum","textOffsetX","textOffsetY","textLineLength","textRectWidthPercent","textRectHeightPercent","textRoundPercent","textRoundOffsetAngle","textRoundPlusAngle","textRoundMaxAngle","roundStatusRaidus","textRoundAngle","pow","getAttackRatePercent","textRoundRadius","roundRadius","arcInRadius","arcOutRadius","arcLineRaidus","arcPartLineAr","arcOutlinePartAr","textAr","start","end","assign","animationAngle","getAttackRateAngle","rateStep","floor","totalNumCount","animationText","totalText","tmpTotalText","textRect","opacity","textLinePath","_this7","arcLine","arcPartLine","arcOutlinePart","innerRadius","outerRadius","fillLinearGradientStartPoint","fillLinearGradientEndPoint","fillLinearGradientColorStops","arc","Arc","roundLine","percentText","getAttackText","wedge","Wedge","wedge1","drawArc","drawArcLine","drawArcText","drawText","drawTextRect","initRoundText","_this8","_this9","IconRound","RoundStateText","curColor","circleRaidus","rate","Legend","textColor","iconSpace","curRow","column","space","columnWidth","row","spaceY","rowHeight","label","textStyle","itemWidth","itemHeight","bg","ele","on","bottom","left","right","a","load","then","dmins","vischart__WEBPACK_IMPORTED_MODULE_0___default","document","querySelector","setTimeout"],"mappings":"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","file":"assets/js/gauge.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar VisChartBase = function () {\n    function VisChartBase(box, width, height) {\n        _classCallCheck(this, VisChartBase);\n\n        this.box = box;\n\n        this.customWidth = width;\n        this.customHeight = height;\n\n        this.width = width || box.offsetWidth;\n        this.height = height || box.offsetHeight;\n\n        this.max = Math.max(this.width, this.height);\n        this.min = Math.min(this.width, this.height);\n\n        this.cx = this.width / 2;\n        this.cy = this.height / 2;\n        this.cpoint = { x: this.cx, y: this.cy };\n\n        this.totalAngle = 360;\n        this.angleOffset = 0;\n        this.countAngle = 0;\n\n        this.images = [];\n\n        this.rateWidth = 330;\n        this.rateHeight = 330;\n\n        this.rotationBg = [];\n\n        this.rotationBgCount = 0;\n        this.rotationBgStep = 1;\n\n        this.colors = ['#f12575', '#da432e', '#f3a42d', '#19af89', '#24a3ea', '#b56be8'];\n    }\n\n    _createClass(VisChartBase, [{\n        key: 'update',\n        value: function update(data, allData) {\n            this.data = data;\n            this.allData = allData;\n\n            this.loadImage();\n\n            return this;\n        }\n    }, {\n        key: 'setLegend',\n        value: function setLegend(legend) {\n            this.legend = legend;\n        }\n    }, {\n        key: 'animation',\n        value: function animation() {}\n    }, {\n        key: 'animationBg',\n        value: function animationBg() {\n            var _this = this;\n\n            //console.log( 'animationBg', Date.now(), this.isDestroy, this.rotationBg.length, this.rotationBgCount );\n            if (this.isDestroy) return;\n            if (!this.rotationBg.length) return;\n\n            this.rotationBg.map(function (item) {\n                _this.rotationBgCount = (_this.rotationBgCount - _this.rotationBgStep) % 360;\n                item.rotation(_this.rotationBgCount);\n            });\n\n            this.stage.add(this.iconLayer);\n\n            window.requestAnimationFrame(function () {\n                _this.animationBg();\n            });\n        }\n    }, {\n        key: 'addImage',\n        value: function addImage(imgUrl, width, height) {\n            var offsetX = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n            var offsetY = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n            var rotation = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n            //console.log( this.rateWidth, this.width );\n            var rateW = this.min / this.rateWidth,\n                rateH = this.min / this.rateHeight;\n            this.images.push({\n                url: imgUrl,\n                width: width * rateW,\n                height: height * rateH,\n                offsetX: offsetX,\n                offsetY: offsetY,\n                rotation: rotation\n            });\n\n            return this;\n        }\n\n        /*\n            \"background\": [\n                { \n                    \"url\": \"./img/dount-in.png\"\n                    , \"width\": 120\n                    , \"height\": 120\n                    , \"offsetX\": 0\n                    , \"offsetY\": 1\n                }\n                , { \n                    \"url\": \"./img/dount-big.png\"\n                    , \"width\": 250\n                    , \"height\": 248\n                    , \"offsetX\": 0\n                    , \"offsetY\": 1\n                }\n            ],\n        */\n\n    }, {\n        key: 'loadImage',\n        value: function loadImage() {\n            var _this2 = this;\n\n            if (this.iconLayer) this.iconLayer.remove();\n            this.iconLayer = new _konva2.default.Layer();\n\n            this.images = [];\n\n            if (this.data && this.data.background && this.data.background.length) {\n                this.data.background.map(function (val) {\n                    _this2.addImage(val.url, val.width, val.height, val.offsetX || 0, val.offsetY || 0, val.rotation || 0);\n                });\n            }\n\n            this.rotationBg = [];\n\n            this.images.map(function (item) {\n                //console.log( 'item', item );\n\n                var img = new Image();\n                img.onload = function () {\n                    var width = item.width || img.width,\n                        height = item.height || img.height;\n\n                    var icon = new _konva2.default.Image({\n                        image: img,\n                        x: _this2.fixCx() - width / 2 + item.offsetX,\n                        y: _this2.fixCy() - height / 2 + item.offsetY,\n                        width: width,\n                        height: height\n                    });\n\n                    _this2.iconLayer.add(icon);\n\n                    if (item.rotation) {\n                        _this2.rotationBg.push(icon);\n                        icon.x(_this2.fixCx() - width / 2 + item.offsetX + width / 2);\n                        icon.y(_this2.fixCy() - height / 2 + item.offsetY + height / 2);\n                        icon.offset({ x: width / 2, y: height / 2 });\n                        if (_this2.rotationBg.length === 1) _this2.animationBg();\n                    }\n                    _this2.stage.add(_this2.iconLayer);\n                };\n                img.src = item.url;\n            });\n\n            return this;\n        }\n    }, {\n        key: 'hasLegend',\n        value: function hasLegend() {\n            var r = void 0;\n\n            if (this.data && this.data.legend && this.data.legend.data && this.data.legend.data.length) {\n                r = true;\n            }\n\n            return r;\n        }\n    }, {\n        key: 'fixCx',\n        value: function fixCx() {\n            var r = this.cx;\n            return r;\n        }\n    }, {\n        key: 'fixCy',\n        value: function fixCy() {\n            var r = this.cy;\n\n            if (this.legend) {\n                switch (this.legend.direction()) {\n                    case 'bottom':\n                        {\n                            r = (this.height - this.legend.outerHeight() / 2) / 2 - 5;\n                            break;\n                        }\n                }\n            }\n\n            return r;\n        }\n    }, {\n        key: 'fixWidth',\n        value: function fixWidth() {\n            var r = this.width;\n            return r;\n        }\n    }, {\n        key: 'fixHeight',\n        value: function fixHeight() {\n            var r = this.height;\n            return r;\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            return this;\n        }\n    }, {\n        key: 'setOptions',\n        value: function setOptions(options) {\n\n            for (var key in options) {\n                this[key] = options[key];\n            }\n\n            this.options = options;\n        }\n    }, {\n        key: 'calcLayoutPosition',\n        value: function calcLayoutPosition() {\n            return this;\n        }\n    }, {\n        key: 'calcDataPosition',\n        value: function calcDataPosition() {\n            return this;\n        }\n    }, {\n        key: 'initDataLayout',\n        value: function initDataLayout() {\n            return this;\n        }\n    }, {\n        key: 'draw',\n        value: function draw() {\n            return this;\n        }\n    }, {\n        key: 'reset',\n        value: function reset() {}\n    }, {\n        key: 'getData',\n        value: function getData() {\n            return this.data || {};\n        }\n    }, {\n        key: 'layer',\n        value: function layer() {\n            return this.layer;\n        }\n    }, {\n        key: 'setLayer',\n        value: function setLayer(layer) {\n            this.layer = layer;\n            return this;\n        }\n    }, {\n        key: 'setStage',\n        value: function setStage(stage) {\n            this.stage = stage;\n        }\n    }, {\n        key: 'setDestroy',\n        value: function setDestroy() {\n            this.isDestroy = 1;\n        }\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            this.setDestroy();\n            console.log('destroy', this.name);\n            this.iconLayer.remove();\n        }\n    }]);\n\n    return VisChartBase;\n}();\n\nexports.default = VisChartBase;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.pointRectangleIntersection = pointRectangleIntersection;\nexports.pointDistance = pointDistance;\nexports.pointAngle = pointAngle;\nexports.distanceAngleToPoint = distanceAngleToPoint;\nexports.radians = radians;\nexports.degree = degree;\nexports.intersectRect = intersectRect;\nexports.fixEndAngle = fixEndAngle;\nexports.pointPlus = pointPlus;\n\n/**\n * 判断一个点是否在矩形里面\n * @method  pointRectangleIntersection\n * @param   {point} _p\n * @param   {rect}  _r\n * @return  Boolean\n * @static\n */\nfunction pointRectangleIntersection(p, r) {\n    return p.x >= r.x && p.x <= r.x2 && p.y >= r.y && p.y <= r.y2;\n}\n/**\n * 计算两个坐标点之间的距离\n * @method pointDistance\n * @param   {point} _p1\n * @param   {point} _p2\n * @return  Boolean\n * @static\n */\nfunction pointDistance(_p1, _p2) {\n    var _dx = _p2.x - _p1.x,\n        _dy = _p2.y - _p1.y,\n        _dist = Math.sqrt(_dx * _dx + _dy * _dy);\n    ;\n    return _dist;\n}\n/**\n * 计算两个坐标点之间的角度\n * @method pointAngle\n * @param   {point} _p1\n * @param   {point} _p2\n * @return  Boolean\n * @static\n */\nfunction pointAngle(_p1, _p2) {\n    var angle = Math.atan2(_p2.y - _p1.y, _p2.x - _p1.x) * 180 / Math.PI;\n    if (angle < 0) {\n        angle = 360 + angle;\n    }\n\n    return angle;\n}\n\n/**\n * 从长度和角度求坐标点\n * @method  distanceAngleToPoint\n * @param  {Number} _distance\n * @param  {Number} _angle\n * @return Point\n * @static\n */\nfunction distanceAngleToPoint(_distance, _angle) {\n    var _radian = _angle * Math.PI / 180;\n    return {\n        x: Math.cos(_radian) * _distance,\n        y: Math.sin(_radian) * _distance\n    };\n}\n/**\n * 从角度获取弧度\n * @method  radians\n * @param   {Number} _angle\n * @return  {Number}\n * @static\n */\nfunction radians(_angle) {\n    return _angle * Math.PI / 180;\n}\n/**\n * 从弧度获取角度\n * @method  degree\n * @param   {Number} _radians\n * @return  {Number}\n * @static\n */\nfunction degree(_radians) {\n    return _radians / Math.PI * 180;\n}\n/**\n * 判断两个矩形是否有交集\n * @method intersectRect\n * @param   {rect_Object}   r1\n * @param   {rect_Object}   r2\n * @return  {Boolean}\n */\nfunction intersectRect(r1, r2) {\n    return !(r2.x > r1.x + r1.width || r2.x + r2.width < r1.x || r2.y > r1.y + r1.height || r2.y + r2.height < r1.y);\n}\n\nfunction fixEndAngle(startAngle, endAngle) {\n    if (endAngle < startAngle) {\n        endAngle += 360;\n    }\n    return endAngle;\n}\n\nfunction pointPlus(p1, p2) {\n    return {\n        x: p1.x + p2.x,\n        y: p1.y + p2.y\n    };\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseFinance = parseFinance;\n\n\n/**\n * 取小数点的N位\n * <br />JS 解析 浮点数的时候，经常出现各种不可预知情况，这个函数就是为了解决这个问题\n * @method  parseFinance\n * @static\n * @param   {number}    _i\n * @param   {int}       _dot  default = 2\n * @return  number\n */\nfunction parseFinance(_i, _dot) {\n  _i = parseFloat(_i) || 0;\n  typeof _dot == 'undefined' && (_dot = 2);\n  _i && (_i = parseFloat(_i.toFixed(_dot)));\n  return _i;\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _geometry = require('../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar PointAt = function () {\n    function PointAt(width, height, point) {\n        _classCallCheck(this, PointAt);\n\n        this.width = width;\n        this.height = height;\n        this.point = point;\n\n        this.cx = this.width / 2;\n        this.cy = this.height / 2;\n\n        this.cpoint = { x: this.cx, y: this.cy };\n\n        this.offsetX = 20;\n        this.offsetY = 20;\n\n        this.colors = ['#f12575', '#da432e', '#f3a42d', '#19af89', '#24a3ea', '#b56be8'];\n\n        this.init();\n    }\n\n    _createClass(PointAt, [{\n        key: 'setDebug',\n        value: function setDebug(stage) {\n            this.stage = stage;\n\n            this.layer = new _konva2.default.Layer();\n\n            var i = 0;\n\n            for (var key in this.rects) {\n\n                var item = this.rects[key];\n                var params = _jsonUtilsx2.default.clone(item);\n                params.fill = this.colors[i % this.colors.length];\n\n                var rect = new _konva2.default.Rect(params);\n\n                this.layer.add(rect);\n\n                i++;\n            }\n\n            this.stage.add(this.layer);\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            this.leftTop = {\n                x: 0,\n                y: 0,\n                width: this.cx + this.offsetX,\n                height: this.cy + this.offsetY\n            };\n            this.leftTop.x2 = this.leftTop.x + this.leftTop.width;\n            this.leftTop.y2 = this.leftTop.y + this.leftTop.height;\n\n            this.rightTop = {\n                x: this.cx - this.offsetX,\n                y: 0,\n                width: this.cx + this.offsetX,\n                height: this.cy + this.offsetY\n            };\n            this.rightTop.x2 = this.rightTop.x + this.rightTop.width;\n            this.rightTop.y2 = this.rightTop.y + this.rightTop.height;\n\n            this.leftBottom = {\n                x: 0,\n                y: this.cy - this.offsetY,\n                width: this.cx + this.offsetX,\n                height: this.cy + this.offsetY\n            };\n            this.leftBottom.x2 = this.leftBottom.x + this.leftBottom.width;\n            this.leftBottom.y2 = this.leftBottom.y + this.leftBottom.height;\n\n            this.rightBottom = {\n                x: this.cx - this.offsetX,\n                y: this.cy - this.offsetY,\n                width: this.cx + this.offsetX,\n                height: this.cy + this.offsetY\n            };\n            this.rightBottom.x2 = this.rightBottom.x + this.rightBottom.width;\n            this.rightBottom.y2 = this.rightBottom.y + this.rightBottom.height;\n\n            this.rects = {\n                leftTop: this.leftTop,\n                rightTop: this.rightTop,\n                leftBottom: this.leftBottom,\n                rightBottom: this.rightBottom\n            };\n        }\n    }, {\n        key: 'isLeftTop',\n        value: function isLeftTop() {\n            return geometry.pointRectangleIntersection(this.point, this.leftTop) ? 1 : 0;\n        }\n    }, {\n        key: 'isRightTop',\n        value: function isRightTop() {\n            return geometry.pointRectangleIntersection(this.point, this.rightTop) ? 2 : 0;\n        }\n    }, {\n        key: 'isRightBottom',\n        value: function isRightBottom() {\n            return geometry.pointRectangleIntersection(this.point, this.rightBottom) ? 4 : 0;\n        }\n    }, {\n        key: 'isLeftBottom',\n        value: function isLeftBottom() {\n            return geometry.pointRectangleIntersection(this.point, this.leftBottom) ? 8 : 0;\n        }\n    }, {\n        key: 'auto',\n        value: function auto() {\n            var r = this.isLeftTop() + this.isRightTop() + this.isRightBottom() + this.isLeftBottom();\n            return r;\n        }\n    }, {\n        key: 'autoAngle',\n        value: function autoAngle() {\n            var angle = geometry.pointAngle(this.cpoint, this.point),\n                r = '';\n\n            if (angle >= 0 && angle <= 90) {\n                r = PointAt.DIRE_NAME.rightBottom;\n            } else if (angle > 90 && angle <= 180) {\n                r = PointAt.DIRE_NAME.leftBottom;\n            } else if (angle > 180 && angle <= 270) {\n                r = PointAt.DIRE_NAME.leftTop;\n            } else {\n                r = PointAt.DIRE_NAME.rightTop;\n            }\n\n            return r;\n        }\n    }]);\n\n    return PointAt;\n}();\n\nexports.default = PointAt;\n\n\nPointAt.DIRE_NAME = {\n    leftTop: 1,\n    rightTop: 2,\n    rightBottom: 4,\n    leftBottom: 8,\n\n    topCenter: 3,\n    rightMid: 6,\n    bottomCenter: 12,\n    leftMid: 9\n};\n\nPointAt.DIRE_NUM = {\n    '1': 'leftTop',\n    '2': 'rightTop',\n    '4': 'rightBottom',\n    '8': 'leftBottom',\n\n    '3': 'topCenter',\n    '6': 'rightMid',\n    '9': 'leftMid',\n    '12': 'bottomCenter'\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _vischartbase = require('./common/vischartbase.js');\n\nvar _vischartbase2 = _interopRequireDefault(_vischartbase);\n\nvar _index = require('./dount/index.js');\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _index3 = require('./gauge/index.js');\n\nvar _index4 = _interopRequireDefault(_index3);\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _constant = require('./common/constant.js');\n\nvar constant = _interopRequireWildcard(_constant);\n\nvar _legend = require('./common/legend.js');\n\nvar _legend2 = _interopRequireDefault(_legend);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar VisChart = function (_VisChartBase) {\n    _inherits(VisChart, _VisChartBase);\n\n    function VisChart(box, width, height) {\n        _classCallCheck(this, VisChart);\n\n        var _this = _possibleConstructorReturn(this, (VisChart.__proto__ || Object.getPrototypeOf(VisChart)).call(this, box, width, height));\n\n        _this.ins = [];\n        _this.legend = null;\n\n        _this.init();\n        return _this;\n    }\n\n    _createClass(VisChart, [{\n        key: 'init',\n        value: function init() {\n            //console.log( 'VisChartBase init', Date.now(), this.width, this.height, this.canvas );\n\n            if (!this.box) return;\n\n            this.stage = new _konva2.default.Stage({\n                container: this.box,\n                width: this.width,\n                height: this.height\n            });\n\n            this.customWidth && (this.box.style.width = this.customWidth + 'px');\n            this.customHeight && (this.box.style.height = this.customHeight + 'px');\n\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(data) {\n            var _this2 = this;\n\n            this.data = data;\n\n            if (!_jsonUtilsx2.default.jsonInData(this.data, 'series')) return;\n            this.ins.map(function (item) {\n                item.destroy();\n            });\n\n            //console.log( ju );\n\n            this.stage.removeChildren();\n\n            //console.log( 'update data', data );\n\n            if (_jsonUtilsx2.default.jsonInData(this.data, 'legend.data') && this.data.legend.data.length) {\n                this.legend = new _legend2.default(this.box, this.width, this.height);\n                this.legend.setStage(this.stage);\n                this.legend.setOptions({\n                    onChange: function onChange(group) {\n                        //console.log( 'legend onchange', group );\n                        _this2.initChart();\n                    }\n                });\n                this.legend.update(this.data.legend);\n            }\n            this.initChart();\n            return this;\n        }\n    }, {\n        key: 'initChart',\n        value: function initChart() {\n            var _this3 = this;\n\n            this.ins.map(function (item) {\n                item.destroy();\n            });\n\n            this.ins = [];\n\n            this.data.series.map(function (val, key) {\n                //console.log( val, constant );\n                var ins = void 0;\n\n                switch (val.type) {\n                    case constant.CHART_TYPE.dount:\n                        {\n                            ins = new _index2.default(_this3.box, _this3.width, _this3.height);\n                            break;\n                        }\n                    case constant.CHART_TYPE.gauge:\n                        {\n                            ins = new _index4.default(_this3.box, _this3.width, _this3.height);\n                            break;\n                        }\n                }\n\n                if (ins) {\n                    _this3.legend && ins.setLegend(_this3.legend);\n                    _this3.options && ins.setOptions(_this3.options);\n                    ins.setStage(_this3.stage);\n                    ins.update(_this3.getLegendData(val), _jsonUtilsx2.default.clone(_this3.data));\n                    _this3.ins.push(ins);\n                }\n            });\n        }\n    }, {\n        key: 'getLegendData',\n        value: function getLegendData(data) {\n            data = _jsonUtilsx2.default.clone(data);\n\n            var tmp = [];\n\n            if (this.legend && this.legend.group && this.legend.group.length) {\n                //console.log( 'getLegendData', this.legend.group, 111111111 );\n                this.legend.group.map(function (item, key) {\n                    if (!item.disabled) {\n                        tmp.push(data.data[key]);\n                    }\n                });\n                data.data = tmp;\n            }\n\n            return data;\n        }\n    }]);\n\n    return VisChart;\n}(_vischartbase2.default);\n\nexports.default = VisChart;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _vischartbase = require('../common/vischartbase.js');\n\nvar _vischartbase2 = _interopRequireDefault(_vischartbase);\n\nvar _geometry = require('../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _pointat = require('../common/pointat.js');\n\nvar _pointat2 = _interopRequireDefault(_pointat);\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _utils = require('../common/utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nvar _iconcircle = require('../icon/iconcircle.js');\n\nvar _iconcircle2 = _interopRequireDefault(_iconcircle);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Dount = function (_VisChartBase) {\n    _inherits(Dount, _VisChartBase);\n\n    function Dount(box, width, height) {\n        _classCallCheck(this, Dount);\n\n        var _this = _possibleConstructorReturn(this, (Dount.__proto__ || Object.getPrototypeOf(Dount)).call(this, box, width, height));\n\n        _this.name = 'Dount ' + Date.now();\n\n        _this.outPercent = .53;\n        _this.inPercent = .37;\n\n        _this.circleLinePercent = .34;\n        _this.circlePercent = .31;\n        _this.circleLineRotation = 0;\n        _this.circleLineRotationStep = 4;\n\n        _this.animationStep = 8;\n        _this.angleStep = 5;\n\n        _this.textHeight = 26;\n        _this.lineOffset = 50;\n\n        _this.path = [];\n\n        _this.textOffset = 4;\n\n        _this.lineColor = '#24a3ea';\n\n        _this.lineRange = {\n            \"1\": [],\n            \"2\": [],\n            \"4\": [],\n            \"8\": []\n        };\n\n        _this.lineWidth = 45;\n        _this.lineSpace = 10;\n        _this.lineAngle = 35;\n        _this.lineHeight = 21;\n        _this.lineCurveLength = 40;\n\n        _this.loopSort = [4, 8, 1, 2];\n\n        _this.init();\n        return _this;\n    }\n\n    _createClass(Dount, [{\n        key: 'init',\n        value: function init() {\n            this.calcLayoutPosition();\n\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(data, allData) {\n            _get(Dount.prototype.__proto__ || Object.getPrototypeOf(Dount.prototype), 'update', this).call(this, data, allData);\n\n            this.data = data;\n            this.allData = allData;\n\n            if (!_jsonUtilsx2.default.jsonInData(this.data, 'data')) return;\n\n            this.calcDataPosition();\n            this.initDataLayout();\n\n            //console.log( 'dount update', this.data, this, utils );\n\n            this.animation();\n            this.animationCircleLine();\n\n            return this;\n        }\n    }, {\n        key: 'reset',\n        value: function reset() {\n            this.path.map(function (val) {\n                val.pathData = [];\n            });\n        }\n    }, {\n        key: 'animationCircleLine',\n        value: function animationCircleLine() {\n            var _this2 = this;\n\n            if (this.isDestroy) return;\n            if (!this.circleLine) return;\n\n            this.circleLineRotation += this.circleLineRotationStep;\n\n            this.circleLine.rotation(this.circleLineRotation);\n            this.stage.add(this.layoutLayer);\n\n            window.requestAnimationFrame(function () {\n                _this2.animationCircleLine();\n            });\n        }\n    }, {\n        key: 'animation',\n        value: function animation() {\n            var _this3 = this;\n\n            if (this.isDestroy) return;\n\n            if (this.isDone) return;\n            //this.countAngle = this.totalAngle;\n\n            var tmp = void 0,\n                tmppoint = void 0,\n                step = this.angleStep;\n\n            this.countAngle += this.animationStep;\n            //this.countAngle += 350;\n\n            if (this.countAngle >= this.totalAngle) {\n                this.countAngle = this.totalAngle;\n                this.isDone = 1;\n            }\n\n            this.reset();\n\n            for (var i = this.path.length - 1; i >= 0; i--) {\n                //for( let i = 0; i < this.path.length; i++ ){\n                //let i = 2;\n                var item = this.path[i];\n\n                //console.log( i, item );\n\n                var tmpAngle = this.countAngle;\n\n                if (tmpAngle >= item.itemData.endAngle) {\n                    tmpAngle = item.itemData.endAngle;\n                }\n\n                if (tmpAngle < item.itemData.startAngle) continue;\n\n                item.pathData.push('M');\n                for (var _i = item.itemData.startAngle;; _i += step) {\n                    if (_i >= tmpAngle) _i = tmpAngle;\n\n                    tmppoint = tmp = geometry.distanceAngleToPoint(this.outRadius, _i);\n                    item.pathData.push([tmppoint.x, tmppoint.y].join(',') + ',');\n                    if (_i == item.itemData.startAngle) item.pathData.push('L');\n\n                    if (_i >= tmpAngle) break;\n                }\n                for (var _i2 = tmpAngle;; _i2 -= step) {\n                    if (_i2 <= item.itemData.startAngle) _i2 = item.itemData.startAngle;\n\n                    tmppoint = tmp = geometry.distanceAngleToPoint(this.inRadius, _i2);\n                    item.pathData.push([tmppoint.x, tmppoint.y].join(',') + ',');\n                    if (_i2 == item.itemData.startAngle) break;\n                }\n\n                item.pathData.push('z');\n\n                item.path.setData(item.pathData.join(''));\n            }\n            this.layer.map(function (val, key) {\n                _this3.stage.add(val);\n                val.setZIndex(_this3.layer.length - key);\n            });\n\n            window.requestAnimationFrame(function () {\n                _this3.animation();\n            });\n\n            if (this.isDone) {\n                window.requestAnimationFrame(function () {\n                    _this3.animationLine();\n                });\n            }\n        }\n    }, {\n        key: 'drawCircle',\n        value: function drawCircle() {\n            this.circleRadius = Math.ceil(this.circlePercent * this.min / 2);\n\n            this.circle = new _konva2.default.Circle({\n                x: this.fixCx(),\n                y: this.fixCy(),\n                radius: this.circleRadius,\n                stroke: this.lineColor,\n                strokeWidth: 2.5,\n                fill: '#ffffff00'\n            });\n            this.layoutLayer.add(this.circle);\n        }\n    }, {\n        key: 'drawCircleLine',\n        value: function drawCircleLine() {\n            this.circleLineRadius = Math.ceil(this.circleLinePercent * this.min / 2);\n\n            var points = [];\n            points.push('M');\n            for (var i = 90; i <= 180; i++) {\n                var tmp = geometry.distanceAngleToPoint(this.circleLineRadius, i);\n                points.push([tmp.x, tmp.y].join(',') + ',');\n                if (i == 90) {\n                    points.push('L');\n                }\n            }\n            points.push('M');\n            for (var _i3 = 270; _i3 <= 360; _i3++) {\n                var _tmp = geometry.distanceAngleToPoint(this.circleLineRadius, _i3);\n                points.push([_tmp.x, _tmp.y].join(',') + ',');\n                if (_i3 == 270) {\n                    points.push('L');\n                }\n            }\n\n            this.circleLine = new _konva2.default.Path({\n                data: points.join(''),\n                x: this.fixCx(),\n                y: this.fixCy(),\n                stroke: this.lineColor,\n                strokeWidth: 2.5,\n                fill: '#ffffff00'\n            });\n\n            this.layoutLayer.add(this.circleLine);\n        }\n    }, {\n        key: 'initDataLayout',\n        value: function initDataLayout() {\n            var _this4 = this;\n\n            this.layer = [];\n            this.path = [];\n            this.line = [];\n\n            this.layoutLayer = new _konva2.default.Layer();\n\n            this.drawCircle();\n            this.drawCircleLine();\n\n            this.stage.add(this.layoutLayer);\n\n            this.data.data.map(function (val, key) {\n                var color = _this4.colors[key % _this4.colors.length];\n\n                if (_jsonUtilsx2.default.jsonInData(val, 'itemStyle.color')) {\n                    //path.fill( val.itemStyle.color );\n                    color = val.itemStyle.color;\n                }\n\n                var path = new _konva2.default.Path({\n                    x: _this4.fixCx(),\n                    y: _this4.fixCy(),\n                    strokeWidth: 1,\n                    stroke: color,\n                    data: '',\n                    fill: color\n                });\n\n                /*\n                console.log( \n                    key % this.colors.length\n                    , this.colors[ key % this.colors.length] \n                );\n                */\n\n                var tmp = {\n                    path: path,\n                    pathData: [],\n                    itemData: val\n                };\n\n                _this4.path.push(tmp);\n\n                var line = new _konva2.default.Line({\n                    x: _this4.fixCx(),\n                    y: _this4.fixCy(),\n                    points: [0, 0, 0, 0],\n                    stroke: '#ffffff',\n                    strokeWidth: 2\n                });\n                _this4.line.push(line);\n\n                var layer = new _konva2.default.Layer();\n                layer.add(path);\n                layer.add(line);\n\n                _this4.layer.push(layer);\n            });\n            this.layer.map(function (val, key) {\n                _this4.stage.add(val);\n            });\n\n            /*\n            window.requestAnimationFrame( ()=>{ this.tmpfunc() } );\n            */\n\n            return this;\n        }\n    }, {\n        key: 'calcDataPosition',\n        value: function calcDataPosition() {\n            var _this5 = this;\n\n            if (!this.data) return;\n\n            var total = 0,\n                tmp = 0;\n\n            this.data.data.map(function (val) {\n                total += val.value;\n            });\n            this.total = total;\n\n            this.data.data.map(function (val) {\n                val._percent = utils.parseFinance(val.value / total);\n                tmp = utils.parseFinance(tmp + val._percent);\n                val._totalPercent = tmp;\n\n                val.percent = parseInt(val._percent * 100);\n\n                val.endAngle = _this5.totalAngle * val._totalPercent;\n            });\n\n            //修正浮点数精确度\n            if (this.data.data.length) {\n                var item = this.data.data[this.data.data.length - 1];\n                tmp = tmp - item._percent;\n\n                item._percent = 1 - tmp;\n                item.percent = parseInt(item._percent * 100);\n                item._totalPercent = 1;\n                item.endAngle = this.totalAngle;\n            }\n\n            this.lineRange = {\n                \"1\": [],\n                \"2\": [],\n                \"4\": [],\n                \"8\": []\n                //计算开始角度, 计算指示线的2端\n            };this.data.data.map(function (val, key) {\n                if (!key) {\n                    val.startAngle = 0;\n                } else {\n                    val.startAngle = _this5.data.data[key - 1].endAngle;\n                }\n\n                val.midAngle = val.startAngle + (val.endAngle - val.startAngle) / 2;\n\n                val.lineStart = geometry.distanceAngleToPoint(_this5.outRadius, val.midAngle);\n                val.lineEnd = geometry.distanceAngleToPoint(_this5.outRadius + _this5.lineLength, val.midAngle);\n\n                val.textPoint = geometry.distanceAngleToPoint(_this5.outRadius + _this5.lineLength, val.midAngle);\n\n                val.pointDirection = new _pointat2.default(_this5.fixWidth(), _this5.fixHeight(), geometry.pointPlus(val.textPoint, _this5.cpoint));\n                var lineAngle = val.pointDirection.autoAngle();\n                val.lineExpend = _jsonUtilsx2.default.clone(val.lineEnd);\n\n                switch (lineAngle) {\n                    case 1:\n                    case 8:\n                        {\n                            //val.lineEnd.x = this.lineLeft;\n                            val.lineEnd.x = -(_this5.outRadius + _this5.lineSpace);\n\n                            var _tmp2 = geometry.pointDistance(val.lineStart, val.lineEnd);\n                            if (_tmp2 > _this5.lineCurveLength) {\n                                var tmpAngle = geometry.pointAngle(val.lineStart, val.lineEnd),\n                                    tmpPoint = geometry.distanceAngleToPoint(_this5.lineCurveLength, tmpAngle);\n                                tmpPoint = geometry.pointPlus(tmpPoint, val.lineStart);\n\n                                val.lineEnd.x = tmpPoint.x;\n                            }\n\n                            val.lineExpend.x = val.lineEnd.x - _this5.lineWidth;\n\n                            break;\n                        }\n                    default:\n                        {\n                            val.lineEnd.x = _this5.outRadius + _this5.lineSpace;\n                            var _tmp3 = geometry.pointDistance(val.lineStart, val.lineEnd);\n                            if (_tmp3 > _this5.lineCurveLength) {\n                                var _tmpAngle = geometry.pointAngle(val.lineStart, val.lineEnd),\n                                    _tmpPoint = geometry.distanceAngleToPoint(_this5.lineCurveLength, _tmpAngle);\n                                _tmpPoint = geometry.pointPlus(_tmpPoint, val.lineStart);\n\n                                val.lineEnd.x = _tmpPoint.x;\n                            }\n\n                            val.lineExpend.x = val.lineEnd.x + _this5.lineWidth;\n                            break;\n                        }\n                }\n\n                _this5.lineRange[lineAngle].push(val);\n            });\n\n            this.loopSort.map(function (key) {\n                var item = _this5.lineRange[key];\n                if (!(item && item.length && item.length > 1)) return;\n                var needFix = void 0;\n                for (var i = 1; i < item.length; i++) {\n                    var pre = item[i - 1],\n                        cur = item[i];\n                    if (Math.abs(cur.lineEnd.y - pre.lineEnd.y) < _this5.lineHeight) {\n                        needFix = 1;\n                        break;\n                    }\n                }\n                switch (key) {\n                    case 1:\n                        {\n                            var tmpY = item[0].lineEnd.y;\n                            //console.log( item );\n                            for (var _i4 = item.length - 2; _i4 >= 0; _i4--) {\n                                var _pre = item[_i4 + 1],\n                                    _cur = item[_i4];\n                                if (Math.abs(_pre.lineEnd.y - _cur.lineEnd.y) < _this5.lineHeight || _cur.lineEnd.y <= _pre.lineEnd.y) {\n                                    tmpY = _pre.lineEnd.y + _this5.lineHeight;\n                                    _cur.lineEnd.y = tmpY;\n\n                                    if (_cur.lineEnd.y < _cur.lineStart.y) {\n                                        //tmpY = cur.lineStart.y + this.lineHeight;\n                                        //cur.lineEnd.y = tmpY;\n                                    }\n                                    _cur.lineExpend.y = tmpY;\n                                }\n                            }\n                            break;\n                        }\n                    case 2:\n                        {\n                            var _tmpY = item[0].lineEnd.y;\n                            for (var _i5 = 1; _i5 < item.length; _i5++) {\n                                var _pre2 = item[_i5 - 1],\n                                    _cur2 = item[_i5],\n                                    zero = item[0];\n\n                                if (Math.abs(_pre2.lineEnd.y + _this5.fixCy()) < _this5.lineHeight) {\n                                    _pre2.lineExpend.y = _pre2.lineEnd.y = _pre2.lineExpend.y + _this5.lineHeight;\n                                }\n                                if (Math.abs(_pre2.lineEnd.y - _cur2.lineEnd.y) < _this5.lineHeight || _cur2.lineEnd.y <= _pre2.lineEnd.y) {\n\n                                    _tmpY = _pre2.lineEnd.y + _this5.lineHeight;\n                                    _cur2.lineEnd.y = _tmpY;\n\n                                    if (_cur2.lineEnd.y < _cur2.lineStart.y) {\n                                        //tmpY = cur.lineStart.y + this.lineHeight;\n                                        //cur.lineEnd.y = tmpY;\n                                    }\n                                    _cur2.lineExpend.y = _tmpY;\n                                }\n                            }\n\n                            break;\n                        }\n                    case 4:\n                        {\n                            var _tmpY2 = item[0].lineEnd.y;\n                            for (var _i6 = 1; _i6 < item.length; _i6++) {\n                                var _pre3 = item[_i6 - 1],\n                                    _cur3 = item[_i6],\n                                    _zero = item[0];\n                                if (Math.abs(_pre3.lineEnd.y - _cur3.lineEnd.y) < _this5.lineHeight || _cur3.lineEnd.y <= _pre3.lineEnd.y) {\n                                    //console.log( pre.lineEnd.y, cur.lineEnd.y );\n                                    _tmpY2 = _pre3.lineEnd.y + _this5.lineHeight;\n                                    _cur3.lineEnd.y = _tmpY2;\n\n                                    if (_cur3.lineEnd.y < _cur3.lineStart.y) {\n                                        _tmpY2 = _cur3.lineStart.y + _this5.lineHeight;\n                                        _cur3.lineEnd.y = _tmpY2;\n                                    }\n                                    _cur3.lineExpend.y = _tmpY2;\n                                }\n                            }\n                            break;\n                        }\n                    case 8:\n                        {\n                            var _tmpY3 = item[item.length - 1].lineEnd.y;\n                            for (var _i7 = item.length - 2; _i7 > 0; _i7--) {\n                                var _pre4 = item[_i7 + 1],\n                                    _cur4 = item[_i7];\n                                if (Math.abs(_pre4.lineEnd.y - _cur4.lineEnd.y) < _this5.lineHeight || _cur4.lineEnd.y <= _pre4.lineEnd.y) {\n                                    _tmpY3 = _pre4.lineEnd.y + _this5.lineHeight;\n                                    _cur4.lineEnd.y = _tmpY3;\n\n                                    if (_cur4.lineEnd.y < _cur4.lineStart.y) {\n                                        _cur4.lineEnd.y = _cur4.lineStart.y + _this5.lineHeight;\n                                    }\n                                    _cur4.lineExpend.y = _cur4.lineEnd.y;\n                                }\n                            }\n\n                            break;\n                        }\n                }\n            });\n        }\n    }, {\n        key: 'animationLine',\n        value: function animationLine() {\n            var _this6 = this;\n\n            if (this.lineLengthCount >= this.lineLength) {\n                return;\n            }\n            this.lineLengthCount = this.lineLength;\n\n            this.lineLengthCount += this.lineLengthStep;\n\n            if (this.lineLengthCount >= this.lineLength) {\n                this.lineLengthCount = this.lineLength;\n            }\n\n            for (var i = 0; i < this.path.length; i++) {\n                var path = this.path[i];\n                var layer = this.layer[i];\n\n                //console.log( path, path.itemData.pointDirection.auto(), path.itemData.pointDirection.autoAngle()  );\n\n                //let lineEnd = geometry.distanceAngleToPoint( this.outRadius + this.lineLengthCount, path.itemData.midAngle );\n                var lineEnd = path.itemData.lineEnd;\n                var lineExpend = path.itemData.lineExpend;\n\n                var line = this.line[i];\n                line.points([path.itemData.lineStart.x, path.itemData.lineStart.y, lineEnd.x, lineEnd.y, lineExpend.x, lineExpend.y]);\n\n                if (this.lineLengthCount >= this.lineLength) {\n\n                    /*\n                    */\n                    this.addText(path, layer);\n                    this.addIcon(path, layer);\n                } else {\n                    window.requestAnimationFrame(function () {\n                        _this6.animationLine();\n                    });\n                }\n\n                this.stage.add(layer);\n            }\n        }\n    }, {\n        key: 'addIcon',\n        value: function addIcon(path, layer) {\n            var icon = new _iconcircle2.default(this.box, this.fixWidth(), this.fixHeight());\n            icon.setOptions({\n                stage: this.stage,\n                layer: layer,\n                cx: this.fixCx(),\n                cy: this.fixCy()\n            });\n            icon.update(path.itemData.lineExpend);\n        }\n    }, {\n        key: 'addText',\n        value: function addText(path, layer) {\n            var text = new _konva2.default.Text({\n                x: 0,\n                y: 0,\n                text: path.itemData.percent + '%',\n                fill: '#a3a7f3',\n                fontFamily: 'MicrosoftYaHei',\n                fontSize: 16,\n                fontStyle: 'italic'\n            });\n\n            var textPoint = path.itemData.textPoint,\n                angleDirect = path.itemData.pointDirection.autoAngle();\n\n            textPoint = _jsonUtilsx2.default.clone(path.itemData.lineEnd);\n            textPoint.y -= text.textHeight + 1;\n\n            switch (angleDirect) {\n                case 1:\n                    {\n                        textPoint.x -= text.textWidth;\n                        break;\n                    }\n                case 2:\n                    {\n                        break;\n                    }\n                case 4:\n                    {\n                        break;\n                    }\n                case 8:\n                    {\n                        textPoint.x -= text.textWidth;\n                        break;\n                    }\n            }\n\n            var textX = this.fixCx() + textPoint.x,\n                textY = this.fixCy() + textPoint.y,\n                direct = path.itemData.pointDirection.auto();\n\n            text.x(textX);\n            text.y(textY);\n            layer.add(text);\n        }\n    }, {\n        key: 'calcLayoutPosition',\n        value: function calcLayoutPosition() {\n            //console.log( 'calcLayoutPosition', Date.now() );\n\n            this.outRadius = Math.ceil(this.outPercent * this.min / 2);\n            this.inRadius = Math.ceil(this.inPercent * this.min / 2);\n\n            this.lineLength = (Math.min(this.fixWidth(), this.fixHeight()) - this.outRadius * 2) / 2 - this.lineOffset;\n            this.lineLengthCount = 1;\n            this.lineLengthStep = .5;\n\n            this.lineLeft = this.fixCx() - this.outRadius - this.lineSpace;\n            this.lineRight = this.fixCx() + this.outRadius + this.lineSpace;\n\n            return this;\n        }\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            _get(Dount.prototype.__proto__ || Object.getPrototypeOf(Dount.prototype), 'destroy', this).call(this);\n            this.layoutLayer.remove();\n            this.layer.map(function (item) {\n                item.remove();\n            });\n            //console.log( 'destroy', Date.now() );\n        }\n    }]);\n\n    return Dount;\n}(_vischartbase2.default);\n\nexports.default = Dount;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _vischartbase = require('../common/vischartbase.js');\n\nvar _vischartbase2 = _interopRequireDefault(_vischartbase);\n\nvar _geometry = require('../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _utils = require('../common/utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar IconCircle = function (_VisChartBase) {\n    _inherits(IconCircle, _VisChartBase);\n\n    function IconCircle(box, width, height) {\n        _classCallCheck(this, IconCircle);\n\n        var _this = _possibleConstructorReturn(this, (IconCircle.__proto__ || Object.getPrototypeOf(IconCircle)).call(this, box, width, height));\n\n        _this.name = 'IconRound ' + Date.now();\n\n        _this.outRadius = 6;\n        _this.inRadius = 2.5;\n\n        _this.color = '#ffffff';\n\n        _this.max = 1.1;\n        _this.min = 0.8;\n\n        _this.step = .006;\n        _this.cur = 1;\n\n        _this.isplus = 1;\n\n        _this.init();\n        return _this;\n    }\n\n    _createClass(IconCircle, [{\n        key: 'init',\n        value: function init() {\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(point) {\n            this.point = point;\n\n            this.group = new _konva2.default.Group({\n                x: this.point.x + this.cx,\n                y: this.point.y + this.cy,\n                width: this.outRadius * 2,\n                height: this.outRadius * 2\n            });\n\n            this.circle = new _konva2.default.Circle({\n                radius: this.inRadius,\n                fill: this.color,\n                stroke: this.color,\n                x: 0,\n                y: 0\n            });\n\n            this.outcircle = new _konva2.default.Circle({\n                radius: this.outRadius,\n                fill: '#ffffff00',\n                stroke: this.color,\n                strokeWidth: 1,\n                x: 0,\n                y: 0\n            });\n\n            this.group.add(this.circle);\n            //this.group.add( this.outcircle );\n\n            this.group.scale({ x: this.cur, y: this.cur });\n\n            this.layer.add(this.group);\n\n            //window.requestAnimationFrame( ()=>{ this.animation() } );\n        }\n    }, {\n        key: 'reset',\n        value: function reset() {}\n    }, {\n        key: 'animation',\n        value: function animation() {\n            var _this2 = this;\n\n            if (this.plus) {\n                this.cur = this.cur + this.step;\n\n                if (this.cur > this.max) {\n                    this.cur = this.max;\n                    this.plus = 0;\n                }\n            } else {\n                this.cur = this.cur - this.step;\n                if (this.cur < this.min) {\n                    this.cur = this.min;\n                    this.plus = 1;\n                }\n            }\n\n            this.group.scale({ x: this.cur, y: this.cur });\n\n            this.stage.add(this.layer);\n\n            window.requestAnimationFrame(function () {\n                _this2.animation();\n            });\n        }\n    }, {\n        key: 'initDataLayout',\n        value: function initDataLayout() {}\n    }, {\n        key: 'calcDataPosition',\n        value: function calcDataPosition() {}\n    }, {\n        key: 'animationLine',\n        value: function animationLine() {}\n    }, {\n        key: 'calcLayoutPosition',\n        value: function calcLayoutPosition() {}\n    }]);\n\n    return IconCircle;\n}(_vischartbase2.default);\n\nexports.default = IconCircle;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _vischartbase = require('../common/vischartbase.js');\n\nvar _vischartbase2 = _interopRequireDefault(_vischartbase);\n\nvar _geometry = require('../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _pointat = require('../common/pointat.js');\n\nvar _pointat2 = _interopRequireDefault(_pointat);\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _utils = require('../common/utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nvar _iconround = require('../icon/iconround.js');\n\nvar _iconround2 = _interopRequireDefault(_iconround);\n\nvar _roundstatetext = require('../icon/roundstatetext.js');\n\nvar _roundstatetext2 = _interopRequireDefault(_roundstatetext);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Gauge = function (_VisChartBase) {\n    _inherits(Gauge, _VisChartBase);\n\n    function Gauge(box, width, height) {\n        _classCallCheck(this, Gauge);\n\n        var _this = _possibleConstructorReturn(this, (Gauge.__proto__ || Object.getPrototypeOf(Gauge)).call(this, box, width, height));\n\n        _this.name = 'Gauge' + Date.now();\n\n        _this.curRate = 0;\n        _this.totalNum = 0;\n        _this.totalNumStep = 5;\n\n        _this.animationStep = 40 * 1;\n\n        _this.roundRadiusPercent = .085;\n\n        _this.lineColor = '#596ea7';\n\n        _this.circleLinePercent = .26;\n        _this.circlePercent = .28;\n\n        _this.circleLineRotation = 0;\n        _this.circleLineRotationStep = 4;\n\n        _this.arcLinePercent = .39 / 2;\n\n        _this.arcOutPercent = .38 / 2;\n        _this.arcInPercent = .305 / 2;\n\n        _this.arcLabelLength = 6;\n        _this.arcTextLength = 20;\n\n        _this.arcAngle = 280;\n        _this.part = 22;\n        _this.arcTotal = 1100;\n\n        _this.textOffset = 0;\n\n        _this.arcOffset = 90 + (360 - _this.arcAngle) / 2;\n        _this.arcOffsetPad = -5;\n        _this.partLabel = _this.part / 2;\n        _this.partAngle = _this.arcAngle / _this.part;\n        _this.partNum = _this.arcTotal / _this.part;\n\n        _this.textOffsetX = -1;\n        _this.textOffsetY = -8;\n        _this.textLineLength = 6;\n\n        _this.textRectWidthPercent = .5;\n        _this.textRectHeightPercent = .11;\n\n        _this.textRoundPercent = .39;\n        _this.textRoundOffsetAngle = 160;\n        _this.textRoundPlusAngle = 110;\n        _this.textRoundMaxAngle = _this.textRoundOffsetAngle + _this.textRoundPlusAngle * 2;\n        _this.roundStatusRaidus = 30;\n        _this.textRoundAngle = [{\n            angle: _this.textRoundOffsetAngle,\n            text: '低',\n            point: {},\n            min: 0,\n            max: 100,\n            radius: _this.roundStatusRaidus,\n            lineColor: _this.lineColor\n        }, {\n            angle: _this.textRoundOffsetAngle + _this.textRoundPlusAngle,\n            text: '中',\n            point: {},\n            min: 101,\n            max: 500,\n            radius: _this.roundStatusRaidus,\n            lineColor: _this.lineColor\n        }, {\n            angle: _this.textRoundOffsetAngle + _this.textRoundPlusAngle * 2,\n            text: '高',\n            point: {},\n            min: 501,\n            max: Math.pow(10, 10),\n            radius: _this.roundStatusRaidus,\n            lineColor: _this.lineColor\n        }];\n\n        _this.init();\n        return _this;\n    }\n\n    _createClass(Gauge, [{\n        key: 'getAttackRateAngle',\n        value: function getAttackRateAngle() {\n            var r = 0;\n\n            r = this.arcOffset + this.arcAngle * this.getAttackRatePercent();\n\n            return r;\n        }\n    }, {\n        key: 'getAttackRatePercent',\n        value: function getAttackRatePercent() {\n            var r = 0,\n                tmp = void 0;\n            if (this.curRate) {\n                tmp = this.curRate;\n                if (tmp > this.arcTotal) {\n                    tmp = this.arcTotal;\n                }\n\n                r = tmp / this.arcTotal;\n            }\n            return r;\n        }\n    }, {\n        key: 'getAttackText',\n        value: function getAttackText() {\n            var _this2 = this;\n\n            var text = '低';\n\n            if (this.curRate) {\n                this.textRoundAngle.map(function (val) {\n                    if (_this2.curRate >= val.min && _this2.curRate <= val.max) {\n                        text = val.text;\n                    }\n                });\n            }\n\n            return text + '\\u9891\\n\\u653B\\u51FB';\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            var _this3 = this;\n\n            this.textRoundRadius = this.width * this.textRoundPercent;\n\n            this.roundRadius = this.width * this.roundRadiusPercent;\n\n            this.arcInRadius = this.width * this.arcInPercent;\n            this.arcOutRadius = this.width * this.arcOutPercent;\n\n            this.arcLineRaidus = Math.ceil(this.arcLinePercent * this.max);\n\n            this.textWidth = this.textRectWidthPercent * this.width;\n            this.textHeight = 38;\n            this.textX = this.cx - this.textWidth / 2;\n            this.textY = this.cy + this.arcLineRaidus + this.arcTextLength / 2 + 2;\n\n            this.textRoundAngle.map(function (val, key) {\n                var point = geometry.distanceAngleToPoint(_this3.textRoundRadius, val.angle);\n                val.point = geometry.pointPlus(point, _this3.cpoint);\n            });\n\n            this.arcPartLineAr = [];\n            this.arcOutlinePartAr = [];\n            this.textAr = [];\n            for (var i = 0; i <= this.part; i++) {\n                var start = void 0,\n                    end = void 0,\n                    angle = void 0;\n                angle = i * this.partAngle + this.arcOffset;\n\n                if (i && i < this.part) {\n                    start = geometry.distanceAngleToPoint(this.arcInRadius, angle);\n                    end = geometry.distanceAngleToPoint(this.arcOutRadius, angle);\n\n                    this.arcPartLineAr.push('M');\n                    this.arcPartLineAr.push([start.x, start.y].join(','));\n                    this.arcPartLineAr.push('L');\n                    this.arcPartLineAr.push([end.x, end.y].join(','));\n                }\n\n                start = geometry.distanceAngleToPoint(this.arcLineRaidus, angle);\n                end = geometry.distanceAngleToPoint(this.arcLineRaidus + this.arcLabelLength, angle);\n\n                this.arcOutlinePartAr.push('M');\n                this.arcOutlinePartAr.push([start.x, start.y].join(','));\n                this.arcOutlinePartAr.push('L');\n                this.arcOutlinePartAr.push([end.x, end.y].join(','));\n\n                if (!(i * this.partNum % 100) || i === 0) {\n                    var angleOffset = 8,\n                        lengthOffset = 0;\n\n                    if (i === 0) {\n                        angleOffset = 1;\n                    }\n\n                    if (i >= 19) {\n                        angleOffset = 14;\n                    }\n                    if (i >= 21) {\n                        angleOffset = 18;\n                    }\n                    var text = {\n                        text: i * this.partNum,\n                        angle: angle - angleOffset,\n                        point: geometry.distanceAngleToPoint(this.arcLineRaidus + this.arcTextLength + lengthOffset, angle - angleOffset)\n                    };\n                    text.textPoint = new _pointat2.default(this.width, this.height, geometry.pointPlus(text.point, this.cpoint));\n\n                    this.textAr.push(text);\n                }\n            }\n        }\n    }, {\n        key: 'initRoundText',\n        value: function initRoundText() {\n            var _this4 = this;\n\n            this.textRoundAngle.map(function (val) {\n\n                val.ins = new _roundstatetext2.default(_this4.box, _this4.width, _this4.height);\n                val.ins.setOptions(Object.assign(val, {\n                    stage: _this4.stage,\n                    layer: _this4.layoutLayer\n                }));\n                val.ins.init();\n                val.ins.update(_this4.curRate);\n            });\n        }\n        /*\n        {\n        \"series\": [\n            {\n                \"type\": \"gauge\",\n                \"data\": [\n                    {\n                        \"value\": 200,\n                        \"total\": 134567,\n                        \"name\": \"完成率\"\n                    }\n                ]\n            }\n        ]\n        }\n        */\n\n    }, {\n        key: 'update',\n        value: function update(data, allData) {\n            var _this5 = this;\n\n            this.stage.removeChildren();\n\n            //console.log( 123, data );\n\n            if (data && data.data && data.data.length) {\n                data.data.map(function (val) {\n                    _this5.curRate = val.value;\n                    _this5.totalNum = val.total;\n                });\n            }\n\n            /*\n            this.curRate = 600;\n            this.totalNum = 234567;\n            */\n\n            this.initDataLayout();\n\n            //console.log( 'gauge update', this.getAttackRateAngle() )\n            this.angle = this.arcOffset + this.arcOffsetPad;\n            this.animationAngle = this.getAttackRateAngle() + this.arcOffsetPad;\n            //console.log( this.angle, this.animationAngle );\n\n            if (this.curRate) {\n                this.rateStep = Math.floor(this.curRate / (this.animationStep * 2));\n                this.animation();\n            }\n            if (this.totalNum) {\n                this.totalNumStep = Math.floor(this.totalNum / this.animationStep);\n                this.totalNumCount = 0;\n                this.animationText();\n            }\n\n            this.animationCircleLine();\n        }\n    }, {\n        key: 'animationCircleLine',\n        value: function animationCircleLine() {\n            var _this6 = this;\n\n            //console.log( 'animationCircleLine' );\n            if (this.isDestroy) return;\n            if (!this.circleLine) return;\n\n            this.circleLineRotation += this.circleLineRotationStep;\n\n            this.circleLine.rotation(this.circleLineRotation);\n            this.stage.add(this.layoutLayer);\n\n            window.requestAnimationFrame(function () {\n                _this6.animationCircleLine();\n            });\n        }\n    }, {\n        key: 'drawText',\n        value: function drawText() {\n\n            var params = {\n                text: 0 + '',\n                x: this.cx,\n                y: this.textY,\n                fontSize: 26,\n                fontFamily: 'HuXiaoBoKuHei',\n                fill: '#ffffff',\n                fontStyle: 'italic'\n            },\n                tmp = _jsonUtilsx2.default.clone(params);\n            tmp.text = this.totalNum;\n\n            this.totalText = new _konva2.default.Text(params);\n            this.totalText.x(this.cx - this.totalText.textWidth / 2);\n            this.totalText.y(this.textY + 5);\n\n            this.tmpTotalText = new _konva2.default.Text(tmp);\n        }\n    }, {\n        key: 'drawTextRect',\n        value: function drawTextRect() {\n\n            var textWidth = this.tmpTotalText.textWidth + 30,\n                textX = 0;\n            if (textWidth < 170) {\n                textWidth = 170;\n            }\n            textX = this.cx - textWidth / 2 + 2;\n\n            this.textRect = new _konva2.default.Rect({\n                fill: '#596ea7',\n                stroke: '#ffffff00',\n                strokeWidth: 0,\n                opacity: .3,\n                width: textWidth,\n                height: this.textHeight,\n                x: textX,\n                y: this.textY\n            });\n\n            var points = [];\n            points.push('M', [textX, this.textY + this.textLineLength].join(','));\n            points.push('L', [textX, this.textY].join(','));\n            points.push('L', [textX + this.textLineLength, this.textY].join(','));\n\n            points.push('M', [textX + textWidth - this.textLineLength, this.textY].join(','));\n            points.push('L', [textX + textWidth, this.textY].join(','));\n            points.push('L', [textX + textWidth, this.textY + this.textLineLength].join(','));\n\n            points.push('M', [textX + textWidth, this.textY + this.textHeight - this.textLineLength].join(','));\n            points.push('L', [textX + textWidth, this.textY + this.textHeight].join(','));\n            points.push('L', [textX + textWidth - this.textLineLength, this.textY + this.textHeight].join(','));\n\n            points.push('M', [textX + this.textLineLength, this.textY + this.textHeight].join(','));\n            points.push('L', [textX, this.textY + this.textHeight].join(','));\n            points.push('L', [textX, this.textY + this.textHeight - this.textLineLength].join(','));\n\n            this.textLinePath = new _konva2.default.Path({\n                data: points.join(''),\n                stroke: this.lineColor,\n                strokeWidth: 1\n            });\n\n            this.layoutLayer.add(this.textLinePath);\n            this.layoutLayer.add(this.textRect);\n            this.layoutLayer.add(this.totalText);\n        }\n    }, {\n        key: 'drawArcText',\n        value: function drawArcText() {\n            var _this7 = this;\n\n            if (!(this.textAr && this.textAr.length)) return;\n\n            this.textAr.map(function (val) {\n                var text = new _konva2.default.Text({\n                    x: val.point.x + _this7.cx,\n                    y: val.point.y + _this7.cy,\n                    text: val.text + '',\n                    fontSize: 11\n                    //, rotation: val.angle\n                    , fontFamily: 'MicrosoftYaHei',\n                    fill: _this7.lineColor\n                });\n                text.rotation(val.angle + 90);\n\n                _this7.layoutLayer.add(text);\n            });\n        }\n    }, {\n        key: 'drawArcLine',\n        value: function drawArcLine() {\n\n            var points = [];\n            points.push('M');\n            for (var i = this.arcOffset; i <= this.arcOffset + this.arcAngle; i += 0.5) {\n                var tmp = geometry.distanceAngleToPoint(this.arcLineRaidus, i);\n                points.push([tmp.x, tmp.y].join(',') + ',');\n                if (i == 90) {\n                    points.push('L');\n                }\n            }\n\n            this.arcLine = new _konva2.default.Path({\n                data: points.join(''),\n                x: this.cx,\n                y: this.cy,\n                stroke: this.lineColor,\n                strokeWidth: 1,\n                fill: '#ffffff00'\n            });\n\n            this.arcPartLine = new _konva2.default.Path({\n                data: this.arcPartLineAr.join(''),\n                x: this.cx,\n                y: this.cy,\n                stroke: '#00000088',\n                strokeWidth: 1,\n                fill: '#ffffff00'\n            });\n\n            this.arcOutlinePart = new _konva2.default.Path({\n                data: this.arcOutlinePartAr.join(''),\n                x: this.cx,\n                y: this.cy,\n                stroke: this.lineColor,\n                strokeWidth: 1,\n                fill: '#ffffff00'\n            });\n\n            this.layoutLayer.add(this.arcLine);\n            this.layoutLayer.add(this.arcPartLine);\n            this.layoutLayer.add(this.arcOutlinePart);\n        }\n    }, {\n        key: 'drawArc',\n        value: function drawArc() {\n\n            var params = {\n                x: this.cx,\n                y: this.cy,\n                innerRadius: this.arcInRadius,\n                outerRadius: this.arcOutRadius,\n                angle: this.arcAngle\n                //, fill: 'red'\n                , stroke: '#ffffff00',\n                strokeWidth: 0,\n                rotation: this.arcOffset,\n                fillLinearGradientStartPoint: { x: -50, y: -50 },\n                fillLinearGradientEndPoint: { x: 50, y: 50 },\n                fillLinearGradientColorStops: [0, '#ff9000', .5, '#64b185', 1, '#5a78ca']\n            };\n            this.arc = new _konva2.default.Arc(params);\n\n            this.layoutLayer.add(this.arc);\n        }\n    }, {\n        key: 'initDataLayout',\n        value: function initDataLayout() {\n            this.layer = new _konva2.default.Layer();\n            this.layoutLayer = new _konva2.default.Layer();\n\n            this.roundLine = new _konva2.default.Circle({\n                x: this.cx,\n                y: this.cy,\n                radius: this.roundRadius,\n                stroke: this.lineColor,\n                strokeWidth: 2.5,\n                fill: 'rgba( 0, 0, 0, .5 )'\n            });\n\n            this.percentText = new _konva2.default.Text({\n                x: this.cx,\n                y: this.cy,\n                text: this.getAttackText(),\n                fontSize: 18,\n                fontFamily: 'HuXiaoBoKuHei',\n                fill: '#ffffff',\n                fontStyle: 'italic'\n            });\n            this.percentText.x(this.cx - this.percentText.textWidth / 2 + this.textOffsetX);\n            this.percentText.y(this.cy - this.percentText.textHeight / 2 + this.textOffsetY);\n\n            /*\n            this.percentSymbolText = new Konva.Text( {\n                x: this.cx\n                , y: this.cy\n                , text: '%'\n                , fontSize: 17\n                , fontFamily: 'Agency FB'\n                , fill: '#c7d6ff'\n                , fontStyle: 'italic'\n            });\n            this.percentSymbolText.x( this.percentText.attrs.x  + this.percentText.textWidth );\n            this.percentSymbolText.y( this.percentText.attrs.y  + this.percentText.textHeight -  this.percentSymbolText.textHeight - 2 );\n            */\n\n            //console.log( this.percentText );\n\n            var wedge = new _konva2.default.Wedge({\n                x: 0,\n                y: -3,\n                radius: 10,\n                angle: 20,\n                fill: '#ff5a00',\n                stroke: '#ff5a00',\n                strokeWidth: 1,\n                rotation: 90\n            });\n\n            var wedge1 = new _konva2.default.Wedge({\n                x: 0,\n                y: -3,\n                radius: 10,\n                angle: 20,\n                fill: '#973500',\n                stroke: '#973500',\n                strokeWidth: 1,\n                rotation: 65\n            });\n\n            var group = new _konva2.default.Group({\n                x: this.cx,\n                y: this.cy\n            });\n\n            group.add(wedge1);\n            group.add(wedge);\n\n            this.angle = this.arcOffset - 2;\n\n            this.group = group;\n\n            this.layer.add(group);\n            this.layer.add(this.roundLine);\n            this.layer.add(this.percentText);\n            //this.layer.add( this.percentSymbolText );\n\n\n            this.drawCircle();\n            this.drawCircleLine();\n            this.drawArc();\n            this.drawArcLine();\n            this.drawArcText();\n            this.drawText();\n            this.drawTextRect();\n\n            this.initRoundText();\n\n            this.stage.add(this.layer);\n            this.stage.add(this.layoutLayer);\n        }\n    }, {\n        key: 'animation',\n        value: function animation() {\n            var _this8 = this;\n\n            if (this.isDestroy) return;\n            if (this.angle > this.animationAngle) return;\n            this.angle += this.rateStep;\n            if (this.angle >= this.animationAngle) {\n                this.angle = this.animationAngle;\n            };\n\n            var point = geometry.distanceAngleToPoint(this.roundRadius + 6, this.angle);\n            this.group.x(this.cx + point.x);\n            this.group.y(this.cy + point.y);\n            this.group.rotation(this.angle + 90);\n            this.group.rotation(this.angle + 90);\n\n            this.stage.add(this.layer);\n\n            window.requestAnimationFrame(function () {\n                _this8.animation();\n            });\n        }\n    }, {\n        key: 'animationText',\n        value: function animationText() {\n            var _this9 = this;\n\n            if (this.isDestroy) return;\n            if (this.totalNumCount >= this.totalNum) return;\n            this.totalNumCount += this.totalNumStep;\n            if (this.totalNumCount >= this.totalNum) {\n                this.totalNumCount = this.totalNum;\n            };\n\n            this.totalText.text(this.totalNumCount);\n            this.totalText.x(this.cx - this.totalText.textWidth / 2);\n            this.stage.add(this.layoutLayer);\n\n            window.requestAnimationFrame(function () {\n                _this9.animationText();\n            });\n        }\n    }, {\n        key: 'calcDataPosition',\n        value: function calcDataPosition() {}\n    }, {\n        key: 'animationLine',\n        value: function animationLine() {}\n    }, {\n        key: 'addIcon',\n        value: function addIcon(path, layer) {}\n    }, {\n        key: 'addText',\n        value: function addText(path, layer) {}\n    }, {\n        key: 'calcLayoutPosition',\n        value: function calcLayoutPosition() {}\n    }, {\n        key: 'drawCircle',\n        value: function drawCircle() {\n            this.circleRadius = Math.ceil(this.circlePercent * this.max / 2);\n\n            this.circle = new _konva2.default.Circle({\n                x: this.cx,\n                y: this.cy,\n                radius: this.circleRadius,\n                stroke: this.lineColor,\n                strokeWidth: 1,\n                fill: '#ffffff00'\n            });\n            this.layoutLayer.add(this.circle);\n        }\n    }, {\n        key: 'drawCircleLine',\n        value: function drawCircleLine() {\n            this.circleLineRadius = Math.ceil(this.circleLinePercent * this.max / 2);\n\n            var points = [];\n            points.push('M');\n            for (var i = 90; i <= 180; i++) {\n                var tmp = geometry.distanceAngleToPoint(this.circleLineRadius, i + 90);\n                points.push([tmp.x, tmp.y].join(',') + ',');\n                if (i == 90) {\n                    points.push('L');\n                }\n            }\n            points.push('M');\n            for (var _i = 270; _i <= 360; _i++) {\n                var _tmp = geometry.distanceAngleToPoint(this.circleLineRadius, _i + 90);\n                points.push([_tmp.x, _tmp.y].join(',') + ',');\n                if (_i == 270) {\n                    points.push('L');\n                }\n            }\n\n            this.circleLine = new _konva2.default.Path({\n                data: points.join(''),\n                x: this.cx,\n                y: this.cy,\n                stroke: this.lineColor,\n                strokeWidth: 1.5,\n                fill: '#ffffff00'\n            });\n\n            this.layoutLayer.add(this.circleLine);\n        }\n    }, {\n        key: 'reset',\n        value: function reset() {}\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            _get(Gauge.prototype.__proto__ || Object.getPrototypeOf(Gauge.prototype), 'destroy', this).call(this);\n            this.textRoundAngle.map(function (val) {\n                if (val.ins) val.ins.destroy();\n            });\n        }\n    }]);\n\n    return Gauge;\n}(_vischartbase2.default);\n\nexports.default = Gauge;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _vischartbase = require('../common/vischartbase.js');\n\nvar _vischartbase2 = _interopRequireDefault(_vischartbase);\n\nvar _geometry = require('../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _utils = require('../common/utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar IconRound = function (_VisChartBase) {\n    _inherits(IconRound, _VisChartBase);\n\n    function IconRound(box, width, height) {\n        _classCallCheck(this, IconRound);\n\n        var _this = _possibleConstructorReturn(this, (IconRound.__proto__ || Object.getPrototypeOf(IconRound)).call(this, box, width, height));\n\n        _this.name = 'IconRound ' + Date.now();\n\n        _this.outRadius = 6;\n        _this.inRadius = 2;\n\n        _this.color = '#ffffff';\n\n        _this.max = 1.1;\n        _this.min = 0.8;\n\n        _this.step = .006;\n        _this.cur = 1;\n\n        _this.isplus = 1;\n\n        _this.init();\n        return _this;\n    }\n\n    _createClass(IconRound, [{\n        key: 'init',\n        value: function init() {\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(point) {\n            this.point = point;\n\n            this.group = new _konva2.default.Group({\n                x: this.point.x + this.cx,\n                y: this.point.y + this.cy,\n                width: this.outRadius * 2,\n                height: this.outRadius * 2\n            });\n\n            this.circle = new _konva2.default.Circle({\n                radius: this.inRadius,\n                fill: this.color,\n                stroke: this.color,\n                x: 0,\n                y: 0\n            });\n\n            this.outcircle = new _konva2.default.Circle({\n                radius: this.outRadius,\n                fill: '#ffffff00',\n                stroke: this.color,\n                strokeWidth: 1,\n                x: 0,\n                y: 0\n            });\n\n            this.group.add(this.circle);\n            this.group.add(this.outcircle);\n\n            this.group.scale({ x: this.cur, y: this.cur });\n\n            this.layer.add(this.group);\n\n            //window.requestAnimationFrame( ()=>{ this.animation() } );\n        }\n    }, {\n        key: 'reset',\n        value: function reset() {}\n    }, {\n        key: 'animation',\n        value: function animation() {\n            var _this2 = this;\n\n            if (this.plus) {\n                this.cur = this.cur + this.step;\n\n                if (this.cur > this.max) {\n                    this.cur = this.max;\n                    this.plus = 0;\n                }\n            } else {\n                this.cur = this.cur - this.step;\n                if (this.cur < this.min) {\n                    this.cur = this.min;\n                    this.plus = 1;\n                }\n            }\n\n            this.group.scale({ x: this.cur, y: this.cur });\n\n            this.stage.add(this.layer);\n\n            window.requestAnimationFrame(function () {\n                _this2.animation();\n            });\n        }\n    }, {\n        key: 'initDataLayout',\n        value: function initDataLayout() {}\n    }, {\n        key: 'calcDataPosition',\n        value: function calcDataPosition() {}\n    }, {\n        key: 'animationLine',\n        value: function animationLine() {}\n    }, {\n        key: 'calcLayoutPosition',\n        value: function calcLayoutPosition() {}\n    }]);\n\n    return IconRound;\n}(_vischartbase2.default);\n\nexports.default = IconRound;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _vischartbase = require('../common/vischartbase.js');\n\nvar _vischartbase2 = _interopRequireDefault(_vischartbase);\n\nvar _geometry = require('../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _utils = require('../common/utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar RoundStateText = function (_VisChartBase) {\n    _inherits(RoundStateText, _VisChartBase);\n\n    function RoundStateText(box, width, height) {\n        _classCallCheck(this, RoundStateText);\n\n        var _this = _possibleConstructorReturn(this, (RoundStateText.__proto__ || Object.getPrototypeOf(RoundStateText)).call(this, width, height));\n\n        _this.name = 'RoundStateText ' + Date.now();\n\n        _this.radius = 30;\n\n        _this.textOffsetX = -2;\n        _this.textOffsetY = -1;\n\n        _this.circleLineRotation = 0;\n        _this.circleLineRotationStep = 4;\n\n        _this.curColor = '#deaf5c';\n        return _this;\n    }\n\n    _createClass(RoundStateText, [{\n        key: 'animationCircleLine',\n        value: function animationCircleLine() {\n            var _this2 = this;\n\n            if (this.isDestroy) return;\n            if (!this.circleLine) return;\n\n            this.circleLineRotation += this.circleLineRotationStep;\n\n            this.circleLine.rotation(this.circleLineRotation);\n            this.stage.add(this.layer);\n\n            window.requestAnimationFrame(function () {\n                _this2.animationCircleLine();\n            });\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            //console.log( 'RoundStateText init', this );\n            this.circleRaidus = this.radius - 5;\n\n            //this.lineColor = this.curColor;\n\n            this.initDataLayout();\n\n            this.animationCircleLine();\n\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(rate) {\n            this.rate = rate;\n\n            var color = this.lineColor;\n\n            if (rate >= this.min && rate < this.max) {\n                color = this.curColor;\n            }\n\n            this.text.fill(color);\n            this.circle.stroke(color);\n            this.circleLine.stroke(color);\n\n            return this;\n        }\n    }, {\n        key: 'initDataLayout',\n        value: function initDataLayout() {\n            this.drawText();\n            this.drawCircle();\n            this.drawCircleLine();\n        }\n    }, {\n        key: 'drawText',\n        value: function drawText() {\n            this.text = new _konva2.default.Text({\n                x: this.point.x,\n                y: this.point.y,\n                text: this.text,\n                fontSize: 32,\n                fontFamily: 'HuXiaoBoKuHei',\n                fill: this.lineColor,\n                fontStyle: 'italic'\n            });\n\n            this.text.x(this.point.x - this.text.textWidth / 2 + this.textOffsetX);\n            this.text.y(this.point.y - this.text.textHeight / 2 + this.textOffsetY);\n\n            this.layer.add(this.text);\n        }\n    }, {\n        key: 'drawCircle',\n        value: function drawCircle() {\n            this.circle = new _konva2.default.Circle({\n                x: this.point.x,\n                y: this.point.y,\n                radius: this.circleRaidus,\n                stroke: this.lineColor,\n                strokeWidth: 2,\n                fill: '#ffffff00'\n            });\n\n            this.layer.add(this.circle);\n        }\n    }, {\n        key: 'drawCircleLine',\n        value: function drawCircleLine() {\n            this.circleLineRadius = this.radius - 1;\n\n            var points = [];\n            points.push('M');\n            for (var i = 90; i <= 180; i++) {\n                var tmp = geometry.distanceAngleToPoint(this.circleLineRadius, i + 90);\n                points.push([tmp.x, tmp.y].join(',') + ',');\n                if (i == 90) {\n                    points.push('L');\n                }\n            }\n            points.push('M');\n            for (var _i = 270; _i <= 360; _i++) {\n                var _tmp = geometry.distanceAngleToPoint(this.circleLineRadius, _i + 90);\n                points.push([_tmp.x, _tmp.y].join(',') + ',');\n                if (_i == 270) {\n                    points.push('L');\n                }\n            }\n\n            this.circleLine = new _konva2.default.Path({\n                data: points.join(''),\n                x: this.point.x,\n                y: this.point.y,\n                stroke: this.lineColor,\n                strokeWidth: 2,\n                fill: '#ffffff00'\n            });\n\n            this.layer.add(this.circleLine);\n        }\n    }, {\n        key: 'reset',\n        value: function reset() {}\n    }, {\n        key: 'calcDataPosition',\n        value: function calcDataPosition() {}\n    }, {\n        key: 'animationLine',\n        value: function animationLine() {}\n    }, {\n        key: 'calcLayoutPosition',\n        value: function calcLayoutPosition() {}\n    }]);\n\n    return RoundStateText;\n}(_vischartbase2.default);\n\nexports.default = RoundStateText;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar CHART_TYPE = exports.CHART_TYPE = {\n    dount: 'dount',\n    gauge: 'gauge'\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _vischartbase = require('../common/vischartbase.js');\n\nvar _vischartbase2 = _interopRequireDefault(_vischartbase);\n\nvar _geometry = require('../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _utils = require('../common/utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Legend = function (_VisChartBase) {\n    _inherits(Legend, _VisChartBase);\n\n    function Legend(box, width, height) {\n        _classCallCheck(this, Legend);\n\n        var _this = _possibleConstructorReturn(this, (Legend.__proto__ || Object.getPrototypeOf(Legend)).call(this, box, width, height));\n\n        _this.name = 'Legend ' + Date.now();\n\n        _this.textColor = '#24a3ea';\n\n        _this.iconSpace = 5;\n\n        _this.text = [];\n        _this.icon = [];\n        _this.group = [];\n\n        return _this;\n    }\n\n    _createClass(Legend, [{\n        key: 'setStage',\n        value: function setStage(stage) {\n            _get(Legend.prototype.__proto__ || Object.getPrototypeOf(Legend.prototype), 'setStage', this).call(this, stage);\n\n            this.layer = new _konva2.default.Layer({});\n\n            stage.add(this.layer);\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            var _this2 = this;\n\n            this.data.data.map(function (item, key) {\n                var x = 0,\n                    y = 0,\n                    count = key + 1,\n                    curRow = Math.floor(key / _this2.column());\n\n                switch (_this2.direction()) {\n                    case 'bottom':\n                        {\n                            x = _this2.space() + (_this2.space() + _this2.columnWidth()) * (key % _this2.column());\n                            y = _this2.height - (_this2.row() - curRow) * (_this2.spaceY() + _this2.rowHeight());\n                            //console.log( x, y, key, this.direction(), curRow );\n                            break;\n                        }\n                }\n\n                var label = item.name || key + '';\n\n                var color = _this2.colors[key % _this2.colors.length];\n\n                if (_jsonUtilsx2.default.jsonInData(item, 'textStyle.color')) {\n                    //path.fill( val.itemStyle.color );\n                    color = item.textStyle.color;\n                }\n\n                var rect = new _konva2.default.Rect({\n                    x: x,\n                    y: y,\n                    width: _this2.itemWidth(),\n                    height: _this2.itemHeight(),\n                    fill: color\n                });\n\n                var bg = new _konva2.default.Rect({\n                    x: x,\n                    y: y,\n                    width: _this2.columnWidth(),\n                    height: _this2.rowHeight(),\n                    fill: '#ffffff00'\n                });\n\n                var text = new _konva2.default.Text({\n                    text: label,\n                    x: x + _this2.iconSpace + rect.width(),\n                    y: y,\n                    fill: _this2.textColor,\n                    fontFamily: 'MicrosoftYaHei',\n                    fontSize: 12\n                });\n\n                var group = new _konva2.default.Group();\n                group.add(bg);\n                group.add(rect);\n                group.add(text);\n\n                var data = {\n                    ele: group,\n                    item: item,\n                    text: text,\n                    disabled: false\n                };\n\n                _this2.group.push(data);\n\n                group.on('click', function () {\n                    //console.log( 'click', key, data, group, item );\n                    data.disabled = !data.disabled;\n\n                    if (data.disabled) {\n                        group.opacity(.6);\n                    } else {\n                        group.opacity(1);\n                    }\n\n                    _this2.stage.add(_this2.layer);\n\n                    _this2.onChange && _this2.onChange(_this2.group);\n                });\n\n                _this2.layer.add(group);\n            });\n            this.stage.add(this.layer);\n\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(data) {\n            this.data = data || {};\n            if (!(this.data && this.data.data && this.data.data.length)) return;\n\n            /*\n            console.log( \n                this.column()\n                , this.row()\n                , this.direction() \n                , this.outerHeight()\n                , 'columnWidth:', this.columnWidth()\n            );\n            console.log( this.width, this.width - ( this.column() - 1  + 2 ) * this.space() );\n            */\n\n            this.init();\n        }\n    }, {\n        key: 'outerHeight',\n        value: function outerHeight() {\n            return this.rowHeight() * this.row() + this.space();\n        }\n    }, {\n        key: 'total',\n        value: function total() {\n            var r = 0;\n\n            return r;\n        }\n    }, {\n        key: 'itemWidth',\n        value: function itemWidth() {\n            return this.data.itemWidth || 5;\n        }\n    }, {\n        key: 'itemHeight',\n        value: function itemHeight() {\n            return this.data.itemHeight || 5;\n        }\n    }, {\n        key: 'columnWidth',\n        value: function columnWidth() {\n            return (this.width - (this.column() - 1 + 2) * this.space()) / this.column();\n        }\n    }, {\n        key: 'column',\n        value: function column() {\n            return this.data.column || 1;\n        }\n    }, {\n        key: 'space',\n        value: function space() {\n            return this.data.space || 15;\n        }\n    }, {\n        key: 'spaceY',\n        value: function spaceY() {\n            return this.data.space || 0;\n        }\n    }, {\n        key: 'rowHeight',\n        value: function rowHeight() {\n            return this.data.rowHeight || 22;\n        }\n    }, {\n        key: 'row',\n        value: function row() {\n            return Math.ceil(this.data.data.length / this.column());\n        }\n    }, {\n        key: 'direction',\n        value: function direction() {\n            var r = 'top';\n\n            if (this.data.bottom) {\n                r = 'bottom';\n            } else if (this.data.left) {\n                r = 'left';\n            } else if (this.data.right) {\n                r = 'right';\n            }\n\n            return r;\n        }\n    }]);\n\n    return Legend;\n}(_vischartbase2.default);\n\nexports.default = Legend;","\n\nimport VisChart from 'vischart';\n\nimport fontfaceobserver from 'fontfaceobserver';\n\nlet font = new fontfaceobserver( 'HuXiaoBoKuHei' );\nfont.load().then(function () {\n\n    let size = 330;\n\n    let data = require( './data/gauge.json' );\n    let dmins = new VisChart( document.querySelector('#twoBox'), size, size );\n        dmins.addImage( './img/rate-out.png', 170, 170, 0, 0 );\n        dmins.update( data ); \n        setTimeout( ()=>{\n            //dmins.update( data ); \n        }, 5000 );\n\n}, function () {\n  console.log('Font is not available');\n});\n\n\n\n"],"sourceRoot":""}
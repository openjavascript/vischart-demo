{"version":3,"sources":["webpack:///../vischart/dist/geometry/geometry.js","webpack:///../vischart/dist/2d/common/base.js","webpack:///../vischart/dist/common/utils.js","webpack:///./src/assets/js/data/base64img.js","webpack:///../vischart/dist/common/pointat.js","webpack:///../vischart/dist/index.js","webpack:///../vischart/dist/2d/dount/index.js","webpack:///../vischart/dist/2d/icon/iconcircle.js","webpack:///../vischart/dist/2d/gauge/index.js","webpack:///../vischart/dist/2d/icon/roundstatetext.js","webpack:///../vischart/dist/common/constant.js","webpack:///../vischart/dist/2d/common/legend.js","webpack:///./src/assets/js/gauge.js"],"names":["Object","defineProperty","exports","value","pointRectangleIntersection","p","r","x","x2","y","y2","pointDistance","_p1","_p2","_dx","_dy","Math","sqrt","pointAngle","angle","atan2","PI","distanceAngleToPoint","_distance","_angle","_radian","cos","sin","radians","degree","_radians","intersectRect","r1","r2","width","height","fixEndAngle","startAngle","endAngle","pointPlus","p1","p2","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_konva2","_interopRequireDefault","__webpack_require__","_vischartbase2","obj","__esModule","default","KonvaBase","_VisChartBase","box","instance","TypeError","_classCallCheck","this","self","call","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","subClass","superClass","create","constructor","setPrototypeOf","_inherits","_this2","images","iconLayer","remove","Layer","addDestroy","data","background","map","val","addImage","url","offsetX","offsetY","rotation","isbase64","rotationBg","item","img","Image","onload","icon","image","fixCx","fixCy","add","push","offset","animationBg","stage","src","base64prefix","parseFinance","_i","_dot","parseFloat","toFixed","dountBig","dountIn","rateOut","_jsonUtilsx2","geometry","newObj","hasOwnProperty","_interopRequireWildcard","PointAt","point","cx","cy","cpoint","colors","init","layer","rects","params","clone","fill","rect","Rect","leftTop","rightTop","leftBottom","rightBottom","isLeftTop","isRightTop","isRightBottom","isLeftBottom","DIRE_NAME","topCenter","rightMid","bottomCenter","leftMid","DIRE_NUM","1","2","4","8","3","6","9","12","_get","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","undefined","parent","getter","_index2","_index4","constant","_legend2","VisChart","_this","ins","legend","_setSize","ignoreLegend","resize","update","destroy","tmpredraw","redraw","Stage","container","customWidth","style","customHeight","arguments","jsonInData","realIndex","series","sitem","clearUpdate","emptyblock","setStage","setOptions","onChange","group","initChart","_this3","type","CHART_TYPE","dount","gauge","setLegend","options","getLegendData","tmp","disabled","_base2","_pointat2","_iconcircle2","Dount","name","Date","now","outPercent","inPercent","circleLinePercent","circlePercent","circleLineRotation","circleLineRotationStep","animationStep","angleStep","textHeight","lineOffset","path","line","textOffset","lineColor","lineRange","lineWidth","lineSpace","lineAngle","lineHeight","lineCurveLength","loopSort","clearList","calcLayoutPosition","allData","countAngle","isDone","lineLengthCount","clearItems","calcVal","initText","calcDataPosition","initDataLayout","animation","inited","animationCircleLine","pathData","isDestroy","circleLine","isAnimation","layoutLayer","moveToBottom","window","requestAnimationFrame","isSeriesAnimation","totalAngle","reset","tmpAngle","itemData","arc","arcLayer","animationLine","circleRadius","ceil","min","circle","Circle","radius","stroke","strokeWidth","circleLineRadius","points","join","_tmp","Path","drawCircle","drawCircleLine","tooltipLayer","Group","visible","ii","color","itemStyle","innerRadius","inRadius","outerRadius","outRadius","Arc","Line","tooltip","Text","fontFamily","fontSize","textFill","tooltipBg","Tag","opacity","lineJoin","cornerRadius","drawTooltip","on","mousePos","getPointerPosition","setZIndex","position","textLabel","percent","text","show","batchDraw","hide","draw","_this4","lineLength","lineLengthStep","lineEnd","lineExpend","lineStart","addText","addIcon","lineicon","fixWidth","fixHeight","textar","textPoint","angleDirect","pointDirection","autoAngle","textWidth","textX","textY","auto","lineLeft","lineRight","_this5","getLabel","fontStyle","_this6","total","_percent","precision","getPrecision","round","floor","_totalPercent","_this7","midAngle","tmpPoint","_tmpAngle","_tmpPoint","pre","cur","abs","tmpY","_i2","_pre","_cur","_tmpY","_i3","_pre2","_cur2","_tmpY2","_i4","_pre3","_cur3","_tmpY3","_i5","_pre4","_cur4","IconCircle","max","step","isplus","num","outcircle","scale","plus","_roundstatetext2","Gauge","totalPostfix","offsetCy","curRate","totalNum","totalNumStep","roundRadiusPercent","arcLinePercent","arcOutPercent","arcInPercent","arcLabelLength","arcTextLength","arcAngle","part","arcTotal","arcOffset","arcOffsetPad","partLabel","partAngle","partNum","textOffsetX","textOffsetY","textLineLength","textRectWidthPercent","textRectHeightPercent","textRoundPercent","textRoundOffsetAngle","textRoundPlusAngle","textRoundMaxAngle","roundStatusRaidus","textRoundAngle","pow","getAttackRatePercent","textRoundRadius","sizeRate","roundRadius","arcInRadius","arcOutRadius","arcLineRaidus","arcPartLineAr","arcOutlinePartAr","textAr","start","end","angleOffset","rotationOffset","assign","removeChildren","animationAngle","getAttackRateAngle","updateWedge","rateStep","parseInt","totalNumCount","animationText","totalText","totalTextPostfix","totalTextGroup","letterSpacing","params1","tmpTotalText","textRect","textLinePath","_this8","arcLine","arcPartLine","arcOutlinePart","fillLinearGradientStartPoint","fillLinearGradientEndPoint","fillLinearGradientColorStops","roundLine","percentText","getAttackText","wedge","Wedge","wedge1","initRoundText","drawArc","drawArcLine","drawArcText","drawText","drawTextRect","_this9","RoundStateText","curColor","circleRaidus","rate","Legend","textColor","iconSpace","destroyList","curRow","column","direction","space","columnWidth","row","spaceY","rowHeight","label","textStyle","curgroup","itemWidth","itemHeight","bg","ele","bottom","left","right","off","Data1","DataZero","_data_base64img_js__WEBPACK_IMPORTED_MODULE_2__","fontfaceobserver__WEBPACK_IMPORTED_MODULE_1___default","a","load","then","document","querySelector","dmins","vischart__WEBPACK_IMPORTED_MODULE_0___default","addEventListener","tmpTimeout","clearTimeout","setTimeout"],"mappings":"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","file":"assets/js/gauge.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.pointRectangleIntersection = pointRectangleIntersection;\nexports.pointDistance = pointDistance;\nexports.pointAngle = pointAngle;\nexports.distanceAngleToPoint = distanceAngleToPoint;\nexports.radians = radians;\nexports.degree = degree;\nexports.intersectRect = intersectRect;\nexports.fixEndAngle = fixEndAngle;\nexports.pointPlus = pointPlus;\n\n/**\n * 判断一个点是否在矩形里面\n * @method  pointRectangleIntersection\n * @param   {point} _p\n * @param   {rect}  _r\n * @return  Boolean\n * @static\n */\nfunction pointRectangleIntersection(p, r) {\n    return p.x >= r.x && p.x <= r.x2 && p.y >= r.y && p.y <= r.y2;\n}\n/**\n * 计算两个坐标点之间的距离\n * @method pointDistance\n * @param   {point} _p1\n * @param   {point} _p2\n * @return  Boolean\n * @static\n */\nfunction pointDistance(_p1, _p2) {\n    var _dx = _p2.x - _p1.x,\n        _dy = _p2.y - _p1.y,\n        _dist = Math.sqrt(_dx * _dx + _dy * _dy);\n    ;\n    return _dist;\n}\n/**\n * 计算两个坐标点之间的角度\n * @method pointAngle\n * @param   {point} _p1\n * @param   {point} _p2\n * @return  Boolean\n * @static\n */\nfunction pointAngle(_p1, _p2) {\n    var angle = Math.atan2(_p2.y - _p1.y, _p2.x - _p1.x) * 180 / Math.PI;\n    if (angle < 0) {\n        angle = 360 + angle;\n    }\n\n    return angle;\n}\n\n/**\n * 从长度和角度求坐标点\n * @method  distanceAngleToPoint\n * @param  {Number} _distance\n * @param  {Number} _angle\n * @return Point\n * @static\n */\nfunction distanceAngleToPoint(_distance, _angle) {\n    var _radian = _angle * Math.PI / 180;\n    return {\n        x: Math.cos(_radian) * _distance,\n        y: Math.sin(_radian) * _distance\n    };\n}\n/**\n * 从角度获取弧度\n * @method  radians\n * @param   {Number} _angle\n * @return  {Number}\n * @static\n */\nfunction radians(_angle) {\n    return _angle * Math.PI / 180;\n}\n/**\n * 从弧度获取角度\n * @method  degree\n * @param   {Number} _radians\n * @return  {Number}\n * @static\n */\nfunction degree(_radians) {\n    return _radians / Math.PI * 180;\n}\n/**\n * 判断两个矩形是否有交集\n * @method intersectRect\n * @param   {rect_Object}   r1\n * @param   {rect_Object}   r2\n * @return  {Boolean}\n */\nfunction intersectRect(r1, r2) {\n    return !(r2.x > r1.x + r1.width || r2.x + r2.width < r1.x || r2.y > r1.y + r1.height || r2.y + r2.height < r1.y);\n}\n\nfunction fixEndAngle(startAngle, endAngle) {\n    if (endAngle < startAngle) {\n        endAngle += 360;\n    }\n    return endAngle;\n}\n\nfunction pointPlus(p1, p2) {\n    return {\n        x: p1.x + p2.x,\n        y: p1.y + p2.y\n    };\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _vischartbase = require('vischartbase');\n\nvar _vischartbase2 = _interopRequireDefault(_vischartbase);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar KonvaBase = function (_VisChartBase) {\n    _inherits(KonvaBase, _VisChartBase);\n\n    function KonvaBase(box, width, height) {\n        _classCallCheck(this, KonvaBase);\n\n        return _possibleConstructorReturn(this, (KonvaBase.__proto__ || Object.getPrototypeOf(KonvaBase)).call(this, box, width, height));\n    }\n\n    _createClass(KonvaBase, [{\n        key: 'loadImage',\n        value: function loadImage() {\n            var _this2 = this;\n\n            if (this.images.length) return;\n\n            if (this.iconLayer) this.iconLayer.remove();\n            this.iconLayer = new _konva2.default.Layer();\n            this.addDestroy(this.iconLayer);\n\n            this.images = [];\n\n            if (this.data && this.data.background && this.data.background.length) {\n                this.data.background.map(function (val) {\n                    _this2.addImage(val.url, val.width, val.height, val.offsetX || 0, val.offsetY || 0, val.rotation || 0, val.isbase64);\n                });\n            }\n\n            this.rotationBg = [];\n\n            this.images.map(function (item) {\n                //console.log( 'item', item );\n\n                var img = new Image();\n                img.onload = function () {\n                    var width = item.width || img.width,\n                        height = item.height || img.height;\n\n                    var icon = new _konva2.default.Image({\n                        image: img,\n                        x: _this2.fixCx() - width / 2 + item.offsetX,\n                        y: _this2.fixCy() - height / 2 + item.offsetY,\n                        width: width,\n                        height: height\n                    });\n                    _this2.addDestroy(icon);\n\n                    _this2.iconLayer.add(icon);\n\n                    if (item.rotation) {\n                        _this2.rotationBg.push(icon);\n                        icon.x(_this2.fixCx() - width / 2 + item.offsetX + width / 2);\n                        icon.y(_this2.fixCy() - height / 2 + item.offsetY + height / 2);\n                        icon.offset({ x: width / 2, y: height / 2 });\n                        if (_this2.rotationBg.length === 1) _this2.animationBg();\n                    }\n                    _this2.stage.add(_this2.iconLayer);\n                };\n                if (item.isbase64) {\n                    img.src = (item.base64prefix || 'data:image/png;base64,') + item.url;\n                } else {\n                    img.src = item.url;\n                }\n            });\n\n            return this;\n        }\n    }]);\n\n    return KonvaBase;\n}(_vischartbase2.default);\n\nexports.default = KonvaBase;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseFinance = parseFinance;\n\n\n/**\n * 取小数点的N位\n * <br />JS 解析 浮点数的时候，经常出现各种不可预知情况，这个函数就是为了解决这个问题\n * @method  parseFinance\n * @static\n * @param   {number}    _i\n * @param   {int}       _dot  default = 2\n * @return  number\n */\nfunction parseFinance(_i, _dot) {\n  _i = parseFloat(_i) || 0;\n  typeof _dot == 'undefined' && (_dot = 2);\n  _i && (_i = parseFloat(_i.toFixed(_dot)));\n  return _i;\n}","\nexport const dountBig = '';\n\n\nexport const dountIn = 'iVBORw0KGgoAAAANSUhEUgAAAHYAAAB1CAYAAACbMxW/AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAA3FpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMC1jMDYwIDYxLjEzNDc3NywgMjAxMC8wMi8xMi0xNzozMjowMCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iIHhtbG5zOnN0UmVmPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VSZWYjIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDoyNzI0ZGMwNS03YzE0LTMwNGUtYTMxZC02Y2NkNDM5NTRjNmUiIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6MEI1QkNFMUZDMjA2MTFFODhGOTNFOUM0REJFQ0YyQTciIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6MEI1QkNFMUVDMjA2MTFFODhGOTNFOUM0REJFQ0YyQTciIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENDIChXaW5kb3dzKSI+IDx4bXBNTTpEZXJpdmVkRnJvbSBzdFJlZjppbnN0YW5jZUlEPSJ4bXAuaWlkOmY0NTY1MTdhLTI1ZDQtNzA0Zi05ZmY0LWMxMGFjNTFkODc3ZiIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1wLmRpZDoyNzI0ZGMwNS03YzE0LTMwNGUtYTMxZC02Y2NkNDM5NTRjNmUiLz4gPC9y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';\n\nexport const rateOut = '';\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _geometry = require('../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar PointAt = function () {\n    function PointAt(width, height, point) {\n        _classCallCheck(this, PointAt);\n\n        this.width = width;\n        this.height = height;\n        this.point = point;\n\n        this.cx = this.width / 2;\n        this.cy = this.height / 2;\n\n        this.cpoint = { x: this.cx, y: this.cy };\n\n        this.offsetX = 20;\n        this.offsetY = 20;\n\n        this.colors = ['#f12575', '#da432e', '#f3a42d', '#19af89', '#24a3ea', '#b56be8'];\n\n        this.init();\n    }\n\n    _createClass(PointAt, [{\n        key: 'setDebug',\n        value: function setDebug(stage) {\n            this.stage = stage;\n\n            this.layer = new _konva2.default.Layer();\n\n            var i = 0;\n\n            for (var key in this.rects) {\n\n                var item = this.rects[key];\n                var params = _jsonUtilsx2.default.clone(item);\n                params.fill = this.colors[i % this.colors.length];\n\n                var rect = new _konva2.default.Rect(params);\n\n                this.layer.add(rect);\n\n                i++;\n            }\n\n            this.stage.add(this.layer);\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            this.leftTop = {\n                x: 0,\n                y: 0,\n                width: this.cx + this.offsetX,\n                height: this.cy + this.offsetY\n            };\n            this.leftTop.x2 = this.leftTop.x + this.leftTop.width;\n            this.leftTop.y2 = this.leftTop.y + this.leftTop.height;\n\n            this.rightTop = {\n                x: this.cx - this.offsetX,\n                y: 0,\n                width: this.cx + this.offsetX,\n                height: this.cy + this.offsetY\n            };\n            this.rightTop.x2 = this.rightTop.x + this.rightTop.width;\n            this.rightTop.y2 = this.rightTop.y + this.rightTop.height;\n\n            this.leftBottom = {\n                x: 0,\n                y: this.cy - this.offsetY,\n                width: this.cx + this.offsetX,\n                height: this.cy + this.offsetY\n            };\n            this.leftBottom.x2 = this.leftBottom.x + this.leftBottom.width;\n            this.leftBottom.y2 = this.leftBottom.y + this.leftBottom.height;\n\n            this.rightBottom = {\n                x: this.cx - this.offsetX,\n                y: this.cy - this.offsetY,\n                width: this.cx + this.offsetX,\n                height: this.cy + this.offsetY\n            };\n            this.rightBottom.x2 = this.rightBottom.x + this.rightBottom.width;\n            this.rightBottom.y2 = this.rightBottom.y + this.rightBottom.height;\n\n            this.rects = {\n                leftTop: this.leftTop,\n                rightTop: this.rightTop,\n                leftBottom: this.leftBottom,\n                rightBottom: this.rightBottom\n            };\n        }\n    }, {\n        key: 'isLeftTop',\n        value: function isLeftTop() {\n            return geometry.pointRectangleIntersection(this.point, this.leftTop) ? 1 : 0;\n        }\n    }, {\n        key: 'isRightTop',\n        value: function isRightTop() {\n            return geometry.pointRectangleIntersection(this.point, this.rightTop) ? 2 : 0;\n        }\n    }, {\n        key: 'isRightBottom',\n        value: function isRightBottom() {\n            return geometry.pointRectangleIntersection(this.point, this.rightBottom) ? 4 : 0;\n        }\n    }, {\n        key: 'isLeftBottom',\n        value: function isLeftBottom() {\n            return geometry.pointRectangleIntersection(this.point, this.leftBottom) ? 8 : 0;\n        }\n    }, {\n        key: 'auto',\n        value: function auto() {\n            var r = this.isLeftTop() + this.isRightTop() + this.isRightBottom() + this.isLeftBottom();\n            return r;\n        }\n    }, {\n        key: 'autoAngle',\n        value: function autoAngle() {\n            var angle = geometry.pointAngle(this.cpoint, this.point),\n                r = '';\n\n            if (angle >= 0 && angle <= 90) {\n                r = PointAt.DIRE_NAME.rightBottom;\n            } else if (angle > 90 && angle <= 180) {\n                r = PointAt.DIRE_NAME.leftBottom;\n            } else if (angle > 180 && angle <= 270) {\n                r = PointAt.DIRE_NAME.leftTop;\n            } else {\n                r = PointAt.DIRE_NAME.rightTop;\n            }\n\n            return r;\n        }\n    }]);\n\n    return PointAt;\n}();\n\nexports.default = PointAt;\n\n\nPointAt.DIRE_NAME = {\n    leftTop: 1,\n    rightTop: 2,\n    rightBottom: 4,\n    leftBottom: 8,\n\n    topCenter: 3,\n    rightMid: 6,\n    bottomCenter: 12,\n    leftMid: 9\n};\n\nPointAt.DIRE_NUM = {\n    '1': 'leftTop',\n    '2': 'rightTop',\n    '4': 'rightBottom',\n    '8': 'leftBottom',\n\n    '3': 'topCenter',\n    '6': 'rightMid',\n    '9': 'leftMid',\n    '12': 'bottomCenter'\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _vischartbase = require('vischartbase');\n\nvar _vischartbase2 = _interopRequireDefault(_vischartbase);\n\nvar _index = require('./2d/dount/index.js');\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _index3 = require('./2d/gauge/index.js');\n\nvar _index4 = _interopRequireDefault(_index3);\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _constant = require('./common/constant.js');\n\nvar constant = _interopRequireWildcard(_constant);\n\nvar _legend = require('./2d/common/legend.js');\n\nvar _legend2 = _interopRequireDefault(_legend);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar VisChart = function (_VisChartBase) {\n    _inherits(VisChart, _VisChartBase);\n\n    function VisChart(box, width, height) {\n        _classCallCheck(this, VisChart);\n\n        var _this = _possibleConstructorReturn(this, (VisChart.__proto__ || Object.getPrototypeOf(VisChart)).call(this, box, width, height));\n\n        _this.ins = [];\n        _this.legend = null;\n\n        _this._setSize(width, height);\n        return _this;\n    }\n\n    _createClass(VisChart, [{\n        key: '_setSize',\n        value: function _setSize(width, height) {\n\n            _get(VisChart.prototype.__proto__ || Object.getPrototypeOf(VisChart.prototype), '_setSize', this).call(this, width, height);\n\n            this.init();\n\n            if (this.legend && this.data && this.data.legend) {\n                if (this.ignoreLegend) {\n                    this.legend.resize(this.width, this.height);\n                    this.legend.update(this.data.legend);\n                } else {\n                    this.legend.destroy();\n                    this.legend = null;\n                }\n            }\n\n            if (this.data) {\n                var tmpredraw = this.redraw;\n                this.update(this.data, this.ignoreLegend);\n                this.redraw = tmpredraw;\n            }\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            //console.log( 'VisChartBase init', Date.now(), this.width, this.height, this.canvas );\n\n            if (!this.box) return;\n\n            if (!this.stage) {\n                this.stage = new _konva2.default.Stage({\n                    container: this.box,\n                    width: this.width,\n                    height: this.height\n                });\n            } else {\n                this.stage.width(this.width);\n                this.stage.height(this.height);\n            }\n\n            //console.log( this.width, this.height, this.box.offsetWidth, this.box.offsetHeight );\n            //console.log( this );\n\n            this.customWidth && (this.box.style.width = this.customWidth + 'px');\n            this.customHeight && (this.box.style.height = this.customHeight + 'px');\n\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(data, ignoreLegend) {\n            var _this2 = this;\n\n            var redraw = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            this.data = data;\n            this.ignoreLegend = ignoreLegend;\n            this.redraw = redraw;\n\n            //console.log( 'vischart update', data );\n\n            if (!_jsonUtilsx2.default.jsonInData(this.data, 'series')) return;\n\n            this.data && this.data.legend && this.data.legend.data && this.data.legend.data.legend && this.data.legend.data.map(function (item, key) {\n                item.realIndex = key;\n            });\n\n            this.data && this.data.series && this.data.series.length && this.data.series.map(function (sitem) {\n                sitem.data && sitem.data.length && sitem.data.map(function (item, key) {\n                    item.realIndex = key;\n                });\n            });\n\n            this.clearUpdate();\n\n            //console.log( ju );\n\n            //this.stage.removeChildren();\n\n            //console.log( 'update data', data );\n\n            if (_jsonUtilsx2.default.jsonInData(this.data, 'legend.data') && this.data.legend.data.length) {\n                if (this.legend && ignoreLegend) {\n                    this.emptyblock = 'kao';\n                } else {\n                    this.legend && this.legend.destroy();\n                    this.legend = new _legend2.default(this.box, this.width, this.height);\n                    this.legend.setStage(this.stage);\n                    this.legend.setOptions({\n                        onChange: function onChange(group) {\n                            //console.log( 'legend onchange', group );\n                            _this2.initChart();\n                        }\n                    });\n                    this.legend.update(this.data.legend);\n                }\n            }\n            this.initChart();\n            return this;\n        }\n    }, {\n        key: 'initChart',\n        value: function initChart() {\n            var _this3 = this;\n\n            if (this.ins && this.ins.length && !this.redraw) {\n                this.emptyblock = 'kao';\n            } else {\n                this.ins.map(function (item) {\n                    item.destroy();\n                });\n                this.ins = [];\n            }\n\n            this.data.series.map(function (val, key) {\n                //console.log( val, constant );\n                var ins = void 0;\n\n                if (_this3.ins && _this3.ins.length && _this3.ins[key] && !_this3.redraw) {\n                    ins = _this3.ins[key];\n                    ins.width = _this3.width;\n                    ins.height = _this3.height;\n                } else {\n                    switch (val.type) {\n                        case constant.CHART_TYPE.dount:\n                            {\n                                ins = new _index2.default(_this3.box, _this3.width, _this3.height);\n                                break;\n                            }\n                        case constant.CHART_TYPE.gauge:\n                            {\n                                ins = new _index4.default(_this3.box, _this3.width, _this3.height);\n                                break;\n                            }\n                    }\n                    if (ins) {\n                        _this3.legend && ins.setLegend(_this3.legend);\n                        ins.setStage(_this3.stage);\n                    }\n                }\n\n                if (ins) {\n                    _this3.options && ins.setOptions(_this3.options);\n                    ins.update(_this3.getLegendData(val), _jsonUtilsx2.default.clone(_this3.data));\n\n                    if (!_this3.ins[key]) {\n                        _this3.ins[key] = ins;\n                    }\n                }\n            });\n        }\n    }, {\n        key: 'getLegendData',\n        value: function getLegendData(data) {\n            data = _jsonUtilsx2.default.clone(data);\n\n            var tmp = [];\n\n            if (this.legend && this.legend.group && this.legend.group.length) {\n                //console.log( 'getLegendData', this.legend.group, 111111111 );\n                this.legend.group.map(function (item, key) {\n                    if (!item.disabled) {\n                        tmp.push(data.data[key]);\n                    }\n                });\n                data.data = tmp;\n            }\n\n            return data;\n        }\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            _get(VisChart.prototype.__proto__ || Object.getPrototypeOf(VisChart.prototype), 'destroy', this).call(this);\n\n            //this.clearUpdate();\n            this.ins.map(function (item) {\n                item.destroy();\n            });\n            this.legend && this.legend.destroy();\n\n            this.stage && this.stage.destroy();\n            this.stage = null;\n        }\n    }, {\n        key: 'clearUpdate',\n        value: function clearUpdate() {\n            this.legend && !this.ignoreLegend && this.legend.destroy();\n        }\n    }]);\n\n    return VisChart;\n}(_vischartbase2.default);\n\nexports.default = VisChart;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _base = require('../common/base.js');\n\nvar _base2 = _interopRequireDefault(_base);\n\nvar _geometry = require('../../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _pointat = require('../../common/pointat.js');\n\nvar _pointat2 = _interopRequireDefault(_pointat);\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _utils = require('../../common/utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nvar _iconcircle = require('../icon/iconcircle.js');\n\nvar _iconcircle2 = _interopRequireDefault(_iconcircle);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Dount = function (_VisChartBase) {\n    _inherits(Dount, _VisChartBase);\n\n    function Dount(box, width, height) {\n        _classCallCheck(this, Dount);\n\n        var _this = _possibleConstructorReturn(this, (Dount.__proto__ || Object.getPrototypeOf(Dount)).call(this, box, width, height));\n\n        _this.name = 'Dount_' + Date.now();\n\n        _this._setSize(width, height);\n        return _this;\n    }\n\n    _createClass(Dount, [{\n        key: '_setSize',\n        value: function _setSize(width, height) {\n            _get(Dount.prototype.__proto__ || Object.getPrototypeOf(Dount.prototype), '_setSize', this).call(this, width, height);\n\n            this.outPercent = .53;\n            this.inPercent = .37;\n\n            this.circleLinePercent = .34;\n            this.circlePercent = .31;\n            this.circleLineRotation = 0;\n            this.circleLineRotationStep = 4;\n\n            this.animationStep = 8;\n            this.angleStep = 5;\n\n            this.textHeight = 26;\n            this.lineOffset = 50;\n\n            this.path = [];\n            this.line = [];\n\n            this.textOffset = 4;\n\n            this.lineColor = '#24a3ea';\n\n            this.lineRange = {\n                \"1\": [],\n                \"2\": [],\n                \"4\": [],\n                \"8\": []\n            };\n\n            this.lineWidth = 40;\n            this.lineSpace = 10;\n            this.lineAngle = 35;\n            this.lineHeight = 21;\n            this.lineCurveLength = 30;\n\n            this.loopSort = [4, 8, 1, 2];\n\n            this.clearList = [];\n\n            this.init();\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            this.calcLayoutPosition();\n\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(data, allData) {\n            _get(Dount.prototype.__proto__ || Object.getPrototypeOf(Dount.prototype), 'update', this).call(this, data, allData);\n\n            this.data = data;\n            this.allData = allData;\n\n            this.countAngle = 0;\n            this.isDone = 0;\n            this.lineLengthCount = 0;\n\n            if (!_jsonUtilsx2.default.jsonInData(this.data, 'data')) return;\n\n            this.clearItems();\n            this.calcVal();\n            this.initText();\n            this.calcDataPosition();\n            this.initDataLayout();\n\n            //console.log( 'dount update', this.data, this, utils );\n\n            this.animation();\n            !this.inited && this.animationCircleLine();\n\n            this.inited = 1;\n\n            return this;\n        }\n    }, {\n        key: 'reset',\n        value: function reset() {\n            this.path.map(function (val) {\n                val.pathData = [];\n            });\n        }\n    }, {\n        key: 'animationCircleLine',\n        value: function animationCircleLine() {\n            var _this2 = this;\n\n            if (this.isDestroy) return;\n            if (!this.circleLine) return;\n\n            if (!this.isAnimation()) {\n                return;\n            }\n\n            this.circleLineRotation += this.circleLineRotationStep;\n\n            this.circleLine.rotation(this.circleLineRotation);\n            this.stage.add(this.layoutLayer);\n            this.layoutLayer.moveToBottom();\n\n            window.requestAnimationFrame(function () {\n                _this2.animationCircleLine();\n            });\n        }\n    }, {\n        key: 'animation',\n        value: function animation() {\n            var _this3 = this;\n\n            if (this.isDestroy) return;\n            if (this.isDone) return;\n\n            var tmp = void 0,\n                tmppoint = void 0,\n                step = this.angleStep;\n\n            this.countAngle += this.animationStep;\n\n            if (!this.isSeriesAnimation()) {\n                this.countAngle = this.totalAngle;\n            }\n\n            if (this.countAngle >= this.totalAngle || !this.isAnimation()) {\n                this.countAngle = this.totalAngle;\n                this.isDone = 1;\n            }\n\n            this.reset();\n\n            for (var i = this.path.length - 1; i >= 0; i--) {\n                //for( let i = 0; i < this.path.length; i++ ){\n                //let i = 2;\n                var item = this.path[i];\n\n                //console.log( i, item, item.itemData.endAngle, item.itemData.value );\n\n                var tmpAngle = this.countAngle;\n\n                if (tmpAngle >= item.itemData.endAngle) {\n                    tmpAngle = item.itemData.endAngle;\n                }\n\n                if (tmpAngle < item.itemData.startAngle) continue;\n\n                item.arc.angle(tmpAngle);\n            }\n            this.stage.add(this.arcLayer);\n\n            //this.animation();\n\n            window.requestAnimationFrame(function () {\n                _this3.animation();\n            });\n\n            if (this.isDone) {\n                // window.requestAnimationFrame( ()=>{ this.animationLine() } );\n                this.animationLine();\n            }\n        }\n    }, {\n        key: 'drawCircle',\n        value: function drawCircle() {\n            this.circleRadius = Math.ceil(this.circlePercent * this.min / 2);\n\n            this.circle = new _konva2.default.Circle({\n                x: this.fixCx(),\n                y: this.fixCy(),\n                radius: this.circleRadius,\n                stroke: this.lineColor,\n                strokeWidth: 2.5,\n                fill: '#ffffff00'\n            });\n            this.addDestroy(this.circle);\n            this.layoutLayer.add(this.circle);\n        }\n    }, {\n        key: 'drawCircleLine',\n        value: function drawCircleLine() {\n            this.circleLineRadius = Math.ceil(this.circleLinePercent * this.min / 2);\n\n            var points = [];\n            points.push('M');\n\n            for (var i = 90; i <= 180; i++) {\n                var tmp = geometry.distanceAngleToPoint(this.circleLineRadius, i);\n                points.push([tmp.x, tmp.y].join(',') + ',');\n                if (i == 90) {\n                    points.push('L');\n                }\n            }\n            points.push('M');\n            for (var _i = 270; _i <= 360; _i++) {\n                var _tmp = geometry.distanceAngleToPoint(this.circleLineRadius, _i);\n                points.push([_tmp.x, _tmp.y].join(',') + ',');\n                if (_i == 270) {\n                    points.push('L');\n                }\n            }\n\n            this.circleLine = new _konva2.default.Path({\n                data: points.join(''),\n                x: this.fixCx(),\n                y: this.fixCy(),\n                stroke: this.lineColor,\n                strokeWidth: 2.5,\n                fill: '#ffffff00'\n            });\n            this.addDestroy(this.circleLine);\n\n            this.layoutLayer.add(this.circleLine);\n        }\n    }, {\n        key: 'initDataLayout',\n        value: function initDataLayout() {\n            if (!this.inited) {\n                this.layoutLayer = new _konva2.default.Layer();\n                this.addDestroy(this.layoutLayer);\n\n                this.drawCircle();\n                this.drawCircleLine();\n\n                this.stage.add(this.layoutLayer);\n                this.layoutLayer.moveToBottom();\n\n                this.arcLayer = new _konva2.default.Layer();\n                this.addDestroy(this.arcLayer);\n\n                this.tooltipLayer = new _konva2.default.Layer();\n                this.addDestroy(this.tooltipLayer);\n\n                this.group = new _konva2.default.Group({\n                    visible: false\n                });\n                this.addDestroy(this.group);\n            }\n\n            this.path = [];\n            this.line = [];\n\n            for (var ii = this.data.data.length - 1; ii >= 0; ii--) {\n                var val = this.data.data[ii],\n                    key = ii;\n\n                var color = this.colors[key % this.colors.length];\n\n                if (_jsonUtilsx2.default.jsonInData(val, 'itemStyle.color')) {\n                    //path.fill( val.itemStyle.color );\n                    color = val.itemStyle.color;\n                }\n\n                var params = {\n                    x: this.fixCx(),\n                    y: this.fixCy(),\n                    innerRadius: this.inRadius,\n                    outerRadius: this.outRadius,\n                    angle: this.countAngle,\n                    fill: color,\n                    stroke: color,\n                    strokeWidth: 0\n                    //, rotation: this.arcOffset\n                };\n\n                var arc = new _konva2.default.Arc(params);\n\n                this.clearList.push(arc);\n                //this.drawTooltipMove( arc,val );\n\n                var line = new _konva2.default.Line({\n                    x: this.fixCx(),\n                    y: this.fixCy(),\n                    points: [0, 0, 0, 0],\n                    stroke: '#ffffff',\n                    strokeWidth: 2\n                });\n\n                this.line.push(line);\n                this.clearList.push(line);\n\n                var tmp = {\n                    arc: arc,\n                    pathData: [],\n                    itemData: val,\n                    line: line,\n                    realIndex: ii\n                };\n\n                this.path.push(tmp);\n\n                this.arcLayer.add(line);\n                this.arcLayer.add(arc);\n            };\n\n            this.stage.add(this.arcLayer);\n\n            return this;\n        }\n        //创建tooltip层\n\n    }, {\n        key: 'drawTooltip',\n        value: function drawTooltip() {\n            var tooltip = new _konva2.default.Text({\n                fontFamily: \"Calibri\",\n                fontSize: 12,\n                textFill: \"#fff\",\n                fill: \"#fff\",\n                visible: false\n            });\n            var tooltipBg = new _konva2.default.Tag({\n                width: 200,\n                height: 45,\n                fill: '#000',\n                opacity: 0.5,\n                lineJoin: 'round',\n                cornerRadius: 5,\n                visible: false\n            });\n            tooltip.lineHeight(1.5);\n\n            this.tooltipLayer.add(tooltipBg, tooltip);\n\n            // this.tooltipLayer.add(this.group);\n            this.stage.add(this.tooltipLayer);\n\n            var tooltipCon = {\n                tooltip: tooltip,\n                tooltipBg: tooltipBg\n            };\n            return tooltipCon;\n        }\n        //创建tooltip移动层动画\n\n    }, {\n        key: 'drawTooltipMove',\n        value: function drawTooltipMove(arc, val) {\n            var tooltip = this.drawTooltip().tooltip;\n            var tooltipBg = this.drawTooltip().tooltipBg;\n            var self = this;\n            //添加鼠标事件\n            arc.on('mousemove', function () {\n                var mousePos = self.stage.getPointerPosition();\n                tooltip.setZIndex(9);\n                tooltipBg.setZIndex(8);\n                tooltipBg.position({\n                    x: mousePos.x,\n                    y: mousePos.y\n                });\n                tooltip.position({\n                    x: mousePos.x + 5,\n                    y: mousePos.y + 5\n                });\n                var textLabel = '\\u8BBF\\u95EE\\u6765\\u6E90\\n ' + val.name + ': ' + val.value + '(' + val.percent + '%)';\n                tooltip.text(textLabel);\n                // self.group.show();\n                tooltipBg.show();\n                tooltip.show();\n\n                self.tooltipLayer.setZIndex(10);\n                self.tooltipLayer.batchDraw();\n            });\n            arc.on('mouseout', function () {\n                tooltip.setZIndex(9);\n                tooltipBg.setZIndex(8);\n                // self.group.hide();\n                tooltipBg.hide();\n                tooltip.hide();\n                self.tooltipLayer.setZIndex(10);\n                self.tooltipLayer.draw();\n            });\n        }\n    }, {\n        key: 'animationLine',\n        value: function animationLine() {\n            var _this4 = this;\n\n            if (this.lineLengthCount >= this.lineLength) {\n                return;\n            }\n            this.lineLengthCount = this.lineLength;\n\n            this.lineLengthCount += this.lineLengthStep;\n\n            if (this.lineLengthCount >= this.lineLength || !this.isAnimation()) {\n                this.lineLengthCount = this.lineLength;\n            }\n            for (var i = 0; i < this.path.length; i++) {\n                var path = this.path[i];\n                var layer = this.arcLayer;\n\n                var lineEnd = path.itemData.lineEnd;\n                var lineExpend = path.itemData.lineExpend;\n\n                var line = this.line[i];\n                line.points([path.itemData.lineStart.x, path.itemData.lineStart.y, lineEnd.x, lineEnd.y, lineExpend.x, lineExpend.y]);\n                this.arcLayer.add(line);\n\n                if (this.lineLengthCount >= this.lineLength) {\n                    this.addText(path, layer, path.realIndex);\n                    this.addIcon(path, layer, path.realIndex);\n                } else {\n                    window.requestAnimationFrame(function () {\n                        _this4.animationLine();\n                    });\n                }\n\n                this.stage.add(layer);\n            }\n        }\n    }, {\n        key: 'addIcon',\n        value: function addIcon(path, layer, key) {\n            if (!path.lineicon) {\n                path.lineicon = new _iconcircle2.default(this.box, this.fixWidth(), this.fixHeight());\n                this.clearList.push(path.lineicon);\n            }\n            //console.log( path );\n            var icon = path.lineicon;\n            icon.setOptions({\n                stage: this.stage,\n                layer: layer,\n                cx: this.fixCx(),\n                cy: this.fixCy()\n            });\n            icon.update(path.itemData.lineExpend);\n        }\n    }, {\n        key: 'addText',\n        value: function addText(path, layer, key) {\n            if (!path.text) {\n                path.text = this.textar[key];\n            }\n            var text = path.text;\n\n            var textPoint = path.itemData.textPoint,\n                angleDirect = path.itemData.pointDirection.autoAngle();\n\n            textPoint = _jsonUtilsx2.default.clone(path.itemData.lineEnd);\n            textPoint.y -= text.textHeight + 2;\n\n            switch (angleDirect) {\n                case 1:\n                    {\n                        textPoint.x -= text.textWidth;\n                        break;\n                    }\n                case 2:\n                    {\n                        break;\n                    }\n                case 4:\n                    {\n                        break;\n                    }\n                case 8:\n                    {\n                        textPoint.x -= text.textWidth;\n                        break;\n                    }\n            }\n\n            var textX = this.fixCx() + textPoint.x,\n                textY = this.fixCy() + textPoint.y,\n                direct = path.itemData.pointDirection.auto();\n\n            text.x(textX);\n            text.y(textY);\n            layer.add(text);\n        }\n    }, {\n        key: 'calcLayoutPosition',\n        value: function calcLayoutPosition() {\n            //console.log( 'calcLayoutPosition', Date.now() );\n\n            this.outRadius = Math.ceil(this.outPercent * this.min / 2);\n            this.inRadius = Math.ceil(this.inPercent * this.min / 2);\n\n            this.lineLength = (Math.min(this.fixWidth(), this.fixHeight()) - this.outRadius * 2) / 2 - this.lineOffset;\n            this.lineLengthCount = 1;\n            this.lineLengthStep = .5;\n\n            this.lineLeft = this.fixCx() - this.outRadius - this.lineSpace;\n            this.lineRight = this.fixCx() + this.outRadius + this.lineSpace;\n\n            return this;\n        }\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            this.clearItems();\n            _get(Dount.prototype.__proto__ || Object.getPrototypeOf(Dount.prototype), 'destroy', this).call(this);\n        }\n    }, {\n        key: 'clearItems',\n        value: function clearItems() {\n            this.clearList.map(function (item) {\n                item.remove();\n                item.destroy();\n            });\n            this.clearList = [];\n        }\n    }, {\n        key: 'initText',\n        value: function initText() {\n            var _this5 = this;\n\n            this.textar = [];\n\n            this.data.data.map(function (val, key) {\n                //console.log( key, val );\n                var tmp = new _konva2.default.Text({\n                    x: 0,\n                    y: 0,\n                    text: _this5.getLabel(val, key),\n                    fill: '#a3a7f3',\n                    fontFamily: 'MicrosoftYaHei',\n                    fontSize: 16,\n                    fontStyle: 'italic'\n                });\n                _this5.clearList.push(tmp);\n                _this5.textar.push(tmp);\n            });\n        }\n    }, {\n        key: 'calcVal',\n        value: function calcVal() {\n            var _this6 = this;\n\n            if (!this.data) return;\n\n            var total = 0,\n                tmp = 0;\n\n            this.data.data.map(function (val) {\n                //console.log( val );\n                total += val.value;\n            });\n            this.total = total;\n\n            this.data.data.map(function (val) {\n                val._percent = val.value / total;\n\n                var precision = _this6.getPrecision(val) * 10;\n                val.percent = Math.round(Math.floor(val._percent * 100 * precision) / 10) / _this6.getPrecision(val);\n\n                val._percent = val.percent / 100;\n                tmp = tmp + val._percent;\n                val._totalPercent = tmp;\n\n                val.endAngle = _this6.totalAngle * val._totalPercent;\n            });\n\n            //修正浮点数精确度\n            if (this.data.data.length) {\n                var val = this.data.data[this.data.data.length - 1];\n                val._totalPercent = 1;\n                val._percent = 1 - (tmp - val._percent);\n\n                var precision = this.getPrecision(val) * 10;\n                val.percent = Math.round(Math.floor(val._percent * 100 * precision) / 10) / this.getPrecision(val);\n                val.endAngle = this.totalAngle;\n            }\n        }\n    }, {\n        key: 'calcDataPosition',\n        value: function calcDataPosition() {\n            var _this7 = this;\n\n            if (!this.data) return;\n\n            this.lineRange = {\n                \"1\": [],\n                \"2\": [],\n                \"4\": [],\n                \"8\": []\n                //console.log( '' );\n                //计算开始角度, 计算指示线的2端\n            };this.data.data.map(function (val, key) {\n                if (!key) {\n                    val.startAngle = 0;\n                } else {\n                    val.startAngle = _this7.data.data[key - 1].endAngle;\n                }\n\n                var text = _this7.textar[key];\n                var textWidth = _this7.lineWidth;\n\n                if (text.width() >= textWidth) {\n                    textWidth = text.width() + 5;\n                }\n\n                val.midAngle = val.startAngle + (val.endAngle - val.startAngle) / 2;\n\n                val.lineStart = geometry.distanceAngleToPoint(_this7.outRadius, val.midAngle);\n                val.lineEnd = geometry.distanceAngleToPoint(_this7.outRadius + _this7.lineLength, val.midAngle);\n\n                val.textPoint = geometry.distanceAngleToPoint(_this7.outRadius + _this7.lineLength, val.midAngle);\n\n                val.pointDirection = new _pointat2.default(_this7.fixWidth(), _this7.fixHeight(), geometry.pointPlus(val.textPoint, _this7.cpoint));\n                var lineAngle = val.pointDirection.autoAngle();\n                val.lineExpend = _jsonUtilsx2.default.clone(val.lineEnd);\n\n                switch (lineAngle) {\n                    case 1:\n                    case 8:\n                        {\n                            //val.lineEnd.x = this.lineLeft;\n                            val.lineEnd.x = -(_this7.outRadius + _this7.lineSpace);\n\n                            var tmp = geometry.pointDistance(val.lineStart, val.lineEnd);\n                            if (tmp > _this7.lineCurveLength) {\n                                var tmpAngle = geometry.pointAngle(val.lineStart, val.lineEnd),\n                                    tmpPoint = geometry.distanceAngleToPoint(_this7.lineCurveLength, tmpAngle);\n                                tmpPoint = geometry.pointPlus(tmpPoint, val.lineStart);\n\n                                val.lineEnd.x = tmpPoint.x;\n                            }\n\n                            val.lineExpend.x = val.lineEnd.x - textWidth;\n\n                            break;\n                        }\n                    default:\n                        {\n                            val.lineEnd.x = _this7.outRadius + _this7.lineSpace;\n                            var _tmp2 = geometry.pointDistance(val.lineStart, val.lineEnd);\n                            if (_tmp2 > _this7.lineCurveLength) {\n                                var _tmpAngle = geometry.pointAngle(val.lineStart, val.lineEnd),\n                                    _tmpPoint = geometry.distanceAngleToPoint(_this7.lineCurveLength, _tmpAngle);\n                                _tmpPoint = geometry.pointPlus(_tmpPoint, val.lineStart);\n\n                                val.lineEnd.x = _tmpPoint.x;\n                            }\n\n                            val.lineExpend.x = val.lineEnd.x + textWidth;\n                            break;\n                        }\n                }\n\n                _this7.lineRange[lineAngle].push(val);\n            });\n\n            this.loopSort.map(function (key) {\n                var item = _this7.lineRange[key];\n                if (!(item && item.length && item.length > 1)) return;\n                var needFix = void 0;\n                for (var i = 1; i < item.length; i++) {\n                    var pre = item[i - 1],\n                        cur = item[i];\n                    if (Math.abs(cur.lineEnd.y - pre.lineEnd.y) < _this7.lineHeight) {\n                        needFix = 1;\n                        break;\n                    }\n                }\n                switch (key) {\n                    case 1:\n                        {\n                            var tmpY = item[0].lineEnd.y;\n                            //console.log( item );\n                            for (var _i2 = item.length - 2; _i2 >= 0; _i2--) {\n                                var _pre = item[_i2 + 1],\n                                    _cur = item[_i2];\n                                if (Math.abs(_pre.lineEnd.y - _cur.lineEnd.y) < _this7.lineHeight || _cur.lineEnd.y <= _pre.lineEnd.y) {\n                                    tmpY = _pre.lineEnd.y + _this7.lineHeight;\n                                    _cur.lineEnd.y = tmpY;\n\n                                    /*\n                                    if( cur.lineEnd.y < cur.lineStart.y ){\n                                        //tmpY = cur.lineStart.y + this.lineHeight;\n                                        //cur.lineEnd.y = tmpY;\n                                    }\n                                    */\n                                    _cur.lineExpend.y = tmpY;\n                                }\n                            }\n                            break;\n                        }\n                    case 2:\n                        {\n                            var _tmpY = item[0].lineEnd.y;\n                            for (var _i3 = 1; _i3 < item.length; _i3++) {\n                                var _pre2 = item[_i3 - 1],\n                                    _cur2 = item[_i3],\n                                    zero = item[0];\n\n                                if (Math.abs(_pre2.lineEnd.y + _this7.fixCy()) < _this7.lineHeight) {\n                                    _pre2.lineExpend.y = _pre2.lineEnd.y = _pre2.lineExpend.y + _this7.lineHeight;\n                                }\n                                if (Math.abs(_pre2.lineEnd.y - _cur2.lineEnd.y) < _this7.lineHeight || _cur2.lineEnd.y <= _pre2.lineEnd.y) {\n\n                                    _tmpY = _pre2.lineEnd.y + _this7.lineHeight;\n                                    _cur2.lineEnd.y = _tmpY;\n\n                                    /*\n                                    if( cur.lineEnd.y < cur.lineStart.y ){\n                                        //tmpY = cur.lineStart.y + this.lineHeight;\n                                        //cur.lineEnd.y = tmpY;\n                                    }\n                                    */\n                                    _cur2.lineExpend.y = _tmpY;\n                                }\n                            }\n\n                            break;\n                        }\n                    case 4:\n                        {\n                            var _tmpY2 = 0;\n                            for (var _i4 = item.length - 2; _i4 >= 0; _i4--) {\n                                var _pre3 = item[_i4 + 1],\n                                    _cur3 = item[_i4];\n                                if (Math.abs(_pre3.lineEnd.y - _cur3.lineEnd.y) < _this7.lineHeight || _cur3.lineEnd.y >= _pre3.lineEnd.y) {\n                                    //console.log( pre.lineEnd.y, cur.lineEnd.y );\n                                    _tmpY2 = _pre3.lineEnd.y - _this7.lineHeight;\n                                    _cur3.lineEnd.y = _tmpY2;\n                                    _cur3.lineExpend.y = _tmpY2;\n                                }\n                            }\n                            break;\n                        }\n                    case 8:\n                        {\n                            var _tmpY3 = 0;\n                            for (var _i5 = 1; _i5 < item.length; _i5++) {\n                                var _pre4 = item[_i5 - 1],\n                                    _cur4 = item[_i5];\n                                if (Math.abs(_pre4.lineEnd.y - _cur4.lineEnd.y) < _this7.lineHeight || _cur4.lineEnd.y >= _pre4.lineEnd.y) {\n                                    _tmpY3 = _pre4.lineEnd.y - _this7.lineHeight;\n                                    _cur4.lineEnd.y = _tmpY3;\n\n                                    /*\n                                    if( cur.lineEnd.y < cur.lineStart.y ){\n                                        //cur.lineEnd.y = cur.lineStart.y + this.lineHeight;\n                                    }\n                                    */\n                                    _cur4.lineExpend.y = _cur4.lineEnd.y;\n                                }\n                            }\n\n                            break;\n                        }\n                }\n            });\n        }\n    }]);\n\n    return Dount;\n}(_base2.default);\n\nexports.default = Dount;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _base = require('../common/base.js');\n\nvar _base2 = _interopRequireDefault(_base);\n\nvar _geometry = require('../../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _utils = require('../../common/utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar IconCircle = function (_VisChartBase) {\n    _inherits(IconCircle, _VisChartBase);\n\n    function IconCircle(box, width, height) {\n        _classCallCheck(this, IconCircle);\n\n        var _this = _possibleConstructorReturn(this, (IconCircle.__proto__ || Object.getPrototypeOf(IconCircle)).call(this, box, width, height));\n\n        _this.name = 'IconRound ' + Date.now();\n\n        _this.outRadius = 6;\n        _this.inRadius = 2.5;\n\n        _this.color = '#ffffff';\n\n        _this.max = 1.1;\n        _this.min = 0.8;\n\n        _this.step = .006;\n        _this.cur = 1;\n\n        _this.isplus = 1;\n\n        _this.init();\n        return _this;\n    }\n\n    _createClass(IconCircle, [{\n        key: 'init',\n        value: function init() {\n            return this;\n        }\n    }, {\n        key: 'opacity',\n        value: function opacity(num) {\n            this.group && this.group.opacity(num);\n\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(point) {\n            this.point = point;\n\n            if (!this.inited) {\n                this.group = new _konva2.default.Group({\n                    x: this.point.x + this.cx,\n                    y: this.point.y + this.cy,\n                    width: this.outRadius * 2,\n                    height: this.outRadius * 2\n                });\n                this.addDestroy(this.group);\n\n                this.circle = new _konva2.default.Circle({\n                    radius: this.inRadius,\n                    fill: this.color,\n                    stroke: this.color,\n                    x: 0,\n                    y: 0\n                });\n                this.addDestroy(this.circle);\n\n                this.outcircle = new _konva2.default.Circle({\n                    radius: this.outRadius,\n                    fill: '#ffffff00',\n                    stroke: this.color,\n                    strokeWidth: 1,\n                    x: 0,\n                    y: 0\n                });\n                this.addDestroy(this.outcircle);\n            } else {\n                this.group.x(this.point.x + this.cx);\n                this.group.y(this.point.y + this.cy);\n            }\n\n            this.group.add(this.circle);\n            this.group.scale({ x: this.cur, y: this.cur });\n            this.layer.add(this.group);\n\n            this.inited = 1;\n            //window.requestAnimationFrame( ()=>{ this.animation() } );\n        }\n    }, {\n        key: 'reset',\n        value: function reset() {}\n    }, {\n        key: 'animation',\n        value: function animation() {\n            var _this2 = this;\n\n            if (this.plus) {\n                this.cur = this.cur + this.step;\n\n                if (this.cur > this.max) {\n                    this.cur = this.max;\n                    this.plus = 0;\n                }\n            } else {\n                this.cur = this.cur - this.step;\n                if (this.cur < this.min) {\n                    this.cur = this.min;\n                    this.plus = 1;\n                }\n            }\n\n            this.group.scale({ x: this.cur, y: this.cur });\n\n            this.stage.add(this.layer);\n\n            window.requestAnimationFrame(function () {\n                _this2.animation();\n            });\n        }\n    }, {\n        key: 'initDataLayout',\n        value: function initDataLayout() {}\n    }, {\n        key: 'calcDataPosition',\n        value: function calcDataPosition() {}\n    }, {\n        key: 'animationLine',\n        value: function animationLine() {}\n    }, {\n        key: 'calcLayoutPosition',\n        value: function calcLayoutPosition() {}\n    }]);\n\n    return IconCircle;\n}(_base2.default);\n\nexports.default = IconCircle;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _base = require('../common/base.js');\n\nvar _base2 = _interopRequireDefault(_base);\n\nvar _geometry = require('../../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _pointat = require('../../common/pointat.js');\n\nvar _pointat2 = _interopRequireDefault(_pointat);\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _utils = require('../../common/utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nvar _roundstatetext = require('../icon/roundstatetext.js');\n\nvar _roundstatetext2 = _interopRequireDefault(_roundstatetext);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Gauge = function (_VisChartBase) {\n    _inherits(Gauge, _VisChartBase);\n\n    function Gauge(box, width, height) {\n        _classCallCheck(this, Gauge);\n\n        var _this = _possibleConstructorReturn(this, (Gauge.__proto__ || Object.getPrototypeOf(Gauge)).call(this, box, width, height));\n\n        _this.name = 'Gauge' + Date.now();\n\n        _this._setSize(width, height);\n        return _this;\n    }\n\n    _createClass(Gauge, [{\n        key: '_setSize',\n        value: function _setSize(width, height) {\n            _get(Gauge.prototype.__proto__ || Object.getPrototypeOf(Gauge.prototype), '_setSize', this).call(this, width, height);\n\n            this.totalPostfix = '次/时';\n\n            this.offsetCy = 15;\n\n            this.cy += this.offsetCy;\n\n            this.curRate = 0;\n            this.totalNum = 0;\n            this.totalNumStep = 5;\n\n            this.animationStep = 40 * 1;\n\n            this.roundRadiusPercent = .085;\n\n            this.lineColor = '#596ea7';\n\n            this.circleLinePercent = .26;\n            this.circlePercent = .28;\n\n            this.circleLineRotation = 0;\n            this.circleLineRotationStep = 4;\n\n            this.arcLinePercent = .39 / 2;\n\n            this.arcOutPercent = .38 / 2;\n            this.arcInPercent = .305 / 2;\n\n            this.arcLabelLength = 6;\n            this.arcTextLength = 20;\n\n            this.arcAngle = 280;\n            this.part = 22;\n            this.arcTotal = 1100;\n\n            this.textOffset = 0;\n\n            this.arcOffset = 90 + (360 - this.arcAngle) / 2;\n            this.arcOffsetPad = -5;\n            this.partLabel = this.part / 2;\n            this.partAngle = this.arcAngle / this.part;\n            this.partNum = this.arcTotal / this.part;\n\n            this.textOffsetX = -1;\n            this.textOffsetY = -8;\n            this.textLineLength = 6;\n\n            this.textRectWidthPercent = .5;\n            this.textRectHeightPercent = .11;\n\n            this.textRoundPercent = .38;\n            this.textRoundOffsetAngle = 160;\n            this.textRoundPlusAngle = 110;\n            this.textRoundMaxAngle = this.textRoundOffsetAngle + this.textRoundPlusAngle * 2;\n            this.roundStatusRaidus = 30;\n            this.textRoundAngle = [{\n                angle: this.textRoundOffsetAngle,\n                text: '低',\n                point: {},\n                min: 0,\n                max: 100,\n                radius: this.roundStatusRaidus,\n                lineColor: this.lineColor\n            }, {\n                angle: this.textRoundOffsetAngle + this.textRoundPlusAngle,\n                text: '中',\n                point: {},\n                min: 101,\n                max: 500,\n                radius: this.roundStatusRaidus,\n                lineColor: this.lineColor\n            }, {\n                angle: this.textRoundOffsetAngle + this.textRoundPlusAngle * 2,\n                text: '高',\n                point: {},\n                min: 501,\n                max: Math.pow(10, 10),\n                radius: this.roundStatusRaidus,\n                lineColor: this.lineColor\n            }];\n\n            this.init();\n        }\n    }, {\n        key: 'getAttackRateAngle',\n        value: function getAttackRateAngle() {\n            var r = 0;\n\n            r = this.arcOffset + this.arcAngle * this.getAttackRatePercent();\n\n            return r;\n        }\n    }, {\n        key: 'getAttackRatePercent',\n        value: function getAttackRatePercent() {\n            var r = 0,\n                tmp = void 0;\n            if (this.curRate) {\n                tmp = this.curRate;\n                if (tmp > this.arcTotal) {\n                    tmp = this.arcTotal;\n                }\n\n                r = tmp / this.arcTotal;\n            }\n            return r;\n        }\n    }, {\n        key: 'getAttackText',\n        value: function getAttackText() {\n            var _this2 = this;\n\n            var text = '低';\n\n            if (this.curRate) {\n                this.textRoundAngle.map(function (val) {\n                    if (_this2.curRate >= val.min && _this2.curRate <= val.max) {\n                        text = val.text;\n                    }\n                });\n            }\n\n            return text + '\\u9891\\n\\u653B\\u51FB';\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            var _this3 = this;\n\n            this.textRoundRadius = this.width * this.textRoundPercent * this.sizeRate;\n\n            this.roundRadius = this.width * this.roundRadiusPercent * this.sizeRate;\n\n            this.arcInRadius = this.width * this.arcInPercent * this.sizeRate;\n            this.arcOutRadius = this.width * this.arcOutPercent * this.sizeRate;\n\n            this.arcLineRaidus = Math.ceil(this.arcLinePercent * this.max) * this.sizeRate;\n\n            this.textWidth = this.textRectWidthPercent * this.width;\n            this.textHeight = 38 * this.sizeRate;\n            this.textX = this.cx - this.textWidth / 2;\n            this.textY = this.cy + this.arcLineRaidus + this.arcTextLength / 2 + 2;\n\n            this.textRoundAngle.map(function (val, key) {\n                var point = geometry.distanceAngleToPoint(_this3.textRoundRadius, val.angle);\n                val.point = geometry.pointPlus(point, _this3.cpoint);\n                val.point.y += _this3.offsetCy;\n            });\n\n            this.arcPartLineAr = [];\n            this.arcOutlinePartAr = [];\n            this.textAr = [];\n            for (var i = 0; i <= this.part; i++) {\n                var start = void 0,\n                    end = void 0,\n                    angle = void 0;\n                angle = i * this.partAngle + this.arcOffset;\n\n                //if( i && i < this.part ){\n                if (true) {\n                    start = geometry.distanceAngleToPoint(this.arcInRadius, angle);\n                    end = geometry.distanceAngleToPoint(this.arcOutRadius, angle);\n\n                    this.arcPartLineAr.push('M');\n                    this.arcPartLineAr.push([start.x, start.y].join(','));\n                    this.arcPartLineAr.push('L');\n                    this.arcPartLineAr.push([end.x, end.y].join(','));\n                }\n\n                start = geometry.distanceAngleToPoint(this.arcLineRaidus, angle);\n                end = geometry.distanceAngleToPoint(this.arcLineRaidus + this.arcLabelLength, angle);\n\n                this.arcOutlinePartAr.push('M');\n                this.arcOutlinePartAr.push([start.x, start.y].join(','));\n                this.arcOutlinePartAr.push('L');\n                this.arcOutlinePartAr.push([end.x, end.y].join(','));\n\n                if (!(i * this.partNum % 100) || i === 0) {\n                    var angleOffset = 8,\n                        lengthOffset = 0,\n                        rotationOffset = 0;\n\n                    if (i === 0) {\n                        angleOffset = 1;\n                    }\n\n                    if (i >= 19) {\n                        angleOffset = 14;\n                        rotationOffset = 9;\n                    }\n                    if (i >= 21) {\n                        angleOffset = 18;\n                    }\n                    var text = {\n                        text: i * this.partNum,\n                        angle: angle - angleOffset,\n                        point: geometry.distanceAngleToPoint(this.arcLineRaidus + this.arcTextLength + lengthOffset, angle - angleOffset),\n                        rotationOffset: rotationOffset\n                    };\n                    text.textPoint = new _pointat2.default(this.width, this.height, geometry.pointPlus(text.point, this.cpoint));\n\n                    this.textAr.push(text);\n                }\n            }\n        }\n    }, {\n        key: 'initRoundText',\n        value: function initRoundText() {\n            var _this4 = this;\n\n            this.textRoundAngle.map(function (val) {\n\n                if (!val.ins) {\n                    val.ins = new _roundstatetext2.default(_this4.box, _this4.width, _this4.height);\n                    val.ins.setOptions(Object.assign(val, {\n                        stage: _this4.stage,\n                        layer: _this4.layoutLayer,\n                        data: _this4.data,\n                        allData: _this4.allData\n                    }));\n                    val.ins.init();\n                }\n                val.ins.update(_this4.curRate);\n            });\n        }\n        /*\n        {\n        \"series\": [\n            {\n                \"type\": \"gauge\",\n                \"data\": [\n                    {\n                        \"value\": 200,\n                        \"total\": 134567,\n                        \"name\": \"完成率\"\n                    }\n                ]\n            }\n        ]\n        }\n        */\n\n    }, {\n        key: 'update',\n        value: function update(data, allData) {\n            var _this5 = this;\n\n            this.stage.removeChildren();\n            _get(Gauge.prototype.__proto__ || Object.getPrototypeOf(Gauge.prototype), 'update', this).call(this, data, allData);\n\n            //console.log( 123, data );\n\n            if (data && data.data && data.data.length) {\n                data.data.map(function (val) {\n                    _this5.curRate = val.value;\n                    _this5.totalNum = val.total;\n                });\n            }\n\n            /*\n            this.curRate = 600;\n            this.totalNum = 234567;\n            */\n\n            this.initDataLayout();\n\n            //console.log( 'gauge update', this.getAttackRateAngle() )\n            this.angle = this.arcOffset + this.arcOffsetPad;\n            this.animationAngle = this.getAttackRateAngle() + this.arcOffsetPad;\n            //console.log( this.angle, this.animationAngle );\n\n            this.updateWedge();\n\n            if (this.curRate) {\n                this.rateStep = Math.floor(this.curRate / (this.animationStep * 2));\n                !this.inited && this.animation();\n            }\n            if (parseInt(this.totalNum)) {\n                this.totalNumStep = Math.floor(this.totalNum / this.animationStep);\n                this.totalNumStep < 1 && (this.totalNumStep = 1);\n                this.totalNumCount = 0;\n                this.animationText();\n            } else {\n                this.totalText.text(this.totalNum + '');\n                this.totalTextPostfix.x(this.totalText.textWidth + 5);\n                this.totalTextGroup.x((this.width - this.totalTextPostfix.textWidth - this.totalText.textWidth - 5) / 2);\n            }\n\n            !this.inited && this.animationCircleLine();\n\n            this.inited = 1;\n        }\n    }, {\n        key: 'animationCircleLine',\n        value: function animationCircleLine() {\n            var _this6 = this;\n\n            //console.log( 'animationCircleLine' );\n            if (this.isDestroy) return;\n            if (!this.circleLine) return;\n\n            if (!this.isAnimation()) {\n                return;\n            }\n\n            this.circleLineRotation += this.circleLineRotationStep;\n\n            this.circleLine.rotation(this.circleLineRotation);\n            this.stage.add(this.layoutLayer);\n\n            window.requestAnimationFrame(function () {\n                _this6.animationCircleLine();\n            });\n        }\n    }, {\n        key: 'animationText',\n        value: function animationText() {\n            var _this7 = this;\n\n            if (this.isDestroy) return;\n\n            if (this.totalNumCount >= this.totalNum) {\n                return;\n            }\n            this.totalNumCount += this.totalNumStep;\n\n            if (this.totalNumCount >= this.totalNum || !this.isAnimation()) {\n                this.totalNumCount = this.totalNum;\n            };\n\n            this.totalText.text(this.totalNumCount);\n            this.totalTextPostfix.x(this.totalText.textWidth + 5);\n\n            this.totalTextGroup.x((this.width - this.totalTextPostfix.textWidth - this.totalText.textWidth - 5) / 2);\n\n            this.layoutLayer.add(this.totalTextGroup);\n\n            window.requestAnimationFrame(function () {\n                _this7.animationText();\n            });\n        }\n    }, {\n        key: 'drawText',\n        value: function drawText() {\n\n            this.totalTextGroup = new _konva2.default.Group();\n            this.addDestroy(this.totalTextGroup);\n\n            var params = {\n                text: 0 + ''\n                /*\n                , x: this.cx\n                , y: this.textY\n                */\n                , fontSize: 30 * this.sizeRate,\n                fontFamily: 'Agency FB',\n                fill: '#ffffff',\n                fontStyle: 'italic',\n                letterSpacing: 1.5\n            },\n                tmp = _jsonUtilsx2.default.clone(params);\n            tmp.text = this.totalNum;\n\n            this.totalText = new _konva2.default.Text(params);\n            this.addDestroy(this.totalText);\n\n            var params1 = {\n                text: this.totalPostfix,\n                x: this.totalText.textWidth + 5,\n                fontSize: 12 * this.sizeRate,\n                fontFamily: 'MicrosoftYaHei',\n                fill: '#ffffff',\n                fontStyle: 'italic',\n                letterSpacing: 1.5\n            };\n\n            this.totalTextPostfix = new _konva2.default.Text(params1);\n            this.totalTextPostfix.y(this.totalText.textHeight - this.totalTextPostfix.textHeight - 4);\n            this.addDestroy(this.totalTextPostfix);\n\n            this.totalTextGroup.add(this.totalText);\n            this.totalTextGroup.add(this.totalTextPostfix);\n\n            //console.log( this.totalTextGroup, this.totalTextGroup.getClipWidth(), this.totalTextGroup.width(), this.totalTextGroup.size()  );\n\n            //this.totalTextGroup.x( this.cx - this.totalTextGroup.width / 2 );\n            this.totalTextGroup.y(this.textY);\n            this.totalTextGroup.x((this.width - this.totalTextPostfix.textWidth - this.totalText.textWidth - 5) / 2);\n\n            this.tmpTotalText = new _konva2.default.Text(tmp);\n            this.addDestroy(this.tmpTotalText);\n        }\n    }, {\n        key: 'drawTextRect',\n        value: function drawTextRect() {\n\n            var textWidth = this.tmpTotalText.textWidth + 30 + this.totalTextPostfix.textWidth + 5,\n                textX = 0,\n                textY = 0;\n\n            if (textWidth < 170) {\n                textWidth = 170;\n            }\n            textX = this.cx - textWidth / 2 + 2;;\n\n            textY = this.textY - (this.textHeight - this.totalText.textHeight) / 2;\n\n            this.textRect = new _konva2.default.Rect({\n                fill: '#596ea7',\n                stroke: '#ffffff00',\n                strokeWidth: 0,\n                opacity: .3,\n                width: textWidth,\n                height: this.textHeight,\n                x: textX,\n                y: textY\n            });\n            this.addDestroy(this.textRect);\n\n            var points = [];\n            points.push('M', [textX, textY + this.textLineLength].join(','));\n            points.push('L', [textX, textY].join(','));\n            points.push('L', [textX + this.textLineLength, textY].join(','));\n\n            points.push('M', [textX + textWidth - this.textLineLength, textY].join(','));\n            points.push('L', [textX + textWidth, textY].join(','));\n            points.push('L', [textX + textWidth, textY + this.textLineLength].join(','));\n\n            points.push('M', [textX + textWidth, textY + this.textHeight - this.textLineLength].join(','));\n            points.push('L', [textX + textWidth, textY + this.textHeight].join(','));\n            points.push('L', [textX + textWidth - this.textLineLength, textY + this.textHeight].join(','));\n\n            points.push('M', [textX + this.textLineLength, textY + this.textHeight].join(','));\n            points.push('L', [textX, textY + this.textHeight].join(','));\n            points.push('L', [textX, textY + this.textHeight - this.textLineLength].join(','));\n\n            this.textLinePath = new _konva2.default.Path({\n                data: points.join(''),\n                stroke: this.lineColor,\n                strokeWidth: 1\n            });\n            this.addDestroy(this.textLinePath);\n\n            this.layoutLayer.add(this.textLinePath);\n            this.layoutLayer.add(this.textRect);\n            //this.layoutLayer.add( this.totalText );\n            this.layoutLayer.add(this.totalTextGroup);\n        }\n    }, {\n        key: 'drawArcText',\n        value: function drawArcText() {\n            var _this8 = this;\n\n            if (!(this.textAr && this.textAr.length)) return;\n\n            this.textAr.map(function (val) {\n                var text = new _konva2.default.Text({\n                    x: val.point.x + _this8.cx,\n                    y: val.point.y + _this8.cy,\n                    text: val.text + '',\n                    fontSize: 11 * _this8.sizeRate\n                    //, rotation: val.angle\n                    , fontFamily: 'MicrosoftYaHei',\n                    fill: _this8.lineColor\n                });\n                _this8.addDestroy(text);\n\n                text.rotation(val.angle + 90 + (val.rotationOffset || 0));\n\n                _this8.layoutLayer.add(text);\n            });\n        }\n    }, {\n        key: 'drawArcLine',\n        value: function drawArcLine() {\n\n            var points = [];\n            points.push('M');\n            for (var i = this.arcOffset; i <= this.arcOffset + this.arcAngle; i += 0.5) {\n                var tmp = geometry.distanceAngleToPoint(this.arcLineRaidus, i);\n                points.push([tmp.x, tmp.y].join(',') + ',');\n                if (i == 90) {\n                    points.push('L');\n                }\n            }\n\n            this.arcLine = new _konva2.default.Path({\n                data: points.join(''),\n                x: this.cx,\n                y: this.cy,\n                stroke: this.lineColor,\n                strokeWidth: 1,\n                fill: '#ffffff00'\n            });\n            this.addDestroy(this.arcLine);\n\n            this.arcPartLine = new _konva2.default.Path({\n                data: this.arcPartLineAr.join(''),\n                x: this.cx,\n                y: this.cy,\n                stroke: '#00000088'\n                //, stroke: this.lineColor\n                , strokeWidth: 1,\n                fill: '#ffffff00'\n            });\n            this.addDestroy(this.arcPartLine);\n\n            this.arcOutlinePart = new _konva2.default.Path({\n                data: this.arcOutlinePartAr.join(''),\n                x: this.cx,\n                y: this.cy,\n                stroke: this.lineColor,\n                strokeWidth: 1,\n                fill: '#ffffff00'\n            });\n            this.addDestroy(this.arcOutlinePart);\n\n            this.layoutLayer.add(this.arcLine);\n            this.layoutLayer.add(this.arcPartLine);\n            this.layoutLayer.add(this.arcOutlinePart);\n        }\n    }, {\n        key: 'drawArc',\n        value: function drawArc() {\n\n            var params = {\n                x: this.cx,\n                y: this.cy,\n                innerRadius: this.arcInRadius,\n                outerRadius: this.arcOutRadius,\n                angle: this.arcAngle\n                //, fill: 'red'\n                , stroke: '#ffffff00',\n                strokeWidth: 0,\n                rotation: this.arcOffset,\n                fillLinearGradientStartPoint: { x: -50, y: -50 },\n                fillLinearGradientEndPoint: { x: 50, y: 50 },\n                fillLinearGradientColorStops: [0, '#ff9000', .5, '#64b185', 1, '#5a78ca']\n            };\n            this.arc = new _konva2.default.Arc(params);\n            this.addDestroy(this.arc);\n\n            this.layoutLayer.add(this.arc);\n        }\n    }, {\n        key: 'initDataLayout',\n        value: function initDataLayout() {\n\n            if (!this.inited) {\n                this.layer = new _konva2.default.Layer();\n                this.addDestroy(this.layer);\n\n                this.layoutLayer = new _konva2.default.Layer();\n                this.addDestroy(this.layoutLayer);\n\n                this.roundLine = new _konva2.default.Circle({\n                    x: this.cx,\n                    y: this.cy,\n                    radius: this.roundRadius,\n                    stroke: this.lineColor,\n                    strokeWidth: 2.5,\n                    fill: 'rgba( 0, 0, 0, .5 )'\n                });\n                this.addDestroy(this.roundLine);\n            }\n\n            if (!this.inited) {\n                this.percentText = new _konva2.default.Text({\n                    x: this.cx,\n                    y: this.cy,\n                    text: this.getAttackText(),\n                    fontSize: 18 * this.sizeRate,\n                    fontFamily: 'HuXiaoBoKuHei',\n                    fill: '#ffffff',\n                    fontStyle: 'italic'\n                });\n                this.addDestroy(this.percentText);\n            }\n            this.percentText.text(this.getAttackText());\n            this.percentText.x(this.cx - this.percentText.textWidth / 2 + this.textOffsetX);\n            this.percentText.y(this.cy - this.percentText.textHeight / 2 + this.textOffsetY);\n\n            if (!this.inited) {\n                var wedge = new _konva2.default.Wedge({\n                    x: 0,\n                    y: -3,\n                    radius: 10,\n                    angle: 20,\n                    fill: '#ff5a00',\n                    stroke: '#ff5a00',\n                    strokeWidth: 1,\n                    rotation: 90\n                });\n                this.addDestroy(wedge);\n\n                var wedge1 = new _konva2.default.Wedge({\n                    x: 0,\n                    y: -3,\n                    radius: 10,\n                    angle: 20,\n                    fill: '#973500',\n                    stroke: '#973500',\n                    strokeWidth: 1,\n                    rotation: 65\n                });\n                this.addDestroy(wedge1);\n\n                var group = new _konva2.default.Group({\n                    x: this.cx,\n                    y: this.cy\n                });\n                this.addDestroy(group);\n\n                group.add(wedge1);\n                group.add(wedge);\n\n                this.group = group;\n            }\n\n            this.initRoundText();\n\n            if (!this.inited) {\n                this.angle = this.arcOffset - 2;\n\n                this.layer.add(this.group);\n                this.layer.add(this.roundLine);\n                this.layer.add(this.percentText);\n                //this.layer.add( this.percentSymbolText );\n\n\n                this.drawCircle();\n                this.drawCircleLine();\n                this.drawArc();\n                this.drawArcLine();\n                this.drawArcText();\n                this.drawText();\n                this.drawTextRect();\n            }\n\n            this.stage.add(this.layer);\n            this.stage.add(this.layoutLayer);\n        }\n    }, {\n        key: 'animation',\n        value: function animation() {\n            var _this9 = this;\n\n            //console.log( this.angle, this.animationAngle );\n            if (this.isDestroy) return;\n            if (this.angle > this.animationAngle) return;\n\n            this.angle += this.rateStep;\n\n            if (this.angle >= this.animationAngle || !this.isAnimation()) {\n                this.angle = this.animationAngle;\n            };\n\n            this.updateWedge();\n\n            this.stage.add(this.layer);\n\n            window.requestAnimationFrame(function () {\n                _this9.animation();\n            });\n        }\n    }, {\n        key: 'updateWedge',\n        value: function updateWedge() {\n            var point = geometry.distanceAngleToPoint(this.roundRadius + 6, this.angle);\n            this.group.x(this.cx + point.x);\n            this.group.y(this.cy + point.y);\n            this.group.rotation(this.angle + 90);\n            this.group.rotation(this.angle + 90);\n            this.stage.add(this.layer);\n        }\n    }, {\n        key: 'calcDataPosition',\n        value: function calcDataPosition() {}\n    }, {\n        key: 'animationLine',\n        value: function animationLine() {}\n    }, {\n        key: 'addIcon',\n        value: function addIcon(path, layer) {}\n    }, {\n        key: 'addText',\n        value: function addText(path, layer) {}\n    }, {\n        key: 'calcLayoutPosition',\n        value: function calcLayoutPosition() {}\n    }, {\n        key: 'drawCircle',\n        value: function drawCircle() {\n            this.circleRadius = Math.ceil(this.circlePercent * this.max / 2) * this.sizeRate;\n\n            this.circle = new _konva2.default.Circle({\n                x: this.cx,\n                y: this.cy,\n                radius: this.circleRadius,\n                stroke: this.lineColor,\n                strokeWidth: 1,\n                fill: '#ffffff00'\n            });\n            this.addDestroy(this.circle);\n            this.layoutLayer.add(this.circle);\n        }\n    }, {\n        key: 'drawCircleLine',\n        value: function drawCircleLine() {\n            this.circleLineRadius = Math.ceil(this.circleLinePercent * this.max / 2) * this.sizeRate;\n\n            var points = [];\n            points.push('M');\n            for (var i = 90; i <= 180; i++) {\n                var tmp = geometry.distanceAngleToPoint(this.circleLineRadius, i + 90);\n                points.push([tmp.x, tmp.y].join(',') + ',');\n                if (i == 90) {\n                    points.push('L');\n                }\n            }\n            points.push('M');\n            for (var _i = 270; _i <= 360; _i++) {\n                var _tmp = geometry.distanceAngleToPoint(this.circleLineRadius, _i + 90);\n                points.push([_tmp.x, _tmp.y].join(',') + ',');\n                if (_i == 270) {\n                    points.push('L');\n                }\n            }\n\n            this.circleLine = new _konva2.default.Path({\n                data: points.join(''),\n                x: this.cx,\n                y: this.cy,\n                stroke: this.lineColor,\n                strokeWidth: 1.5,\n                fill: '#ffffff00'\n            });\n            this.addDestroy(this.circleLine);\n\n            this.layoutLayer.add(this.circleLine);\n        }\n    }, {\n        key: 'reset',\n        value: function reset() {}\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            _get(Gauge.prototype.__proto__ || Object.getPrototypeOf(Gauge.prototype), 'destroy', this).call(this);\n            this.textRoundAngle.map(function (val) {\n                if (val.ins) val.ins.destroy();\n            });\n        }\n    }]);\n\n    return Gauge;\n}(_base2.default);\n\nexports.default = Gauge;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _base = require('../common/base.js');\n\nvar _base2 = _interopRequireDefault(_base);\n\nvar _geometry = require('../../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _utils = require('../../common/utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar RoundStateText = function (_VisChartBase) {\n    _inherits(RoundStateText, _VisChartBase);\n\n    function RoundStateText(box, width, height) {\n        _classCallCheck(this, RoundStateText);\n\n        var _this = _possibleConstructorReturn(this, (RoundStateText.__proto__ || Object.getPrototypeOf(RoundStateText)).call(this, box, width, height));\n\n        _this.name = 'RoundStateText ' + Date.now();\n\n        _this.radius = 30;\n\n        _this.textOffsetX = -2;\n        _this.textOffsetY = -1;\n\n        _this.circleLineRotation = 0;\n        _this.circleLineRotationStep = 4;\n\n        _this.curColor = '#deaf5c';\n        return _this;\n    }\n\n    _createClass(RoundStateText, [{\n        key: 'animationCircleLine',\n        value: function animationCircleLine() {\n            var _this2 = this;\n\n            if (this.isDestroy) return;\n            if (!this.circleLine) return;\n\n            if (!this.isAnimation()) {\n                return;\n            }\n\n            this.circleLineRotation += this.circleLineRotationStep;\n\n            this.circleLine.rotation(this.circleLineRotation);\n            this.stage.add(this.layer);\n\n            window.requestAnimationFrame(function () {\n                _this2.animationCircleLine();\n            });\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            //console.log( 'RoundStateText init', this );\n            this.circleRaidus = this.radius - 5;\n            this.circleRaidus *= this.sizeRate;\n\n            //this.lineColor = this.curColor;\n\n            this.initDataLayout();\n\n            this.animationCircleLine();\n\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(rate) {\n            this.rate = rate;\n\n            var color = this.lineColor;\n\n            if (rate >= this.min && rate < this.max) {\n                color = this.curColor;\n            }\n\n            this.text.fill(color);\n            this.circle.stroke(color);\n            this.circleLine.stroke(color);\n\n            this.stage.add(this.layer);\n\n            //console.log( 'rate', rate );\n\n            return this;\n        }\n    }, {\n        key: 'initDataLayout',\n        value: function initDataLayout() {\n            this.drawText();\n            this.drawCircle();\n            this.drawCircleLine();\n        }\n    }, {\n        key: 'drawText',\n        value: function drawText() {\n            this.text = new _konva2.default.Text({\n                x: this.point.x,\n                y: this.point.y,\n                text: this.text,\n                fontSize: 32 * this.sizeRate,\n                fontFamily: 'HuXiaoBoKuHei',\n                fill: this.lineColor,\n                fontStyle: 'italic'\n            });\n            this.addDestroy(this.text);\n\n            this.text.x(this.point.x - this.text.textWidth / 2 + this.textOffsetX);\n            this.text.y(this.point.y - this.text.textHeight / 2 + this.textOffsetY);\n\n            this.layer.add(this.text);\n        }\n    }, {\n        key: 'drawCircle',\n        value: function drawCircle() {\n            this.circle = new _konva2.default.Circle({\n                x: this.point.x,\n                y: this.point.y,\n                radius: this.circleRaidus,\n                stroke: this.lineColor,\n                strokeWidth: 2,\n                fill: '#ffffff00'\n            });\n            this.addDestroy(this.circle);\n\n            this.layer.add(this.circle);\n        }\n    }, {\n        key: 'drawCircleLine',\n        value: function drawCircleLine() {\n            this.circleLineRadius = this.radius - 1;\n            this.circleLineRadius *= this.sizeRate;\n\n            var points = [];\n            points.push('M');\n            for (var i = 90; i <= 180; i++) {\n                var tmp = geometry.distanceAngleToPoint(this.circleLineRadius, i + 90);\n                points.push([tmp.x, tmp.y].join(',') + ',');\n                if (i == 90) {\n                    points.push('L');\n                }\n            }\n            points.push('M');\n            for (var _i = 270; _i <= 360; _i++) {\n                var _tmp = geometry.distanceAngleToPoint(this.circleLineRadius, _i + 90);\n                points.push([_tmp.x, _tmp.y].join(',') + ',');\n                if (_i == 270) {\n                    points.push('L');\n                }\n            }\n\n            this.circleLine = new _konva2.default.Path({\n                data: points.join(''),\n                x: this.point.x,\n                y: this.point.y,\n                stroke: this.lineColor,\n                strokeWidth: 2,\n                fill: '#ffffff00'\n            });\n            this.addDestroy(this.circleLine);\n\n            this.layer.add(this.circleLine);\n        }\n    }, {\n        key: 'reset',\n        value: function reset() {}\n    }, {\n        key: 'calcDataPosition',\n        value: function calcDataPosition() {}\n    }, {\n        key: 'animationLine',\n        value: function animationLine() {}\n    }, {\n        key: 'calcLayoutPosition',\n        value: function calcLayoutPosition() {}\n    }]);\n\n    return RoundStateText;\n}(_base2.default);\n\nexports.default = RoundStateText;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar CHART_TYPE = exports.CHART_TYPE = {\n    dount: 'dount',\n    gauge: 'gauge'\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _base = require('./base.js');\n\nvar _base2 = _interopRequireDefault(_base);\n\nvar _geometry = require('../../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _utils = require('../../common/utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Legend = function (_VisChartBase) {\n    _inherits(Legend, _VisChartBase);\n\n    function Legend(box, width, height) {\n        _classCallCheck(this, Legend);\n\n        var _this = _possibleConstructorReturn(this, (Legend.__proto__ || Object.getPrototypeOf(Legend)).call(this, box, width, height));\n\n        _this.name = 'Legend ' + Date.now();\n\n        _this.textColor = '#24a3ea';\n\n        _this.iconSpace = 5;\n\n        _this.text = [];\n        _this.icon = [];\n        _this.group = [];\n\n        _this.destroyList = [];\n        return _this;\n    }\n\n    _createClass(Legend, [{\n        key: 'setStage',\n        value: function setStage(stage) {\n            _get(Legend.prototype.__proto__ || Object.getPrototypeOf(Legend.prototype), 'setStage', this).call(this, stage);\n\n            this.layer = new _konva2.default.Layer({});\n            this.addDestroy(this.layer);\n\n            stage.add(this.layer);\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            var _this2 = this;\n\n            this.data.data.map(function (item, key) {\n                var x = 0,\n                    y = 0,\n                    count = key + 1,\n                    curRow = Math.floor(key / _this2.column());\n\n                switch (_this2.direction()) {\n                    case 'bottom':\n                        {\n                            x = _this2.space() + (_this2.space() + _this2.columnWidth()) * (key % _this2.column());\n                            y = _this2.height - (_this2.row() - curRow) * (_this2.spaceY() + _this2.rowHeight());\n                            //console.log( x, y, key, this.direction(), curRow );\n                            break;\n                        }\n                }\n\n                var label = item.name || key + '';\n\n                var color = _this2.colors[key % _this2.colors.length];\n\n                if (_jsonUtilsx2.default.jsonInData(item, 'textStyle.color')) {\n                    //path.fill( val.itemStyle.color );\n                    color = item.textStyle.color;\n                }\n\n                if (!_this2.inited) {\n                    var rect = new _konva2.default.Rect({\n                        x: x,\n                        y: y,\n                        width: _this2.itemWidth(),\n                        height: _this2.itemHeight(),\n                        fill: color\n                    });\n                    _this2.addDestroy(rect);\n\n                    var bg = new _konva2.default.Rect({\n                        x: x,\n                        y: y,\n                        width: _this2.columnWidth(),\n                        height: _this2.rowHeight(),\n                        fill: '#ffffff00'\n                    });\n                    _this2.addDestroy(bg);\n\n                    var text = new _konva2.default.Text({\n                        text: label,\n                        x: x + _this2.iconSpace + rect.width(),\n                        y: y,\n                        fill: _this2.textColor,\n                        fontFamily: 'MicrosoftYaHei',\n                        fontSize: 12\n                    });\n                    _this2.addDestroy(text);\n\n                    var group = new _konva2.default.Group();\n                    _this2.addDestroy(group);\n                    group.add(bg);\n                    group.add(rect);\n                    group.add(text);\n\n                    var data = {\n                        ele: group,\n                        item: item,\n                        disabled: false,\n                        rect: rect,\n                        bg: bg,\n                        text: text\n                    };\n\n                    _this2.group.push(data);\n                    group.on('click', function () {\n                        //console.log( 'click', key, data, group, item );\n                        data.disabled = !data.disabled;\n\n                        if (data.disabled) {\n                            group.opacity(.6);\n                        } else {\n                            group.opacity(1);\n                        }\n\n                        _this2.stage.add(_this2.layer);\n\n                        _this2.onChange && _this2.onChange(_this2.group);\n                    });\n\n                    _this2.layer.add(group);\n                } else {\n                    var curgroup = _this2.group[key];\n\n                    curgroup.rect.x(x);\n                    curgroup.rect.y(y);\n                    curgroup.rect.width(_this2.itemWidth());\n                    curgroup.rect.height(_this2.itemHeight());\n\n                    curgroup.bg.x(x);\n                    curgroup.bg.y(y);\n                    curgroup.bg.width(_this2.itemWidth());\n                    curgroup.bg.height(_this2.itemHeight());\n\n                    curgroup.text.x(x + _this2.iconSpace + curgroup.rect.width());\n                    curgroup.text.y(y);\n                }\n            });\n            this.stage.add(this.layer);\n\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(data) {\n            this.data = data || {};\n            if (!(this.data && this.data.data && this.data.data.length)) return;\n\n            /*\n            console.log( \n                this.column()\n                , this.row()\n                , this.direction() \n                , this.outerHeight()\n                , 'columnWidth:', this.columnWidth()\n            );\n            console.log( this.width, this.width - ( this.column() - 1  + 2 ) * this.space() );\n            */\n\n            this.init();\n\n            this.inited = 1;\n        }\n    }, {\n        key: 'outerHeight',\n        value: function outerHeight() {\n            return this.rowHeight() * this.row() + this.space();\n        }\n    }, {\n        key: 'total',\n        value: function total() {\n            var r = 0;\n\n            return r;\n        }\n    }, {\n        key: 'itemWidth',\n        value: function itemWidth() {\n            return this.data.itemWidth || 5;\n        }\n    }, {\n        key: 'itemHeight',\n        value: function itemHeight() {\n            return this.data.itemHeight || 5;\n        }\n    }, {\n        key: 'columnWidth',\n        value: function columnWidth() {\n            return (this.width - (this.column() - 1 + 2) * this.space()) / this.column();\n        }\n    }, {\n        key: 'column',\n        value: function column() {\n            return this.data.column || 1;\n        }\n    }, {\n        key: 'space',\n        value: function space() {\n            return this.data.space || 15;\n        }\n    }, {\n        key: 'spaceY',\n        value: function spaceY() {\n            return this.data.space || 0;\n        }\n    }, {\n        key: 'rowHeight',\n        value: function rowHeight() {\n            return this.data.rowHeight || 22;\n        }\n    }, {\n        key: 'row',\n        value: function row() {\n            return Math.ceil(this.data.data.length / this.column());\n        }\n    }, {\n        key: 'direction',\n        value: function direction() {\n            var r = 'top';\n\n            if (this.data.bottom) {\n                r = 'bottom';\n            } else if (this.data.left) {\n                r = 'left';\n            } else if (this.data.right) {\n                r = 'right';\n            }\n\n            return r;\n        }\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            _get(Legend.prototype.__proto__ || Object.getPrototypeOf(Legend.prototype), 'destroy', this).call(this);\n            console.log(this.name, 'destroy', Date.now());\n\n            this.group && this.group.length && this.group.map(function (item) {\n                //if( !item.ele ) return;\n                item.ele.off('click');\n            });\n        }\n    }]);\n\n    return Legend;\n}(_base2.default);\n\nexports.default = Legend;","\n\nimport VisChart from 'vischart';\n\nimport fontfaceobserver from 'fontfaceobserver';\n\nimport * as base64img from './data/base64img.js';\n\nlet Data = require( './data/gauge.json' );\nlet Data0 = require( './data/gauge0.json' );\nlet Data1 = require( './data/gauge1.json' );\nlet DataZero = require( './data/gaugezero.json' );\nlet Data1100 = require( './data/gauge1100.json' );\nlet DataDisableAnimation = require( './data/gauge-disable-animation.json' );\n\nlet background = [\n    { \n        //\"url\": \"./img/rate-out.png\"\n        \"url\": base64img.rateOut\n        , \"isbase64\": true\n        , 'base64prefix': 'data:image/png;base64,'\n        , \"width\": 120\n        , \"height\": 120\n        , \"offsetX\": 0\n        , \"offsetY\": 1\n        , \"rotation\": 1\n    }\n];\n\n\nlet font = new fontfaceobserver( 'HuXiaoBoKuHei' );\nfont.load().then(function () {\n\n    let size = 300;\n\n    let box = document.querySelector('#twoBox');\n\n    //let data = Data;\n    let data = DataZero;\n        //data = DataDisableAnimation;\n        data \n        && data.series \n        && data.series.map( item => {\n            item.background = background;\n        });\n\n    let dmins = new VisChart( box, 386, 283 );\n        dmins.update( data, 1, 0 ); \n\n    window.addEventListener( 'resize', ()=>{\n\n        window.tmpTimeout && clearTimeout( window.tmpTimeout );\n\n        window.tmpTimeout = setTimeout( ()=>{\n            console.log( 'onresize', Date.now(), window.innerHeight );\n            /*\n            let size = window.innerHeight / 2;\n\n            dmins.resize( size, size );\n            */\n            let data = DataZero;\n                data \n                && data.series \n                && data.series.map( item => {\n                    item.background = background;\n                });\n            //dmins.resize( 500, 500 ); \n            dmins.update( data, 1, 0 );\n\n        }, 1000 );\n\n\n    });\n\n    //setInterval( ()=>{\n    setTimeout( ()=>{\n        //let data = Data1100;\n        let data = Data1;\n        //let data = DataZero;\n            data \n            && data.series \n            && data.series.map( item => {\n                item.background = background;\n            });\n        //dmins.resize( 500, 500 ); \n        dmins.update( data, 1, 0 );\n    }, 2000 );\n\n/*\n\n    setTimeout( ()=>{\n        let data = Data1100;\n            data \n            && data.series \n            && data.series.map( item => {\n                item.background = background;\n            });\n\n        dmins.resize( 300, 300, data ); \n    }, 3000 );\n\n    setTimeout( ()=>{\n        let data = Data1100;\n            data \n            && data.series \n            && data.series.map( item => {\n                item.background = background;\n            });\n\n\n        dmins.resize( 386, 250, data ); \n    }, 3000 );\n\n*/\n\n\n\n}, function () {\n  console.log('Font is not available');\n});\n\n\n\n"],"sourceRoot":""}
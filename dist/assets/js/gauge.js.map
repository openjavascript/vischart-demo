{"version":3,"sources":["webpack:///../vischart/dist/common/vischartbase.js","webpack:///../vischart/dist/geometry/geometry.js","webpack:///../vischart/dist/common/utils.js","webpack:///../vischart/dist/common/pointat.js","webpack:///../vischart/dist/index.js","webpack:///../vischart/dist/dount/index.js","webpack:///../vischart/dist/icon/iconcircle.js","webpack:///../vischart/dist/gauge/index.js","webpack:///../vischart/dist/icon/iconround.js","webpack:///../vischart/dist/icon/roundstatetext.js","webpack:///../vischart/dist/common/constant.js","webpack:///../vischart/dist/common/legend.js","webpack:///./src/assets/js/gauge.js"],"names":["Object","defineProperty","exports","value","obj","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_konva","__webpack_require__","_konva2","__esModule","default","VisChartBase","box","width","height","instance","TypeError","_classCallCheck","this","customWidth","customHeight","offsetWidth","offsetHeight","max","Math","min","cx","cy","cpoint","x","y","totalAngle","angleOffset","countAngle","images","rateWidth","rateHeight","colors","data","allData","loadImage","legend","imgUrl","offsetX","arguments","undefined","offsetY","rateW","rateH","push","url","_this","iconLayer","remove","Layer","background","map","val","addImage","item","img","Image","onload","icon","image","fixCx","fixCy","add","stage","src","r","direction","outerHeight","options","layer","pointRectangleIntersection","p","x2","y2","pointDistance","_p1","_p2","_dx","_dy","sqrt","pointAngle","angle","atan2","PI","distanceAngleToPoint","_distance","_angle","_radian","cos","sin","radians","degree","_radians","intersectRect","r1","r2","fixEndAngle","startAngle","endAngle","pointPlus","p1","p2","parseFinance","_i","_dot","parseFloat","toFixed","_interopRequireDefault","_jsonUtilsx2","geometry","newObj","hasOwnProperty","call","_interopRequireWildcard","PointAt","point","init","rects","params","clone","fill","rect","Rect","leftTop","rightTop","leftBottom","rightBottom","isLeftTop","isRightTop","isRightBottom","isLeftBottom","DIRE_NAME","topCenter","rightMid","bottomCenter","leftMid","DIRE_NUM","1","2","4","8","3","6","9","12","_vischartbase2","_index2","_index4","constant","_legend2","VisChart","_VisChartBase","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","ins","subClass","superClass","create","constructor","setPrototypeOf","_inherits","Stage","container","style","_this2","jsonInData","removeChildren","setStage","update","series","type","CHART_TYPE","dount","gauge","setLegend","setOptions","_pointat2","utils","_iconcircle2","Dount","name","Date","now","outPercent","inPercent","circleLinePercent","circlePercent","animationStep","angleStep","textHeight","lineOffset","path","textOffset","lineColor","lineRange","lineWidth","lineSpace","lineAngle","lineHeight","loopSort","calcLayoutPosition","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","parent","getter","_get","calcDataPosition","initDataLayout","animation","pathData","isDone","tmppoint","step","reset","tmpAngle","itemData","outRadius","join","_i2","inRadius","setData","setZIndex","window","requestAnimationFrame","animationLine","circleRadius","ceil","circle","Circle","radius","stroke","strokeWidth","layoutLayer","circleLineRadius","points","tmp","_i3","_tmp","circleLine","Path","_this3","line","drawCircle","drawCircleLine","color","itemStyle","on","evt","Line","_this4","total","_percent","_totalPercent","percent","parseInt","midAngle","lineStart","lineEnd","lineLength","textPoint","pointDirection","fixWidth","fixHeight","autoAngle","lineExpend","pre","cur","abs","tmpY","_i4","_cur","_tmpY","_i5","_cur2","_tmpY2","_i6","_cur3","_tmpY3","_i7","_cur4","_this5","lineLengthCount","lineLengthStep","addText","addIcon","text","Text","fontFamily","fontSize","fontStyle","angleDirect","textWidth","textX","textY","auto","lineLeft","lineRight","IconCircle","isplus","group","Group","outcircle","scale","plus","_roundstatetext2","Gauge","curRate","totalNum","totalNumStep","roundRadiusPercent","arcLinePercent","arcOutPercent","arcInPercent","arcLabelLength","arcTextLength","arcAngle","part","arcTotal","arcOffset","arcOffsetPad","partLabel","partAngle","partNum","textOffsetX","textOffsetY","textLineLength","textRectWidthPercent","textRectHeightPercent","textRoundPercent","textRoundOffsetAngle","textRoundPlusAngle","textRoundMaxAngle","roundStatusRaidus","textRoundAngle","pow","getAttackRatePercent","textRoundRadius","roundRadius","arcInRadius","arcOutRadius","arcLineRaidus","arcPartLineAr","arcOutlinePartAr","textAr","start","end","assign","animationAngle","getAttackRateAngle","rateStep","floor","totalNumCount","animationText","totalText","tmpTotalText","textRect","opacity","textLinePath","_this6","rotation","arcLine","arcPartLine","arcOutlinePart","innerRadius","outerRadius","fillLinearGradientStartPoint","fillLinearGradientEndPoint","fillLinearGradientColorStops","arc","Arc","roundLine","percentText","getAttackText","wedge","Wedge","wedge1","drawArc","drawArcLine","drawArcText","drawText","drawTextRect","initRoundText","_this7","_this8","IconRound","RoundStateText","curColor","circleRaidus","rate","Legend","curRow","column","row","space","rowHeight","columnWidth","bottom","left","right","a","load","then","dmins","vischart__WEBPACK_IMPORTED_MODULE_0___default","document","querySelector","setTimeout"],"mappings":"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","file":"assets/js/gauge.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar VisChartBase = function () {\n    function VisChartBase(box, width, height) {\n        _classCallCheck(this, VisChartBase);\n\n        this.box = box;\n\n        this.customWidth = width;\n        this.customHeight = height;\n\n        this.width = width || box.offsetWidth;\n        this.height = height || box.offsetHeight;\n\n        this.max = Math.max(this.width, this.height);\n        this.min = Math.min(this.width, this.height);\n\n        this.cx = this.width / 2;\n        this.cy = this.height / 2;\n        this.cpoint = { x: this.cx, y: this.cy };\n\n        this.totalAngle = 360;\n        this.angleOffset = 0;\n        this.countAngle = 0;\n\n        this.images = [];\n\n        this.rateWidth = 330;\n        this.rateHeight = 330;\n\n        this.colors = ['#f12575', '#da432e', '#f3a42d', '#19af89', '#24a3ea', '#b56be8'];\n    }\n\n    _createClass(VisChartBase, [{\n        key: 'update',\n        value: function update(data, allData) {\n            this.data = data;\n            this.allData = allData;\n\n            this.loadImage();\n\n            return this;\n        }\n    }, {\n        key: 'setLegend',\n        value: function setLegend(legend) {\n            this.legend = legend;\n        }\n    }, {\n        key: 'addImage',\n        value: function addImage(imgUrl, width, height) {\n            var offsetX = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n            var offsetY = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n\n            //console.log( this.rateWidth, this.width );\n            var rateW = this.min / this.rateWidth,\n                rateH = this.min / this.rateHeight;\n            this.images.push({\n                url: imgUrl,\n                width: width * rateW,\n                height: height * rateH,\n                offsetX: offsetX,\n                offsetY: offsetY\n            });\n\n            return this;\n        }\n\n        /*\n            \"background\": [\n                { \n                    \"url\": \"./img/dount-in.png\"\n                    , \"width\": 120\n                    , \"height\": 120\n                    , \"offsetX\": 0\n                    , \"offsetY\": 1\n                }\n                , { \n                    \"url\": \"./img/dount-big.png\"\n                    , \"width\": 250\n                    , \"height\": 248\n                    , \"offsetX\": 0\n                    , \"offsetY\": 1\n                }\n            ],\n        */\n\n    }, {\n        key: 'loadImage',\n        value: function loadImage() {\n            var _this = this;\n\n            if (this.iconLayer) this.iconLayer.remove();\n            this.iconLayer = new _konva2.default.Layer();\n\n            this.images = [];\n\n            if (this.data && this.data.background && this.data.background.length) {\n                this.data.background.map(function (val) {\n                    _this.addImage(val.url, val.width, val.height, val.offsetX || 0, val.offsetY || 0);\n                });\n            }\n\n            this.images.map(function (item) {\n\n                var img = new Image();\n                img.onload = function () {\n                    var width = item.width || img.width,\n                        height = item.height || img.height;\n\n                    var icon = new _konva2.default.Image({\n                        image: img,\n                        x: _this.fixCx() - width / 2 + item.offsetX,\n                        y: _this.fixCy() - height / 2 + item.offsetY,\n                        width: width,\n                        height: height\n                    });\n\n                    _this.iconLayer.add(icon);\n\n                    _this.stage.add(_this.iconLayer);\n                };\n                img.src = item.url;\n            });\n\n            return this;\n        }\n    }, {\n        key: 'hasLegend',\n        value: function hasLegend() {\n            var r = void 0;\n\n            if (this.data && this.data.legend && this.data.legend.data && this.data.legend.data.length) {\n                r = true;\n            }\n\n            return r;\n        }\n    }, {\n        key: 'fixCx',\n        value: function fixCx() {\n            var r = this.cx;\n            return r;\n        }\n    }, {\n        key: 'fixCy',\n        value: function fixCy() {\n            var r = this.cy;\n\n            if (this.legend) {\n                switch (this.legend.direction()) {\n                    case 'bottom':\n                        {\n                            r = (this.height - this.legend.outerHeight() / 2) / 2;\n                            break;\n                        }\n                }\n            }\n\n            return r;\n        }\n    }, {\n        key: 'fixWidth',\n        value: function fixWidth() {\n            var r = this.width;\n            return r;\n        }\n    }, {\n        key: 'fixHeight',\n        value: function fixHeight() {\n            var r = this.height;\n            return r;\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            return this;\n        }\n    }, {\n        key: 'setOptions',\n        value: function setOptions(options) {\n\n            for (var key in options) {\n                this[key] = options[key];\n            }\n\n            this.options = options;\n        }\n    }, {\n        key: 'calcLayoutPosition',\n        value: function calcLayoutPosition() {\n            return this;\n        }\n    }, {\n        key: 'calcDataPosition',\n        value: function calcDataPosition() {\n            return this;\n        }\n    }, {\n        key: 'initDataLayout',\n        value: function initDataLayout() {\n            return this;\n        }\n    }, {\n        key: 'draw',\n        value: function draw() {\n            return this;\n        }\n    }, {\n        key: 'reset',\n        value: function reset() {}\n    }, {\n        key: 'animation',\n        value: function animation() {}\n    }, {\n        key: 'getData',\n        value: function getData() {\n            return this.data || {};\n        }\n    }, {\n        key: 'layer',\n        value: function layer() {\n            return this.layer;\n        }\n    }, {\n        key: 'setLayer',\n        value: function setLayer(layer) {\n            this.layer = layer;\n            return this;\n        }\n    }, {\n        key: 'setStage',\n        value: function setStage(stage) {\n            this.stage = stage;\n        }\n    }]);\n\n    return VisChartBase;\n}();\n\nexports.default = VisChartBase;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.pointRectangleIntersection = pointRectangleIntersection;\nexports.pointDistance = pointDistance;\nexports.pointAngle = pointAngle;\nexports.distanceAngleToPoint = distanceAngleToPoint;\nexports.radians = radians;\nexports.degree = degree;\nexports.intersectRect = intersectRect;\nexports.fixEndAngle = fixEndAngle;\nexports.pointPlus = pointPlus;\n\n/**\n * 判断一个点是否在矩形里面\n * @method  pointRectangleIntersection\n * @param   {point} _p\n * @param   {rect}  _r\n * @return  Boolean\n * @static\n */\nfunction pointRectangleIntersection(p, r) {\n    return p.x >= r.x && p.x <= r.x2 && p.y >= r.y && p.y <= r.y2;\n}\n/**\n * 计算两个坐标点之间的距离\n * @method pointDistance\n * @param   {point} _p1\n * @param   {point} _p2\n * @return  Boolean\n * @static\n */\nfunction pointDistance(_p1, _p2) {\n    var _dx = _p2.x - _p1.x,\n        _dy = _p2.y - _p1.y,\n        _dist = Math.sqrt(_dx * _dx + _dy * _dy);\n    ;\n    return _dist;\n}\n/**\n * 计算两个坐标点之间的角度\n * @method pointAngle\n * @param   {point} _p1\n * @param   {point} _p2\n * @return  Boolean\n * @static\n */\nfunction pointAngle(_p1, _p2) {\n    var angle = Math.atan2(_p2.y - _p1.y, _p2.x - _p1.x) * 180 / Math.PI;\n    if (angle < 0) {\n        angle = 360 + angle;\n    }\n\n    return angle;\n}\n\n/**\n * 从长度和角度求坐标点\n * @method  distanceAngleToPoint\n * @param  {Number} _distance\n * @param  {Number} _angle\n * @return Point\n * @static\n */\nfunction distanceAngleToPoint(_distance, _angle) {\n    var _radian = _angle * Math.PI / 180;\n    return {\n        x: Math.cos(_radian) * _distance,\n        y: Math.sin(_radian) * _distance\n    };\n}\n/**\n * 从角度获取弧度\n * @method  radians\n * @param   {Number} _angle\n * @return  {Number}\n * @static\n */\nfunction radians(_angle) {\n    return _angle * Math.PI / 180;\n}\n/**\n * 从弧度获取角度\n * @method  degree\n * @param   {Number} _radians\n * @return  {Number}\n * @static\n */\nfunction degree(_radians) {\n    return _radians / Math.PI * 180;\n}\n/**\n * 判断两个矩形是否有交集\n * @method intersectRect\n * @param   {rect_Object}   r1\n * @param   {rect_Object}   r2\n * @return  {Boolean}\n */\nfunction intersectRect(r1, r2) {\n    return !(r2.x > r1.x + r1.width || r2.x + r2.width < r1.x || r2.y > r1.y + r1.height || r2.y + r2.height < r1.y);\n}\n\nfunction fixEndAngle(startAngle, endAngle) {\n    if (endAngle < startAngle) {\n        endAngle += 360;\n    }\n    return endAngle;\n}\n\nfunction pointPlus(p1, p2) {\n    return {\n        x: p1.x + p2.x,\n        y: p1.y + p2.y\n    };\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseFinance = parseFinance;\n\n\n/**\n * 取小数点的N位\n * <br />JS 解析 浮点数的时候，经常出现各种不可预知情况，这个函数就是为了解决这个问题\n * @method  parseFinance\n * @static\n * @param   {number}    _i\n * @param   {int}       _dot  default = 2\n * @return  number\n */\nfunction parseFinance(_i, _dot) {\n  _i = parseFloat(_i) || 0;\n  typeof _dot == 'undefined' && (_dot = 2);\n  _i && (_i = parseFloat(_i.toFixed(_dot)));\n  return _i;\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _geometry = require('../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar PointAt = function () {\n    function PointAt(width, height, point) {\n        _classCallCheck(this, PointAt);\n\n        this.width = width;\n        this.height = height;\n        this.point = point;\n\n        this.cx = this.width / 2;\n        this.cy = this.height / 2;\n\n        this.cpoint = { x: this.cx, y: this.cy };\n\n        this.offsetX = 20;\n        this.offsetY = 20;\n\n        this.colors = ['#f12575', '#da432e', '#f3a42d', '#19af89', '#24a3ea', '#b56be8'];\n\n        this.init();\n    }\n\n    _createClass(PointAt, [{\n        key: 'setDebug',\n        value: function setDebug(stage) {\n            this.stage = stage;\n\n            this.layer = new _konva2.default.Layer();\n\n            var i = 0;\n\n            for (var key in this.rects) {\n\n                var item = this.rects[key];\n                var params = _jsonUtilsx2.default.clone(item);\n                params.fill = this.colors[i % this.colors.length];\n\n                var rect = new _konva2.default.Rect(params);\n\n                this.layer.add(rect);\n\n                i++;\n            }\n\n            this.stage.add(this.layer);\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            this.leftTop = {\n                x: 0,\n                y: 0,\n                width: this.cx + this.offsetX,\n                height: this.cy + this.offsetY\n            };\n            this.leftTop.x2 = this.leftTop.x + this.leftTop.width;\n            this.leftTop.y2 = this.leftTop.y + this.leftTop.height;\n\n            this.rightTop = {\n                x: this.cx - this.offsetX,\n                y: 0,\n                width: this.cx + this.offsetX,\n                height: this.cy + this.offsetY\n            };\n            this.rightTop.x2 = this.rightTop.x + this.rightTop.width;\n            this.rightTop.y2 = this.rightTop.y + this.rightTop.height;\n\n            this.leftBottom = {\n                x: 0,\n                y: this.cy - this.offsetY,\n                width: this.cx + this.offsetX,\n                height: this.cy + this.offsetY\n            };\n            this.leftBottom.x2 = this.leftBottom.x + this.leftBottom.width;\n            this.leftBottom.y2 = this.leftBottom.y + this.leftBottom.height;\n\n            this.rightBottom = {\n                x: this.cx - this.offsetX,\n                y: this.cy - this.offsetY,\n                width: this.cx + this.offsetX,\n                height: this.cy + this.offsetY\n            };\n            this.rightBottom.x2 = this.rightBottom.x + this.rightBottom.width;\n            this.rightBottom.y2 = this.rightBottom.y + this.rightBottom.height;\n\n            this.rects = {\n                leftTop: this.leftTop,\n                rightTop: this.rightTop,\n                leftBottom: this.leftBottom,\n                rightBottom: this.rightBottom\n            };\n        }\n    }, {\n        key: 'isLeftTop',\n        value: function isLeftTop() {\n            return geometry.pointRectangleIntersection(this.point, this.leftTop) ? 1 : 0;\n        }\n    }, {\n        key: 'isRightTop',\n        value: function isRightTop() {\n            return geometry.pointRectangleIntersection(this.point, this.rightTop) ? 2 : 0;\n        }\n    }, {\n        key: 'isRightBottom',\n        value: function isRightBottom() {\n            return geometry.pointRectangleIntersection(this.point, this.rightBottom) ? 4 : 0;\n        }\n    }, {\n        key: 'isLeftBottom',\n        value: function isLeftBottom() {\n            return geometry.pointRectangleIntersection(this.point, this.leftBottom) ? 8 : 0;\n        }\n    }, {\n        key: 'auto',\n        value: function auto() {\n            var r = this.isLeftTop() + this.isRightTop() + this.isRightBottom() + this.isLeftBottom();\n            return r;\n        }\n    }, {\n        key: 'autoAngle',\n        value: function autoAngle() {\n            var angle = geometry.pointAngle(this.cpoint, this.point),\n                r = '';\n\n            if (angle >= 0 && angle <= 90) {\n                r = PointAt.DIRE_NAME.rightBottom;\n            } else if (angle > 90 && angle <= 180) {\n                r = PointAt.DIRE_NAME.leftBottom;\n            } else if (angle > 180 && angle <= 270) {\n                r = PointAt.DIRE_NAME.leftTop;\n            } else {\n                r = PointAt.DIRE_NAME.rightTop;\n            }\n\n            return r;\n        }\n    }]);\n\n    return PointAt;\n}();\n\nexports.default = PointAt;\n\n\nPointAt.DIRE_NAME = {\n    leftTop: 1,\n    rightTop: 2,\n    rightBottom: 4,\n    leftBottom: 8,\n\n    topCenter: 3,\n    rightMid: 6,\n    bottomCenter: 12,\n    leftMid: 9\n};\n\nPointAt.DIRE_NUM = {\n    '1': 'leftTop',\n    '2': 'rightTop',\n    '4': 'rightBottom',\n    '8': 'leftBottom',\n\n    '3': 'topCenter',\n    '6': 'rightMid',\n    '9': 'leftMid',\n    '12': 'bottomCenter'\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _vischartbase = require('./common/vischartbase.js');\n\nvar _vischartbase2 = _interopRequireDefault(_vischartbase);\n\nvar _index = require('./dount/index.js');\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _index3 = require('./gauge/index.js');\n\nvar _index4 = _interopRequireDefault(_index3);\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _constant = require('./common/constant.js');\n\nvar constant = _interopRequireWildcard(_constant);\n\nvar _legend = require('./common/legend.js');\n\nvar _legend2 = _interopRequireDefault(_legend);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar VisChart = function (_VisChartBase) {\n    _inherits(VisChart, _VisChartBase);\n\n    function VisChart(box, width, height) {\n        _classCallCheck(this, VisChart);\n\n        var _this = _possibleConstructorReturn(this, (VisChart.__proto__ || Object.getPrototypeOf(VisChart)).call(this, box, width, height));\n\n        _this.ins = [];\n        _this.legend = null;\n\n        _this.init();\n        return _this;\n    }\n\n    _createClass(VisChart, [{\n        key: 'init',\n        value: function init() {\n            //console.log( 'VisChartBase init', Date.now(), this.width, this.height, this.canvas );\n\n            if (!this.box) return;\n\n            this.stage = new _konva2.default.Stage({\n                container: this.box,\n                width: this.width,\n                height: this.height\n            });\n\n            this.customWidth && (this.box.style.width = this.customWidth + 'px');\n            this.customHeight && (this.box.style.height = this.customHeight + 'px');\n\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(data) {\n            var _this2 = this;\n\n            this.data = data;\n\n            if (!_jsonUtilsx2.default.jsonInData(this.data, 'series')) return;\n\n            //console.log( ju );\n\n            this.stage.removeChildren();\n\n            //console.log( 'update data', data );\n\n            if (_jsonUtilsx2.default.jsonInData(this.data, 'legend.data') && this.data.legend.data.length) {\n                this.legend = new _legend2.default(this.box, this.width, this.height);\n                this.legend.setStage(this.stage);\n                this.legend.update(this.data.legend);\n            }\n\n            this.data.series.map(function (val, key) {\n                //console.log( val, constant );\n                var ins = void 0;\n\n                switch (val.type) {\n                    case constant.CHART_TYPE.dount:\n                        {\n                            ins = new _index2.default(_this2.box, _this2.width, _this2.height);\n                            break;\n                        }\n                    case constant.CHART_TYPE.gauge:\n                        {\n                            ins = new _index4.default(_this2.box, _this2.width, _this2.height);\n                            break;\n                        }\n                }\n\n                if (ins) {\n                    _this2.legend && ins.setLegend(_this2.legend);\n                    _this2.options && ins.setOptions(_this2.options);\n                    ins.setStage(_this2.stage);\n                    ins.update(_jsonUtilsx2.default.clone(val), _jsonUtilsx2.default.clone(_this2.data));\n                    _this2.ins.push(ins);\n                }\n            });\n\n            return this;\n        }\n    }]);\n\n    return VisChart;\n}(_vischartbase2.default);\n\nexports.default = VisChart;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _vischartbase = require('../common/vischartbase.js');\n\nvar _vischartbase2 = _interopRequireDefault(_vischartbase);\n\nvar _geometry = require('../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _pointat = require('../common/pointat.js');\n\nvar _pointat2 = _interopRequireDefault(_pointat);\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _utils = require('../common/utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nvar _iconcircle = require('../icon/iconcircle.js');\n\nvar _iconcircle2 = _interopRequireDefault(_iconcircle);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Dount = function (_VisChartBase) {\n    _inherits(Dount, _VisChartBase);\n\n    function Dount(box, width, height) {\n        _classCallCheck(this, Dount);\n\n        var _this = _possibleConstructorReturn(this, (Dount.__proto__ || Object.getPrototypeOf(Dount)).call(this, box, width, height));\n\n        _this.name = 'Dount ' + Date.now();\n\n        _this.outPercent = .53;\n        _this.inPercent = .37;\n\n        _this.circleLinePercent = .34;\n        _this.circlePercent = .31;\n\n        _this.animationStep = 8;\n        _this.angleStep = 5;\n\n        _this.textHeight = 26;\n        _this.lineOffset = 42;\n\n        _this.path = [];\n\n        _this.textOffset = 4;\n\n        _this.lineColor = '#24a3ea';\n\n        _this.lineRange = {\n            \"1\": [],\n            \"2\": [],\n            \"4\": [],\n            \"8\": []\n        };\n\n        _this.lineWidth = 45;\n        _this.lineSpace = 10;\n        _this.lineAngle = 45;\n        _this.lineHeight = 20;\n\n        _this.loopSort = [4, 8, 1, 2];\n\n        _this.init();\n        return _this;\n    }\n\n    _createClass(Dount, [{\n        key: 'init',\n        value: function init() {\n            this.calcLayoutPosition();\n\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(data, allData) {\n            _get(Dount.prototype.__proto__ || Object.getPrototypeOf(Dount.prototype), 'update', this).call(this, data, allData);\n\n            this.data = data;\n            this.allData = allData;\n\n            if (!_jsonUtilsx2.default.jsonInData(this.data, 'data')) return;\n\n            this.calcDataPosition();\n            this.initDataLayout();\n\n            console.log('dount update', this.data, this, utils);\n\n            this.animation();\n\n            return this;\n        }\n    }, {\n        key: 'reset',\n        value: function reset() {\n            this.path.map(function (val) {\n                val.pathData = [];\n            });\n        }\n    }, {\n        key: 'animation',\n        value: function animation() {\n            var _this2 = this;\n\n            if (this.isDone) return;\n            //this.countAngle = this.totalAngle;\n\n            var tmp = void 0,\n                tmppoint = void 0,\n                step = this.angleStep;\n\n            this.countAngle += this.animationStep;\n            //this.countAngle += 350;\n\n            if (this.countAngle >= this.totalAngle) {\n                this.countAngle = this.totalAngle;\n                this.isDone = 1;\n            }\n\n            this.reset();\n\n            for (var i = this.path.length - 1; i >= 0; i--) {\n                //for( let i = 0; i < this.path.length; i++ ){\n                //let i = 2;\n                var item = this.path[i];\n\n                //console.log( i, item );\n\n                var tmpAngle = this.countAngle;\n\n                if (tmpAngle >= item.itemData.endAngle) {\n                    tmpAngle = item.itemData.endAngle;\n                }\n\n                if (tmpAngle < item.itemData.startAngle) continue;\n\n                item.pathData.push('M');\n                for (var _i = item.itemData.startAngle;; _i += step) {\n                    if (_i >= tmpAngle) _i = tmpAngle;\n\n                    tmppoint = tmp = geometry.distanceAngleToPoint(this.outRadius, _i);\n                    item.pathData.push([tmppoint.x, tmppoint.y].join(',') + ',');\n                    if (_i == item.itemData.startAngle) item.pathData.push('L');\n\n                    if (_i >= tmpAngle) break;\n                }\n                for (var _i2 = tmpAngle;; _i2 -= step) {\n                    if (_i2 <= item.itemData.startAngle) _i2 = item.itemData.startAngle;\n\n                    tmppoint = tmp = geometry.distanceAngleToPoint(this.inRadius, _i2);\n                    item.pathData.push([tmppoint.x, tmppoint.y].join(',') + ',');\n                    if (_i2 == item.itemData.startAngle) break;\n                }\n\n                item.pathData.push('z');\n\n                item.path.setData(item.pathData.join(''));\n            }\n            this.layer.map(function (val, key) {\n                _this2.stage.add(val);\n                val.setZIndex(_this2.layer.length - key);\n            });\n\n            window.requestAnimationFrame(function () {\n                _this2.animation();\n            });\n\n            if (this.isDone) {\n                window.requestAnimationFrame(function () {\n                    _this2.animationLine();\n                });\n            }\n        }\n    }, {\n        key: 'drawCircle',\n        value: function drawCircle() {\n            this.circleRadius = Math.ceil(this.circlePercent * this.min / 2);\n\n            this.circle = new _konva2.default.Circle({\n                x: this.fixCx(),\n                y: this.fixCy(),\n                radius: this.circleRadius,\n                stroke: this.lineColor,\n                strokeWidth: 2.5,\n                fill: '#ffffff00'\n            });\n            this.layoutLayer.add(this.circle);\n        }\n    }, {\n        key: 'drawCircleLine',\n        value: function drawCircleLine() {\n            this.circleLineRadius = Math.ceil(this.circleLinePercent * this.min / 2);\n\n            var points = [];\n            points.push('M');\n            for (var i = 90; i <= 180; i++) {\n                var tmp = geometry.distanceAngleToPoint(this.circleLineRadius, i);\n                points.push([tmp.x, tmp.y].join(',') + ',');\n                if (i == 90) {\n                    points.push('L');\n                }\n            }\n            points.push('M');\n            for (var _i3 = 270; _i3 <= 360; _i3++) {\n                var _tmp = geometry.distanceAngleToPoint(this.circleLineRadius, _i3);\n                points.push([_tmp.x, _tmp.y].join(',') + ',');\n                if (_i3 == 270) {\n                    points.push('L');\n                }\n            }\n\n            this.circleLine = new _konva2.default.Path({\n                data: points.join(''),\n                x: this.fixCx(),\n                y: this.fixCy(),\n                stroke: this.lineColor,\n                strokeWidth: 2.5,\n                fill: '#ffffff00'\n            });\n\n            this.layoutLayer.add(this.circleLine);\n        }\n    }, {\n        key: 'initDataLayout',\n        value: function initDataLayout() {\n            var _this3 = this;\n\n            this.layer = [];\n            this.path = [];\n            this.line = [];\n\n            this.layoutLayer = new _konva2.default.Layer();\n\n            this.drawCircle();\n            this.drawCircleLine();\n\n            this.stage.add(this.layoutLayer);\n\n            this.data.data.map(function (val, key) {\n                var color = _this3.colors[key % _this3.colors.length];\n\n                if (_jsonUtilsx2.default.jsonInData(val, 'itemStyle.color')) {\n                    //path.fill( val.itemStyle.color );\n                    color = val.itemStyle.color;\n                }\n\n                var path = new _konva2.default.Path({\n                    x: _this3.fixCx(),\n                    y: _this3.fixCy(),\n                    strokeWidth: 1,\n                    stroke: color,\n                    data: '',\n                    fill: color\n                });\n\n                /*\n                console.log( \n                    key % this.colors.length\n                    , this.colors[ key % this.colors.length] \n                );\n                */\n\n                var tmp = {\n                    path: path,\n                    pathData: [],\n                    itemData: val\n                };\n\n                _this3.path.push(tmp);\n\n                path.on('mouseenter', function (evt) {\n                    //console.log( 'path mouseenter', Date.now() );\n                });\n\n                path.on('mouseleave', function () {\n                    //console.log( 'path mouseleave', Date.now() );\n                });\n\n                var line = new _konva2.default.Line({\n                    x: _this3.fixCx(),\n                    y: _this3.fixCy(),\n                    points: [0, 0, 0, 0],\n                    stroke: '#ffffff',\n                    strokeWidth: 2\n                });\n                _this3.line.push(line);\n\n                var layer = new _konva2.default.Layer();\n                layer.add(path);\n                layer.add(line);\n\n                _this3.layer.push(layer);\n            });\n            this.layer.map(function (val, key) {\n                _this3.stage.add(val);\n            });\n\n            /*\n            window.requestAnimationFrame( ()=>{ this.tmpfunc() } );\n            */\n\n            return this;\n        }\n    }, {\n        key: 'calcDataPosition',\n        value: function calcDataPosition() {\n            var _this4 = this;\n\n            if (!this.data) return;\n\n            var total = 0,\n                tmp = 0;\n\n            this.data.data.map(function (val) {\n                total += val.value;\n            });\n            this.total = total;\n\n            this.data.data.map(function (val) {\n                val._percent = utils.parseFinance(val.value / total);\n                tmp = utils.parseFinance(tmp + val._percent);\n                val._totalPercent = tmp;\n\n                val.percent = parseInt(val._percent * 100);\n\n                val.endAngle = _this4.totalAngle * val._totalPercent;\n            });\n\n            //修正浮点数精确度\n            if (this.data.data.length) {\n                var item = this.data.data[this.data.data.length - 1];\n                tmp = tmp - item._percent;\n\n                item._percent = 1 - tmp;\n                item.percent = parseInt(item._percent * 100);\n                item._totalPercent = 1;\n                item.endAngle = this.totalAngle;\n            }\n\n            this.lineRange = {\n                \"1\": [],\n                \"2\": [],\n                \"4\": [],\n                \"8\": []\n                //计算开始角度, 计算指示线的2端\n            };this.data.data.map(function (val, key) {\n                if (!key) {\n                    val.startAngle = 0;\n                } else {\n                    val.startAngle = _this4.data.data[key - 1].endAngle;\n                }\n\n                val.midAngle = val.startAngle + (val.endAngle - val.startAngle) / 2;\n\n                val.lineStart = geometry.distanceAngleToPoint(_this4.outRadius, val.midAngle);\n                val.lineEnd = geometry.distanceAngleToPoint(_this4.outRadius + _this4.lineLength, val.midAngle);\n\n                val.textPoint = geometry.distanceAngleToPoint(_this4.outRadius + _this4.lineLength, val.midAngle);\n\n                val.pointDirection = new _pointat2.default(_this4.fixWidth(), _this4.fixHeight(), geometry.pointPlus(val.textPoint, _this4.cpoint));\n                var lineAngle = val.pointDirection.autoAngle();\n                val.lineExpend = _jsonUtilsx2.default.clone(val.lineEnd);\n\n                switch (lineAngle) {\n                    case 1:\n                    case 8:\n                        {\n                            //val.lineEnd.x = this.lineLeft;\n                            val.lineEnd.x = -(_this4.outRadius + _this4.lineSpace);\n                            val.lineExpend.x = val.lineEnd.x - _this4.lineWidth;\n                            break;\n                        }\n                    default:\n                        {\n                            val.lineEnd.x = _this4.outRadius + _this4.lineSpace;\n                            val.lineExpend.x = val.lineEnd.x + _this4.lineWidth;\n                            break;\n                        }\n                }\n\n                _this4.lineRange[lineAngle].push(val);\n            });\n\n            this.loopSort.map(function (key) {\n                var item = _this4.lineRange[key];\n                if (!(item && item.length && item.length > 1)) return;\n                var needFix = void 0;\n                for (var i = 1; i < item.length; i++) {\n                    var pre = item[i - 1],\n                        cur = item[i];\n                    //console.log( pre.lineEnd.y, cur.lineEnd.y );\n                    if (Math.abs(cur.lineEnd.y - pre.lineEnd.y) < _this4.lineHeight) {\n                        /*\n                        cur.lineEnd.y = pre.lineEnd.y + this.lineHeight;\n                        cur.lineExpend.y = cur.lineEnd.y;\n                        */\n                        needFix = 1;\n                        break;\n                    }\n                }\n                switch (key) {\n                    case 1:\n                        {\n                            var tmpY = item[0].lineEnd.y;\n                            for (var _i4 = 1; _i4 < item.length; _i4++) {\n                                var _pre = item[_i4 - 1],\n                                    _cur = item[_i4],\n                                    zero = item[0];\n                                tmpY -= _this4.lineHeight;\n                                _cur.lineEnd.y = tmpY;\n\n                                if (_cur.lineEnd.y < _cur.lineStart.y) {\n                                    //tmpY = cur.lineStart.y + this.lineHeight;\n                                    //cur.lineEnd.y = tmpY;\n                                }\n                                _cur.lineExpend.y = tmpY;\n                            }\n                            break;\n                        }\n                    case 2:\n                        {\n                            var _tmpY = item[0].lineEnd.y;\n                            for (var _i5 = 1; _i5 < item.length; _i5++) {\n                                var _pre2 = item[_i5 - 1],\n                                    _cur2 = item[_i5],\n                                    _zero = item[0];\n                                _tmpY += _this4.lineHeight;\n                                _cur2.lineEnd.y = _tmpY;\n\n                                if (_cur2.lineEnd.y < _cur2.lineStart.y) {\n                                    //tmpY = cur.lineStart.y + this.lineHeight;\n                                    //cur.lineEnd.y = tmpY;\n                                }\n                                _cur2.lineExpend.y = _tmpY;\n                            }\n\n                            break;\n                        }\n                    case 4:\n                        {\n                            var _tmpY2 = item[0].lineEnd.y;\n                            for (var _i6 = 1; _i6 < item.length; _i6++) {\n                                var _pre3 = item[_i6 - 1],\n                                    _cur3 = item[_i6],\n                                    _zero2 = item[0];\n                                _tmpY2 += _this4.lineHeight;\n                                _cur3.lineEnd.y = _tmpY2;\n\n                                if (_cur3.lineEnd.y < _cur3.lineStart.y) {\n                                    _tmpY2 = _cur3.lineStart.y + _this4.lineHeight;\n                                    _cur3.lineEnd.y = _tmpY2;\n                                }\n                                _cur3.lineExpend.y = _tmpY2;\n                            }\n                            break;\n                        }\n                    case 8:\n                        {\n                            var _tmpY3 = item[item.length - 1].lineEnd.y;\n                            for (var _i7 = item.length - 2; _i7 > 0; _i7--) {\n                                var _pre4 = item[_i7 + 1],\n                                    _cur4 = item[_i7];\n                                _tmpY3 += _this4.lineHeight;\n                                _cur4.lineEnd.y = _tmpY3;\n\n                                if (_cur4.lineEnd.y < _cur4.lineStart.y) {\n                                    _cur4.lineEnd.y = _cur4.lineStart.y + _this4.lineHeight;\n                                }\n                                _cur4.lineExpend.y = _cur4.lineEnd.y;\n                            }\n\n                            break;\n                        }\n                }\n            });\n        }\n    }, {\n        key: 'animationLine',\n        value: function animationLine() {\n            var _this5 = this;\n\n            if (this.lineLengthCount >= this.lineLength) {\n                return;\n            }\n            this.lineLengthCount = this.lineLength;\n\n            this.lineLengthCount += this.lineLengthStep;\n\n            if (this.lineLengthCount >= this.lineLength) {\n                this.lineLengthCount = this.lineLength;\n            }\n\n            for (var i = 0; i < this.path.length; i++) {\n                var path = this.path[i];\n                var layer = this.layer[i];\n\n                //console.log( path, path.itemData.pointDirection.auto(), path.itemData.pointDirection.autoAngle()  );\n\n                //let lineEnd = geometry.distanceAngleToPoint( this.outRadius + this.lineLengthCount, path.itemData.midAngle );\n                var lineEnd = path.itemData.lineEnd;\n                var lineExpend = path.itemData.lineExpend;\n\n                var line = this.line[i];\n                line.points([path.itemData.lineStart.x, path.itemData.lineStart.y, lineEnd.x, lineEnd.y, lineExpend.x, lineExpend.y]);\n\n                if (this.lineLengthCount >= this.lineLength) {\n\n                    /*\n                    */\n                    this.addText(path, layer);\n                    this.addIcon(path, layer);\n                } else {\n                    window.requestAnimationFrame(function () {\n                        _this5.animationLine();\n                    });\n                }\n\n                this.stage.add(layer);\n            }\n        }\n    }, {\n        key: 'addIcon',\n        value: function addIcon(path, layer) {\n            var icon = new _iconcircle2.default(this.box, this.fixWidth(), this.fixHeight());\n            icon.setOptions({\n                stage: this.stage,\n                layer: layer,\n                cx: this.fixCx(),\n                cy: this.fixCy()\n            });\n            icon.update(path.itemData.lineExpend);\n        }\n    }, {\n        key: 'addText',\n        value: function addText(path, layer) {\n            var text = new _konva2.default.Text({\n                x: 0,\n                y: 0,\n                text: path.itemData.percent + '%',\n                fill: '#a3a7f3',\n                fontFamily: 'MicrosoftYaHei',\n                fontSize: 16,\n                fontStyle: 'italic'\n            });\n\n            var textPoint = path.itemData.textPoint,\n                angleDirect = path.itemData.pointDirection.autoAngle();\n\n            textPoint = _jsonUtilsx2.default.clone(path.itemData.lineEnd);\n            textPoint.y -= text.textHeight + 2;\n\n            switch (angleDirect) {\n                case 1:\n                    {\n                        textPoint.x -= text.textWidth;\n                        break;\n                    }\n                case 2:\n                    {\n                        break;\n                    }\n                case 4:\n                    {\n                        break;\n                    }\n                case 8:\n                    {\n                        textPoint.x -= text.textWidth;\n                        break;\n                    }\n            }\n\n            var textX = this.fixCx() + textPoint.x,\n                textY = this.fixCy() + textPoint.y,\n                direct = path.itemData.pointDirection.auto();\n\n            text.x(textX);\n            text.y(textY);\n            layer.add(text);\n        }\n    }, {\n        key: 'calcLayoutPosition',\n        value: function calcLayoutPosition() {\n            //console.log( 'calcLayoutPosition', Date.now() );\n\n            this.outRadius = Math.ceil(this.outPercent * this.min / 2);\n            this.inRadius = Math.ceil(this.inPercent * this.min / 2);\n\n            this.lineLength = (Math.min(this.fixWidth(), this.fixHeight()) - this.outRadius * 2) / 2 - this.lineOffset;\n            this.lineLengthCount = 1;\n            this.lineLengthStep = .5;\n\n            this.lineLeft = this.fixCx() - this.outRadius - this.lineSpace;\n            this.lineRight = this.fixCx() + this.outRadius + this.lineSpace;\n\n            return this;\n        }\n    }]);\n\n    return Dount;\n}(_vischartbase2.default);\n\nexports.default = Dount;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _vischartbase = require('../common/vischartbase.js');\n\nvar _vischartbase2 = _interopRequireDefault(_vischartbase);\n\nvar _geometry = require('../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _utils = require('../common/utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar IconCircle = function (_VisChartBase) {\n    _inherits(IconCircle, _VisChartBase);\n\n    function IconCircle(box, width, height) {\n        _classCallCheck(this, IconCircle);\n\n        var _this = _possibleConstructorReturn(this, (IconCircle.__proto__ || Object.getPrototypeOf(IconCircle)).call(this, box, width, height));\n\n        _this.name = 'IconRound ' + Date.now();\n\n        _this.outRadius = 6;\n        _this.inRadius = 2.5;\n\n        _this.color = '#ffffff';\n\n        _this.max = 1.1;\n        _this.min = 0.8;\n\n        _this.step = .006;\n        _this.cur = 1;\n\n        _this.isplus = 1;\n\n        _this.init();\n        return _this;\n    }\n\n    _createClass(IconCircle, [{\n        key: 'init',\n        value: function init() {\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(point) {\n            this.point = point;\n\n            this.group = new _konva2.default.Group({\n                x: this.point.x + this.cx,\n                y: this.point.y + this.cy,\n                width: this.outRadius * 2,\n                height: this.outRadius * 2\n            });\n\n            this.circle = new _konva2.default.Circle({\n                radius: this.inRadius,\n                fill: this.color,\n                stroke: this.color,\n                x: 0,\n                y: 0\n            });\n\n            this.outcircle = new _konva2.default.Circle({\n                radius: this.outRadius,\n                fill: '#ffffff00',\n                stroke: this.color,\n                strokeWidth: 1,\n                x: 0,\n                y: 0\n            });\n\n            this.group.add(this.circle);\n            //this.group.add( this.outcircle );\n\n            this.group.scale({ x: this.cur, y: this.cur });\n\n            this.layer.add(this.group);\n\n            //window.requestAnimationFrame( ()=>{ this.animation() } );\n        }\n    }, {\n        key: 'reset',\n        value: function reset() {}\n    }, {\n        key: 'animation',\n        value: function animation() {\n            var _this2 = this;\n\n            if (this.plus) {\n                this.cur = this.cur + this.step;\n\n                if (this.cur > this.max) {\n                    this.cur = this.max;\n                    this.plus = 0;\n                }\n            } else {\n                this.cur = this.cur - this.step;\n                if (this.cur < this.min) {\n                    this.cur = this.min;\n                    this.plus = 1;\n                }\n            }\n\n            this.group.scale({ x: this.cur, y: this.cur });\n\n            this.stage.add(this.layer);\n\n            window.requestAnimationFrame(function () {\n                _this2.animation();\n            });\n        }\n    }, {\n        key: 'initDataLayout',\n        value: function initDataLayout() {}\n    }, {\n        key: 'calcDataPosition',\n        value: function calcDataPosition() {}\n    }, {\n        key: 'animationLine',\n        value: function animationLine() {}\n    }, {\n        key: 'calcLayoutPosition',\n        value: function calcLayoutPosition() {}\n    }]);\n\n    return IconCircle;\n}(_vischartbase2.default);\n\nexports.default = IconCircle;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _vischartbase = require('../common/vischartbase.js');\n\nvar _vischartbase2 = _interopRequireDefault(_vischartbase);\n\nvar _geometry = require('../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _pointat = require('../common/pointat.js');\n\nvar _pointat2 = _interopRequireDefault(_pointat);\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _utils = require('../common/utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nvar _iconround = require('../icon/iconround.js');\n\nvar _iconround2 = _interopRequireDefault(_iconround);\n\nvar _roundstatetext = require('../icon/roundstatetext.js');\n\nvar _roundstatetext2 = _interopRequireDefault(_roundstatetext);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Gauge = function (_VisChartBase) {\n    _inherits(Gauge, _VisChartBase);\n\n    function Gauge(box, width, height) {\n        _classCallCheck(this, Gauge);\n\n        var _this = _possibleConstructorReturn(this, (Gauge.__proto__ || Object.getPrototypeOf(Gauge)).call(this, box, width, height));\n\n        _this.name = 'Gauge' + Date.now();\n\n        _this.curRate = 0;\n        _this.totalNum = 0;\n        _this.totalNumStep = 5;\n\n        _this.animationStep = 40 * 1;\n\n        _this.roundRadiusPercent = .085;\n\n        _this.lineColor = '#596ea7';\n\n        _this.circleLinePercent = .26;\n        _this.circlePercent = .28;\n\n        _this.arcLinePercent = .39 / 2;\n\n        _this.arcOutPercent = .38 / 2;\n        _this.arcInPercent = .305 / 2;\n\n        _this.arcLabelLength = 6;\n        _this.arcTextLength = 20;\n\n        _this.arcAngle = 280;\n        _this.part = 22;\n        _this.arcTotal = 1100;\n\n        _this.textOffset = 0;\n\n        _this.arcOffset = 90 + (360 - _this.arcAngle) / 2;\n        _this.arcOffsetPad = -5;\n        _this.partLabel = _this.part / 2;\n        _this.partAngle = _this.arcAngle / _this.part;\n        _this.partNum = _this.arcTotal / _this.part;\n\n        _this.textOffsetX = -1;\n        _this.textOffsetY = -8;\n        _this.textLineLength = 6;\n\n        _this.textRectWidthPercent = .5;\n        _this.textRectHeightPercent = .11;\n\n        _this.textRoundPercent = .39;\n        _this.textRoundOffsetAngle = 160;\n        _this.textRoundPlusAngle = 110;\n        _this.textRoundMaxAngle = _this.textRoundOffsetAngle + _this.textRoundPlusAngle * 2;\n        _this.roundStatusRaidus = 30;\n        _this.textRoundAngle = [{\n            angle: _this.textRoundOffsetAngle,\n            text: '低',\n            point: {},\n            min: 0,\n            max: 100,\n            radius: _this.roundStatusRaidus,\n            lineColor: _this.lineColor\n        }, {\n            angle: _this.textRoundOffsetAngle + _this.textRoundPlusAngle,\n            text: '中',\n            point: {},\n            min: 101,\n            max: 500,\n            radius: _this.roundStatusRaidus,\n            lineColor: _this.lineColor\n        }, {\n            angle: _this.textRoundOffsetAngle + _this.textRoundPlusAngle * 2,\n            text: '高',\n            point: {},\n            min: 501,\n            max: Math.pow(10, 10),\n            radius: _this.roundStatusRaidus,\n            lineColor: _this.lineColor\n        }];\n\n        _this.init();\n        return _this;\n    }\n\n    _createClass(Gauge, [{\n        key: 'getAttackRateAngle',\n        value: function getAttackRateAngle() {\n            var r = 0;\n\n            r = this.arcOffset + this.arcAngle * this.getAttackRatePercent();\n\n            return r;\n        }\n    }, {\n        key: 'getAttackRatePercent',\n        value: function getAttackRatePercent() {\n            var r = 0,\n                tmp = void 0;\n            if (this.curRate) {\n                tmp = this.curRate;\n                if (tmp > this.arcTotal) {\n                    tmp = this.arcTotal;\n                }\n\n                r = tmp / this.arcTotal;\n            }\n            return r;\n        }\n    }, {\n        key: 'getAttackText',\n        value: function getAttackText() {\n            var _this2 = this;\n\n            var text = '低';\n\n            if (this.curRate) {\n                this.textRoundAngle.map(function (val) {\n                    if (_this2.curRate >= val.min && _this2.curRate <= val.max) {\n                        text = val.text;\n                    }\n                });\n            }\n\n            return text + '\\u9891\\n\\u653B\\u51FB';\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            var _this3 = this;\n\n            this.textRoundRadius = this.width * this.textRoundPercent;\n\n            this.roundRadius = this.width * this.roundRadiusPercent;\n\n            this.arcInRadius = this.width * this.arcInPercent;\n            this.arcOutRadius = this.width * this.arcOutPercent;\n\n            this.arcLineRaidus = Math.ceil(this.arcLinePercent * this.max);\n\n            this.textWidth = this.textRectWidthPercent * this.width;\n            this.textHeight = 38;\n            this.textX = this.cx - this.textWidth / 2;\n            this.textY = this.cy + this.arcLineRaidus + this.arcTextLength / 2 + 2;\n\n            this.textRoundAngle.map(function (val, key) {\n                var point = geometry.distanceAngleToPoint(_this3.textRoundRadius, val.angle);\n                val.point = geometry.pointPlus(point, _this3.cpoint);\n            });\n\n            this.arcPartLineAr = [];\n            this.arcOutlinePartAr = [];\n            this.textAr = [];\n            for (var i = 0; i <= this.part; i++) {\n                var start = void 0,\n                    end = void 0,\n                    angle = void 0;\n                angle = i * this.partAngle + this.arcOffset;\n\n                if (i && i < this.part) {\n                    start = geometry.distanceAngleToPoint(this.arcInRadius, angle);\n                    end = geometry.distanceAngleToPoint(this.arcOutRadius, angle);\n\n                    this.arcPartLineAr.push('M');\n                    this.arcPartLineAr.push([start.x, start.y].join(','));\n                    this.arcPartLineAr.push('L');\n                    this.arcPartLineAr.push([end.x, end.y].join(','));\n                }\n\n                start = geometry.distanceAngleToPoint(this.arcLineRaidus, angle);\n                end = geometry.distanceAngleToPoint(this.arcLineRaidus + this.arcLabelLength, angle);\n\n                this.arcOutlinePartAr.push('M');\n                this.arcOutlinePartAr.push([start.x, start.y].join(','));\n                this.arcOutlinePartAr.push('L');\n                this.arcOutlinePartAr.push([end.x, end.y].join(','));\n\n                if (!(i * this.partNum % 100) || i === 0) {\n                    var angleOffset = 8,\n                        lengthOffset = 0;\n\n                    if (i === 0) {\n                        angleOffset = 1;\n                    }\n\n                    if (i >= 19) {\n                        angleOffset = 14;\n                    }\n                    if (i >= 21) {\n                        angleOffset = 18;\n                    }\n                    var text = {\n                        text: i * this.partNum,\n                        angle: angle - angleOffset,\n                        point: geometry.distanceAngleToPoint(this.arcLineRaidus + this.arcTextLength + lengthOffset, angle - angleOffset)\n                    };\n                    text.textPoint = new _pointat2.default(this.width, this.height, geometry.pointPlus(text.point, this.cpoint));\n\n                    this.textAr.push(text);\n                }\n            }\n        }\n    }, {\n        key: 'initRoundText',\n        value: function initRoundText() {\n            var _this4 = this;\n\n            this.textRoundAngle.map(function (val) {\n\n                val.ins = new _roundstatetext2.default(_this4.box, _this4.width, _this4.height);\n                val.ins.setOptions(Object.assign(val, {\n                    stage: _this4.stage,\n                    layer: _this4.layoutLayer\n                }));\n                val.ins.init();\n                val.ins.update(_this4.curRate);\n            });\n        }\n        /*\n        {\n        \"series\": [\n            {\n                \"type\": \"gauge\",\n                \"data\": [\n                    {\n                        \"value\": 200,\n                        \"total\": 134567,\n                        \"name\": \"完成率\"\n                    }\n                ]\n            }\n        ]\n        }\n        */\n\n    }, {\n        key: 'update',\n        value: function update(data, allData) {\n            var _this5 = this;\n\n            this.stage.removeChildren();\n\n            //console.log( 123, data );\n\n            if (data && data.data && data.data.length) {\n                data.data.map(function (val) {\n                    _this5.curRate = val.value;\n                    _this5.totalNum = val.total;\n                });\n            }\n\n            /*\n            this.curRate = 600;\n            this.totalNum = 234567;\n            */\n\n            this.initDataLayout();\n\n            //console.log( 'gauge update', this.getAttackRateAngle() )\n            this.angle = this.arcOffset + this.arcOffsetPad;\n            this.animationAngle = this.getAttackRateAngle() + this.arcOffsetPad;\n            //console.log( this.angle, this.animationAngle );\n\n            if (this.curRate) {\n                this.rateStep = Math.floor(this.curRate / (this.animationStep * 2));\n                this.animation();\n            }\n            if (this.totalNum) {\n                this.totalNumStep = Math.floor(this.totalNum / this.animationStep);\n                this.totalNumCount = 0;\n                this.animationText();\n            }\n        }\n    }, {\n        key: 'drawText',\n        value: function drawText() {\n\n            var params = {\n                text: 0 + '',\n                x: this.cx,\n                y: this.textY,\n                fontSize: 26,\n                fontFamily: 'HuXiaoBoKuHei',\n                fill: '#ffffff',\n                fontStyle: 'italic'\n            },\n                tmp = _jsonUtilsx2.default.clone(params);\n            tmp.text = this.totalNum;\n\n            this.totalText = new _konva2.default.Text(params);\n            this.totalText.x(this.cx - this.totalText.textWidth / 2);\n            this.totalText.y(this.textY + 5);\n\n            this.tmpTotalText = new _konva2.default.Text(tmp);\n        }\n    }, {\n        key: 'drawTextRect',\n        value: function drawTextRect() {\n\n            var textWidth = this.tmpTotalText.textWidth + 30,\n                textX = 0;\n            if (textWidth < 170) {\n                textWidth = 170;\n            }\n            textX = this.cx - textWidth / 2 + 2;\n\n            this.textRect = new _konva2.default.Rect({\n                fill: '#596ea7',\n                stroke: '#ffffff00',\n                strokeWidth: 0,\n                opacity: .3,\n                width: textWidth,\n                height: this.textHeight,\n                x: textX,\n                y: this.textY\n            });\n\n            var points = [];\n            points.push('M', [textX, this.textY + this.textLineLength].join(','));\n            points.push('L', [textX, this.textY].join(','));\n            points.push('L', [textX + this.textLineLength, this.textY].join(','));\n\n            points.push('M', [textX + textWidth - this.textLineLength, this.textY].join(','));\n            points.push('L', [textX + textWidth, this.textY].join(','));\n            points.push('L', [textX + textWidth, this.textY + this.textLineLength].join(','));\n\n            points.push('M', [textX + textWidth, this.textY + this.textHeight - this.textLineLength].join(','));\n            points.push('L', [textX + textWidth, this.textY + this.textHeight].join(','));\n            points.push('L', [textX + textWidth - this.textLineLength, this.textY + this.textHeight].join(','));\n\n            points.push('M', [textX + this.textLineLength, this.textY + this.textHeight].join(','));\n            points.push('L', [textX, this.textY + this.textHeight].join(','));\n            points.push('L', [textX, this.textY + this.textHeight - this.textLineLength].join(','));\n\n            this.textLinePath = new _konva2.default.Path({\n                data: points.join(''),\n                stroke: this.lineColor,\n                strokeWidth: 1\n            });\n\n            this.layoutLayer.add(this.textLinePath);\n            this.layoutLayer.add(this.textRect);\n            this.layoutLayer.add(this.totalText);\n        }\n    }, {\n        key: 'drawArcText',\n        value: function drawArcText() {\n            var _this6 = this;\n\n            if (!(this.textAr && this.textAr.length)) return;\n\n            this.textAr.map(function (val) {\n                var text = new _konva2.default.Text({\n                    x: val.point.x + _this6.cx,\n                    y: val.point.y + _this6.cy,\n                    text: val.text + '',\n                    fontSize: 11\n                    //, rotation: val.angle\n                    , fontFamily: 'MicrosoftYaHei',\n                    fill: _this6.lineColor\n                });\n                text.rotation(val.angle + 90);\n\n                _this6.layoutLayer.add(text);\n            });\n        }\n    }, {\n        key: 'drawArcLine',\n        value: function drawArcLine() {\n\n            var points = [];\n            points.push('M');\n            for (var i = this.arcOffset; i <= this.arcOffset + this.arcAngle; i += 0.5) {\n                var tmp = geometry.distanceAngleToPoint(this.arcLineRaidus, i);\n                points.push([tmp.x, tmp.y].join(',') + ',');\n                if (i == 90) {\n                    points.push('L');\n                }\n            }\n\n            this.arcLine = new _konva2.default.Path({\n                data: points.join(''),\n                x: this.cx,\n                y: this.cy,\n                stroke: this.lineColor,\n                strokeWidth: 1,\n                fill: '#ffffff00'\n            });\n\n            this.arcPartLine = new _konva2.default.Path({\n                data: this.arcPartLineAr.join(''),\n                x: this.cx,\n                y: this.cy,\n                stroke: '#00000088',\n                strokeWidth: 1,\n                fill: '#ffffff00'\n            });\n\n            this.arcOutlinePart = new _konva2.default.Path({\n                data: this.arcOutlinePartAr.join(''),\n                x: this.cx,\n                y: this.cy,\n                stroke: this.lineColor,\n                strokeWidth: 1,\n                fill: '#ffffff00'\n            });\n\n            this.layoutLayer.add(this.arcLine);\n            this.layoutLayer.add(this.arcPartLine);\n            this.layoutLayer.add(this.arcOutlinePart);\n        }\n    }, {\n        key: 'drawArc',\n        value: function drawArc() {\n\n            var params = {\n                x: this.cx,\n                y: this.cy,\n                innerRadius: this.arcInRadius,\n                outerRadius: this.arcOutRadius,\n                angle: this.arcAngle\n                //, fill: 'red'\n                , stroke: '#ffffff00',\n                strokeWidth: 0,\n                rotation: this.arcOffset,\n                fillLinearGradientStartPoint: { x: -50, y: -50 },\n                fillLinearGradientEndPoint: { x: 50, y: 50 },\n                fillLinearGradientColorStops: [0, '#ff9000', .5, '#64b185', 1, '#5a78ca']\n            };\n            this.arc = new _konva2.default.Arc(params);\n\n            this.layoutLayer.add(this.arc);\n        }\n    }, {\n        key: 'initDataLayout',\n        value: function initDataLayout() {\n            this.layer = new _konva2.default.Layer();\n            this.layoutLayer = new _konva2.default.Layer();\n\n            this.roundLine = new _konva2.default.Circle({\n                x: this.cx,\n                y: this.cy,\n                radius: this.roundRadius,\n                stroke: this.lineColor,\n                strokeWidth: 2.5,\n                fill: 'rgba( 0, 0, 0, .5 )'\n            });\n\n            this.percentText = new _konva2.default.Text({\n                x: this.cx,\n                y: this.cy,\n                text: this.getAttackText(),\n                fontSize: 18,\n                fontFamily: 'HuXiaoBoKuHei',\n                fill: '#ffffff',\n                fontStyle: 'italic'\n            });\n            this.percentText.x(this.cx - this.percentText.textWidth / 2 + this.textOffsetX);\n            this.percentText.y(this.cy - this.percentText.textHeight / 2 + this.textOffsetY);\n\n            /*\n            this.percentSymbolText = new Konva.Text( {\n                x: this.cx\n                , y: this.cy\n                , text: '%'\n                , fontSize: 17\n                , fontFamily: 'Agency FB'\n                , fill: '#c7d6ff'\n                , fontStyle: 'italic'\n            });\n            this.percentSymbolText.x( this.percentText.attrs.x  + this.percentText.textWidth );\n            this.percentSymbolText.y( this.percentText.attrs.y  + this.percentText.textHeight -  this.percentSymbolText.textHeight - 2 );\n            */\n\n            //console.log( this.percentText );\n\n            var wedge = new _konva2.default.Wedge({\n                x: 0,\n                y: -3,\n                radius: 10,\n                angle: 20,\n                fill: '#ff5a00',\n                stroke: '#ff5a00',\n                strokeWidth: 1,\n                rotation: 90\n            });\n\n            var wedge1 = new _konva2.default.Wedge({\n                x: 0,\n                y: -3,\n                radius: 10,\n                angle: 20,\n                fill: '#973500',\n                stroke: '#973500',\n                strokeWidth: 1,\n                rotation: 65\n            });\n\n            var group = new _konva2.default.Group({\n                x: this.cx,\n                y: this.cy\n            });\n\n            group.add(wedge1);\n            group.add(wedge);\n\n            this.angle = this.arcOffset - 2;\n\n            this.group = group;\n\n            this.layer.add(group);\n            this.layer.add(this.roundLine);\n            this.layer.add(this.percentText);\n            //this.layer.add( this.percentSymbolText );\n\n\n            this.drawCircle();\n            this.drawCircleLine();\n            this.drawArc();\n            this.drawArcLine();\n            this.drawArcText();\n            this.drawText();\n            this.drawTextRect();\n\n            this.initRoundText();\n\n            this.stage.add(this.layer);\n            this.stage.add(this.layoutLayer);\n        }\n    }, {\n        key: 'animation',\n        value: function animation() {\n            var _this7 = this;\n\n            if (this.angle > this.animationAngle) return;\n            this.angle += this.rateStep;\n            if (this.angle >= this.animationAngle) {\n                this.angle = this.animationAngle;\n            };\n\n            var point = geometry.distanceAngleToPoint(this.roundRadius + 6, this.angle);\n            this.group.x(this.cx + point.x);\n            this.group.y(this.cy + point.y);\n            this.group.rotation(this.angle + 90);\n            this.group.rotation(this.angle + 90);\n\n            this.stage.add(this.layer);\n\n            window.requestAnimationFrame(function () {\n                _this7.animation();\n            });\n        }\n    }, {\n        key: 'animationText',\n        value: function animationText() {\n            var _this8 = this;\n\n            if (this.totalNumCount >= this.totalNum) return;\n            this.totalNumCount += this.totalNumStep;\n            if (this.totalNumCount >= this.totalNum) {\n                this.totalNumCount = this.totalNum;\n            };\n\n            this.totalText.text(this.totalNumCount);\n            this.totalText.x(this.cx - this.totalText.textWidth / 2);\n            this.stage.add(this.layoutLayer);\n\n            window.requestAnimationFrame(function () {\n                _this8.animationText();\n            });\n        }\n    }, {\n        key: 'calcDataPosition',\n        value: function calcDataPosition() {}\n    }, {\n        key: 'animationLine',\n        value: function animationLine() {}\n    }, {\n        key: 'addIcon',\n        value: function addIcon(path, layer) {}\n    }, {\n        key: 'addText',\n        value: function addText(path, layer) {}\n    }, {\n        key: 'calcLayoutPosition',\n        value: function calcLayoutPosition() {}\n    }, {\n        key: 'drawCircle',\n        value: function drawCircle() {\n            this.circleRadius = Math.ceil(this.circlePercent * this.max / 2);\n\n            this.circle = new _konva2.default.Circle({\n                x: this.cx,\n                y: this.cy,\n                radius: this.circleRadius,\n                stroke: this.lineColor,\n                strokeWidth: 1,\n                fill: '#ffffff00'\n            });\n            this.layoutLayer.add(this.circle);\n        }\n    }, {\n        key: 'drawCircleLine',\n        value: function drawCircleLine() {\n            this.circleLineRadius = Math.ceil(this.circleLinePercent * this.max / 2);\n\n            var points = [];\n            points.push('M');\n            for (var i = 90; i <= 180; i++) {\n                var tmp = geometry.distanceAngleToPoint(this.circleLineRadius, i + 90);\n                points.push([tmp.x, tmp.y].join(',') + ',');\n                if (i == 90) {\n                    points.push('L');\n                }\n            }\n            points.push('M');\n            for (var _i = 270; _i <= 360; _i++) {\n                var _tmp = geometry.distanceAngleToPoint(this.circleLineRadius, _i + 90);\n                points.push([_tmp.x, _tmp.y].join(',') + ',');\n                if (_i == 270) {\n                    points.push('L');\n                }\n            }\n\n            this.circleLine = new _konva2.default.Path({\n                data: points.join(''),\n                x: this.cx,\n                y: this.cy,\n                stroke: this.lineColor,\n                strokeWidth: 1.5,\n                fill: '#ffffff00'\n            });\n\n            this.layoutLayer.add(this.circleLine);\n        }\n    }, {\n        key: 'reset',\n        value: function reset() {}\n    }]);\n\n    return Gauge;\n}(_vischartbase2.default);\n\nexports.default = Gauge;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _vischartbase = require('../common/vischartbase.js');\n\nvar _vischartbase2 = _interopRequireDefault(_vischartbase);\n\nvar _geometry = require('../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _utils = require('../common/utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar IconRound = function (_VisChartBase) {\n    _inherits(IconRound, _VisChartBase);\n\n    function IconRound(box, width, height) {\n        _classCallCheck(this, IconRound);\n\n        var _this = _possibleConstructorReturn(this, (IconRound.__proto__ || Object.getPrototypeOf(IconRound)).call(this, box, width, height));\n\n        _this.name = 'IconRound ' + Date.now();\n\n        _this.outRadius = 6;\n        _this.inRadius = 2;\n\n        _this.color = '#ffffff';\n\n        _this.max = 1.1;\n        _this.min = 0.8;\n\n        _this.step = .006;\n        _this.cur = 1;\n\n        _this.isplus = 1;\n\n        _this.init();\n        return _this;\n    }\n\n    _createClass(IconRound, [{\n        key: 'init',\n        value: function init() {\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(point) {\n            this.point = point;\n\n            this.group = new _konva2.default.Group({\n                x: this.point.x + this.cx,\n                y: this.point.y + this.cy,\n                width: this.outRadius * 2,\n                height: this.outRadius * 2\n            });\n\n            this.circle = new _konva2.default.Circle({\n                radius: this.inRadius,\n                fill: this.color,\n                stroke: this.color,\n                x: 0,\n                y: 0\n            });\n\n            this.outcircle = new _konva2.default.Circle({\n                radius: this.outRadius,\n                fill: '#ffffff00',\n                stroke: this.color,\n                strokeWidth: 1,\n                x: 0,\n                y: 0\n            });\n\n            this.group.add(this.circle);\n            this.group.add(this.outcircle);\n\n            this.group.scale({ x: this.cur, y: this.cur });\n\n            this.layer.add(this.group);\n\n            //window.requestAnimationFrame( ()=>{ this.animation() } );\n        }\n    }, {\n        key: 'reset',\n        value: function reset() {}\n    }, {\n        key: 'animation',\n        value: function animation() {\n            var _this2 = this;\n\n            if (this.plus) {\n                this.cur = this.cur + this.step;\n\n                if (this.cur > this.max) {\n                    this.cur = this.max;\n                    this.plus = 0;\n                }\n            } else {\n                this.cur = this.cur - this.step;\n                if (this.cur < this.min) {\n                    this.cur = this.min;\n                    this.plus = 1;\n                }\n            }\n\n            this.group.scale({ x: this.cur, y: this.cur });\n\n            this.stage.add(this.layer);\n\n            window.requestAnimationFrame(function () {\n                _this2.animation();\n            });\n        }\n    }, {\n        key: 'initDataLayout',\n        value: function initDataLayout() {}\n    }, {\n        key: 'calcDataPosition',\n        value: function calcDataPosition() {}\n    }, {\n        key: 'animationLine',\n        value: function animationLine() {}\n    }, {\n        key: 'calcLayoutPosition',\n        value: function calcLayoutPosition() {}\n    }]);\n\n    return IconRound;\n}(_vischartbase2.default);\n\nexports.default = IconRound;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _vischartbase = require('../common/vischartbase.js');\n\nvar _vischartbase2 = _interopRequireDefault(_vischartbase);\n\nvar _geometry = require('../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _utils = require('../common/utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar RoundStateText = function (_VisChartBase) {\n    _inherits(RoundStateText, _VisChartBase);\n\n    function RoundStateText(box, width, height) {\n        _classCallCheck(this, RoundStateText);\n\n        var _this = _possibleConstructorReturn(this, (RoundStateText.__proto__ || Object.getPrototypeOf(RoundStateText)).call(this, width, height));\n\n        _this.name = 'RoundStateText ' + Date.now();\n\n        _this.radius = 30;\n\n        _this.textOffsetX = -2;\n        _this.textOffsetY = -1;\n\n        _this.curColor = '#deaf5c';\n        return _this;\n    }\n\n    _createClass(RoundStateText, [{\n        key: 'init',\n        value: function init() {\n            //console.log( 'RoundStateText init', this );\n            this.circleRaidus = this.radius - 5;\n\n            //this.lineColor = this.curColor;\n\n            this.initDataLayout();\n\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(rate) {\n            this.rate = rate;\n\n            var color = this.lineColor;\n\n            if (rate >= this.min && rate < this.max) {\n                color = this.curColor;\n            }\n\n            this.text.fill(color);\n            this.circle.stroke(color);\n            this.circleLine.stroke(color);\n\n            return this;\n        }\n    }, {\n        key: 'initDataLayout',\n        value: function initDataLayout() {\n            this.drawText();\n            this.drawCircle();\n            this.drawCircleLine();\n        }\n    }, {\n        key: 'drawText',\n        value: function drawText() {\n            this.text = new _konva2.default.Text({\n                x: this.point.x,\n                y: this.point.y,\n                text: this.text,\n                fontSize: 32,\n                fontFamily: 'HuXiaoBoKuHei',\n                fill: this.lineColor,\n                fontStyle: 'italic'\n            });\n\n            this.text.x(this.point.x - this.text.textWidth / 2 + this.textOffsetX);\n            this.text.y(this.point.y - this.text.textHeight / 2 + this.textOffsetY);\n\n            this.layer.add(this.text);\n        }\n    }, {\n        key: 'drawCircle',\n        value: function drawCircle() {\n            this.circle = new _konva2.default.Circle({\n                x: this.point.x,\n                y: this.point.y,\n                radius: this.circleRaidus,\n                stroke: this.lineColor,\n                strokeWidth: 2,\n                fill: '#ffffff00'\n            });\n\n            this.layer.add(this.circle);\n        }\n    }, {\n        key: 'drawCircleLine',\n        value: function drawCircleLine() {\n            this.circleLineRadius = this.radius - 1;\n\n            var points = [];\n            points.push('M');\n            for (var i = 90; i <= 180; i++) {\n                var tmp = geometry.distanceAngleToPoint(this.circleLineRadius, i + 90);\n                points.push([tmp.x, tmp.y].join(',') + ',');\n                if (i == 90) {\n                    points.push('L');\n                }\n            }\n            points.push('M');\n            for (var _i = 270; _i <= 360; _i++) {\n                var _tmp = geometry.distanceAngleToPoint(this.circleLineRadius, _i + 90);\n                points.push([_tmp.x, _tmp.y].join(',') + ',');\n                if (_i == 270) {\n                    points.push('L');\n                }\n            }\n\n            this.circleLine = new _konva2.default.Path({\n                data: points.join(''),\n                x: this.point.x,\n                y: this.point.y,\n                stroke: this.lineColor,\n                strokeWidth: 2,\n                fill: '#ffffff00'\n            });\n\n            this.layer.add(this.circleLine);\n        }\n    }, {\n        key: 'reset',\n        value: function reset() {}\n    }, {\n        key: 'animation',\n        value: function animation() {}\n    }, {\n        key: 'calcDataPosition',\n        value: function calcDataPosition() {}\n    }, {\n        key: 'animationLine',\n        value: function animationLine() {}\n    }, {\n        key: 'calcLayoutPosition',\n        value: function calcLayoutPosition() {}\n    }]);\n\n    return RoundStateText;\n}(_vischartbase2.default);\n\nexports.default = RoundStateText;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar CHART_TYPE = exports.CHART_TYPE = {\n    dount: 'dount',\n    gauge: 'gauge'\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _vischartbase = require('../common/vischartbase.js');\n\nvar _vischartbase2 = _interopRequireDefault(_vischartbase);\n\nvar _geometry = require('../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _utils = require('../common/utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Legend = function (_VisChartBase) {\n    _inherits(Legend, _VisChartBase);\n\n    function Legend(box, width, height) {\n        _classCallCheck(this, Legend);\n\n        var _this = _possibleConstructorReturn(this, (Legend.__proto__ || Object.getPrototypeOf(Legend)).call(this, box, width, height));\n\n        _this.name = 'Legend ' + Date.now();\n\n        _this.text = [];\n        _this.icon = [];\n        _this.group = [];\n\n        return _this;\n    }\n\n    _createClass(Legend, [{\n        key: 'setStage',\n        value: function setStage(stage) {\n            _get(Legend.prototype.__proto__ || Object.getPrototypeOf(Legend.prototype), 'setStage', this).call(this, stage);\n\n            this.layer = new _konva2.default.Layer({});\n\n            stage.add(this.layer);\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            var _this2 = this;\n\n            this.data.data.map(function (item, key) {\n                var x = 0,\n                    y = 0,\n                    count = key + 1,\n                    curRow = Math.floor(key / _this2.column());\n\n                switch (_this2.direction()) {\n                    case 'bottom':\n                        {\n                            y = _this2.height - (_this2.row() - curRow) * (_this2.space() + _this2.rowHeight());\n                            x = _this2.space() + (_this2.space() + _this2.columnWidth()) * (key % _this2.column());\n                            console.log(x, y, key, _this2.direction(), curRow);\n                            break;\n                        }\n                }\n\n                var text = new _konva2.default.Rect({\n                    text: key + '',\n                    x: x,\n                    y: y,\n                    width: _this2.columnWidth,\n                    height: 20,\n                    fill: '#ffffff'\n                });\n\n                _this2.layer.add(text);\n            });\n            this.stage.add(this.layer);\n\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(data) {\n            this.data = data || {};\n            if (!(this.data && this.data.data && this.data.data.length)) return;\n\n            console.log(this.column(), this.row(), this.direction(), this.outerHeight(), this.columnWidth());\n\n            this.init();\n        }\n    }, {\n        key: 'outerHeight',\n        value: function outerHeight() {\n            return this.rowHeight() * this.row() + this.space();\n        }\n    }, {\n        key: 'total',\n        value: function total() {\n            var r = 0;\n\n            return r;\n        }\n    }, {\n        key: 'columnWidth',\n        value: function columnWidth() {\n            return (this.width - (this.column() + 2 + this.column() - 1) * this.space()) / this.column();\n        }\n    }, {\n        key: 'column',\n        value: function column() {\n            return this.data.column || 1;\n        }\n    }, {\n        key: 'space',\n        value: function space() {\n            return this.data.space || 15;\n        }\n    }, {\n        key: 'rowHeight',\n        value: function rowHeight() {\n            return this.data.rowHeight || 24;\n        }\n    }, {\n        key: 'row',\n        value: function row() {\n            return Math.ceil(this.data.data.length / this.column());\n        }\n    }, {\n        key: 'direction',\n        value: function direction() {\n            var r = 'top';\n\n            if (this.data.bottom) {\n                r = 'bottom';\n            } else if (this.data.left) {\n                r = 'left';\n            } else if (this.data.right) {\n                r = 'right';\n            }\n\n            return r;\n        }\n    }]);\n\n    return Legend;\n}(_vischartbase2.default);\n\nexports.default = Legend;","\n\nimport VisChart from 'vischart';\n\nimport fontfaceobserver from 'fontfaceobserver';\n\n\n\nlet font = new fontfaceobserver( 'HuXiaoBoKuHei' );\nfont.load().then(function () {\n\n    let size = 330;\n\n    let data = require( './data/gauge.json' );\n    let dmins = new VisChart( document.querySelector('#twoBox'), size, size );\n        dmins.addImage( './img/rate-out.png', 170, 170, 0, 0 );\n        dmins.update( data ); \n        setTimeout( ()=>{\n            //dmins.update( data ); \n        }, 5000 );\n\n}, function () {\n  console.log('Font is not available');\n});\n\n\n\n"],"sourceRoot":""}
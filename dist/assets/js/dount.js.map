{"version":3,"sources":["webpack:///../vischart/dist/geometry/geometry.js","webpack:///../vischart/dist/common/utils.js","webpack:///../vischart/dist/2d/common/konvabase.js","webpack:///../vischart/dist/common/vischartbase.js","webpack:///./src/assets/js/data/base64img.js","webpack:///../vischart/dist/common/pointat.js","webpack:///../vischart/dist/index.js","webpack:///../vischart/dist/2d/dount/index.js","webpack:///../vischart/dist/2d/icon/iconcircle.js","webpack:///../vischart/dist/2d/gauge/index.js","webpack:///../vischart/dist/2d/icon/roundstatetext.js","webpack:///../vischart/dist/common/constant.js","webpack:///../vischart/dist/2d/common/legend.js","webpack:///./src/assets/js/common.js","webpack:///./src/assets/js/dount.js"],"names":["Object","defineProperty","exports","value","pointRectangleIntersection","p","r","x","x2","y","y2","pointDistance","_p1","_p2","_dx","_dy","Math","sqrt","pointAngle","angle","atan2","PI","distanceAngleToPoint","_distance","_angle","_radian","cos","sin","radians","degree","_radians","intersectRect","r1","r2","width","height","fixEndAngle","startAngle","endAngle","pointPlus","p1","p2","parseFinance","_i","_dot","parseFloat","toFixed","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_konva2","_interopRequireDefault","__webpack_require__","_vischartbase2","obj","__esModule","default","KonvaBase","_VisChartBase","box","instance","TypeError","_classCallCheck","this","self","call","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","subClass","superClass","create","constructor","setPrototypeOf","_inherits","_this2","images","iconLayer","remove","Layer","addDestroy","data","background","map","val","addImage","url","offsetX","offsetY","rotation","isbase64","rotationBg","item","img","Image","onload","icon","image","fixCx","fixCy","add","push","offset","animationBg","stage","src","base64prefix","VisChartBase","name","Date","now","colors","_setSize","destroyList","offsetWidth","offsetHeight","customWidth","customHeight","max","maxSize","min","minSize","cx","cy","cpoint","totalAngle","angleOffset","countAngle","rateWidth","rateHeight","rotationBgCount","rotationBgStep","sizeRate","standSize","allData","loadImage","num","legend","_this","isDestroy","isAnimation","window","requestAnimationFrame","imgUrl","arguments","undefined","rateW","rateH","direction","outerHeight","options","layer","animation","seriesAnimation","setDestroy","destroy","_len","Array","_key","dountBig","dountIn","rateOut","_jsonUtilsx2","geometry","newObj","hasOwnProperty","_interopRequireWildcard","PointAt","point","init","rects","params","clone","fill","rect","Rect","leftTop","rightTop","leftBottom","rightBottom","isLeftTop","isRightTop","isRightBottom","isLeftBottom","DIRE_NAME","topCenter","rightMid","bottomCenter","leftMid","DIRE_NUM","1","2","4","8","3","6","9","12","_get","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","parent","getter","_index2","_index4","constant","_legend2","VisChart","ins","resize","update","tmpredraw","redraw","ignoreLegend","Stage","container","style","jsonInData","realIndex","series","sitem","clearUpdate","emptyblock","setStage","setOptions","onChange","group","initChart","_this3","type","CHART_TYPE","dount","gauge","setLegend","getLegendData","tmp","disabled","_konvabase2","_pointat2","utils","_iconcircle2","Dount","outPercent","inPercent","circleLinePercent","circlePercent","circleLineRotation","circleLineRotationStep","animationStep","angleStep","textHeight","lineOffset","path","line","textOffset","lineColor","lineRange","lineWidth","lineSpace","lineAngle","lineHeight","lineCurveLength","loopSort","clearList","calcLayoutPosition","isDone","lineLengthCount","clearItems","calcDataPosition","initDataLayout","inited","animationCircleLine","pathData","circleLine","layoutLayer","isSeriesAnimation","reset","tmpAngle","itemData","arc","arcLayer","animationLine","circleRadius","ceil","circle","Circle","radius","stroke","strokeWidth","circleLineRadius","points","join","_tmp","Path","drawCircle","drawCircleLine","ii","color","itemStyle","innerRadius","inRadius","outerRadius","outRadius","Arc","Line","_this4","lineLength","lineLengthStep","lineEnd","lineExpend","lineStart","addText","addIcon","lineicon","fixWidth","fixHeight","text","Text","percent","fontFamily","fontSize","fontStyle","textPoint","angleDirect","pointDirection","autoAngle","textWidth","textX","textY","auto","lineLeft","lineRight","_this5","total","_percent","_totalPercent","parseInt","midAngle","tmpPoint","_tmpAngle","_tmpPoint","pre","cur","abs","tmpY","_i2","_pre","_cur","_tmpY","_i3","_pre2","_cur2","_tmpY2","_i4","_pre3","_cur3","_tmpY3","_i5","_pre4","_cur4","IconCircle","step","isplus","opacity","Group","outcircle","scale","plus","_roundstatetext2","Gauge","totalPostfix","offsetCy","curRate","totalNum","totalNumStep","roundRadiusPercent","arcLinePercent","arcOutPercent","arcInPercent","arcLabelLength","arcTextLength","arcAngle","part","arcTotal","arcOffset","arcOffsetPad","partLabel","partAngle","partNum","textOffsetX","textOffsetY","textLineLength","textRectWidthPercent","textRectHeightPercent","textRoundPercent","textRoundOffsetAngle","textRoundPlusAngle","textRoundMaxAngle","roundStatusRaidus","textRoundAngle","pow","getAttackRatePercent","textRoundRadius","roundRadius","arcInRadius","arcOutRadius","arcLineRaidus","arcPartLineAr","arcOutlinePartAr","textAr","start","end","assign","removeChildren","animationAngle","getAttackRateAngle","updateWedge","rateStep","floor","totalNumCount","animationText","_this6","_this7","totalText","totalTextPostfix","totalTextGroup","letterSpacing","params1","tmpTotalText","textRect","textLinePath","_this8","arcLine","arcPartLine","arcOutlinePart","fillLinearGradientStartPoint","fillLinearGradientEndPoint","fillLinearGradientColorStops","roundLine","percentText","getAttackText","wedge","Wedge","wedge1","initRoundText","drawArc","drawArcLine","drawArcText","drawText","drawTextRect","_this9","RoundStateText","curColor","circleRaidus","rate","Legend","textColor","iconSpace","curRow","column","space","columnWidth","row","spaceY","rowHeight","label","textStyle","curgroup","itemWidth","itemHeight","bg","ele","on","bottom","left","right","off","COLORS","setColor","skey","base64img","fontfaceobserver_standalone_default","a","load","then","document","querySelector","dmins","dist_default","addEventListener","tmpTimeout","clearTimeout","setTimeout","size","innerHeight","setInterval"],"mappings":"wFAEAA,OAAAC,eAAAC,EAAA,cACAC,MAAA,OAEAD,EAAAE,2BAkBA,SAAAC,EAAAC,GACA,OAAAD,EAAAE,GAAAD,EAAAC,GAAAF,EAAAE,GAAAD,EAAAE,IAAAH,EAAAI,GAAAH,EAAAG,GAAAJ,EAAAI,GAAAH,EAAAI,IAlBAR,EAAAS,cA4BA,SAAAC,EAAAC,GACA,IAAAC,EAAAD,EAAAN,EAAAK,EAAAL,EACAQ,EAAAF,EAAAJ,EAAAG,EAAAH,EAGA,OAFAO,KAAAC,KAAAH,IAAAC,MA9BAb,EAAAgB,WA0CA,SAAAN,EAAAC,GACA,IAAAM,EAAA,IAAAH,KAAAI,MAAAP,EAAAJ,EAAAG,EAAAH,EAAAI,EAAAN,EAAAK,EAAAL,GAAAS,KAAAK,GACAF,EAAA,IACAA,EAAA,IAAAA,GAGA,OAAAA,GA/CAjB,EAAAoB,qBA0DA,SAAAC,EAAAC,GACA,IAAAC,EAAAD,EAAAR,KAAAK,GAAA,IACA,OACAd,EAAAS,KAAAU,IAAAD,GAAAF,EACAd,EAAAO,KAAAW,IAAAF,GAAAF,IA7DArB,EAAA0B,QAuEA,SAAAJ,GACA,OAAAA,EAAAR,KAAAK,GAAA,KAvEAnB,EAAA2B,OAgFA,SAAAC,GACA,OAAAA,EAAAd,KAAAK,GAAA,KAhFAnB,EAAA6B,cAyFA,SAAAC,EAAAC,GACA,QAAAA,EAAA1B,EAAAyB,EAAAzB,EAAAyB,EAAAE,OAAAD,EAAA1B,EAAA0B,EAAAC,MAAAF,EAAAzB,GAAA0B,EAAAxB,EAAAuB,EAAAvB,EAAAuB,EAAAG,QAAAF,EAAAxB,EAAAwB,EAAAE,OAAAH,EAAAvB,IAzFAP,EAAAkC,YA4FA,SAAAC,EAAAC,GACAA,EAAAD,IACAC,GAAA,KAEA,OAAAA,GA/FApC,EAAAqC,UAkGA,SAAAC,EAAAC,GACA,OACAlC,EAAAiC,EAAAjC,EAAAkC,EAAAlC,EACAE,EAAA+B,EAAA/B,EAAAgC,EAAAhC,kCChHAT,OAAAC,eAAAC,EAAA,cACAC,MAAA,OAEAD,EAAAwC,aAYA,SAAAC,EAAAC,GAIA,OAHAD,EAAAE,WAAAF,IAAA,OACA,IAAAC,MAAA,GACAD,MAAAE,WAAAF,EAAAG,QAAAF,KACAD,iCCnBA3C,OAAAC,eAAAC,EAAA,cACAC,MAAA,OAGA,IAAA4C,EAAA,WAAgC,SAAAC,EAAAC,EAAAC,GAA2C,QAAAC,EAAA,EAAgBA,EAAAD,EAAAE,OAAkBD,IAAA,CAAO,IAAAE,EAAAH,EAAAC,GAA2BE,EAAAC,WAAAD,EAAAC,YAAA,MAAwDD,EAAAE,aAAA,KAAgC,UAAAF,MAAAG,SAAA,MAAuDxD,OAAAC,eAAAgD,EAAAI,EAAAI,IAAAJ,IAA+D,gBAAAK,EAAAC,EAAAC,GAA2L,OAAlID,GAAAX,EAAAU,EAAAG,UAAAF,GAAqEC,GAAAZ,EAAAU,EAAAE,GAA6DF,GAAxhB,GAIAI,EAAAC,EAFaC,EAAQ,IAMrBC,EAAAF,EAFoBC,EAAQ,IAI5B,SAAAD,EAAAG,GAAsC,OAAAA,KAAAC,WAAAD,GAAuCE,QAAAF,GAQ7E,IAAAG,EAAA,SAAAC,GAGA,SAAAD,EAAAE,EAAArC,EAAAC,GAGA,OAZA,SAAAqC,EAAAd,GAAiD,KAAAc,aAAAd,GAA0C,UAAAe,UAAA,qCAU3FC,CAAAC,KAAAN,GARA,SAAAO,EAAAC,GAAiD,IAAAD,EAAa,UAAAE,eAAA,6DAAyF,OAAAD,GAAA,iBAAAA,GAAA,mBAAAA,EAAAD,EAAAC,EAUvJE,CAAAJ,MAAAN,EAAAW,WAAAhF,OAAAiF,eAAAZ,IAAAQ,KAAAF,KAAAJ,EAAArC,EAAAC,IA+DA,OAvEA,SAAA+C,EAAAC,GAA0C,sBAAAA,GAAA,OAAAA,EAA+D,UAAAV,UAAA,kEAAAU,GAAuGD,EAAArB,UAAA7D,OAAAoF,OAAAD,KAAAtB,WAAyEwB,aAAelF,MAAA+E,EAAA5B,WAAA,MAAAE,SAAA,KAAAD,aAAA,QAA6E4B,IAAAnF,OAAAsF,eAAAtF,OAAAsF,eAAAJ,EAAAC,GAAAD,EAAAF,UAAAG,GAGrXI,CAAAlB,EAqECJ,EAAAG,SA7DDrB,EAAAsB,IACAZ,IAAA,YACAtD,MAAA,WACA,IAAAqF,EAAAb,KAEA,IAAAA,KAAAc,OAAArC,OAmDA,OAjDAuB,KAAAe,WAAAf,KAAAe,UAAAC,SACAhB,KAAAe,UAAA,IAAA5B,EAAAM,QAAAwB,MACAjB,KAAAkB,WAAAlB,KAAAe,WAEAf,KAAAc,UAEAd,KAAAmB,MAAAnB,KAAAmB,KAAAC,YAAApB,KAAAmB,KAAAC,WAAA3C,QACAuB,KAAAmB,KAAAC,WAAAC,IAAA,SAAAC,GACAT,EAAAU,SAAAD,EAAAE,IAAAF,EAAA/D,MAAA+D,EAAA9D,OAAA8D,EAAAG,SAAA,EAAAH,EAAAI,SAAA,EAAAJ,EAAAK,UAAA,EAAAL,EAAAM,YAIA5B,KAAA6B,cAEA7B,KAAAc,OAAAO,IAAA,SAAAS,GAGA,IAAAC,EAAA,IAAAC,MACAD,EAAAE,OAAA,WACA,IAAA1E,EAAAuE,EAAAvE,OAAAwE,EAAAxE,MACAC,EAAAsE,EAAAtE,QAAAuE,EAAAvE,OAEA0E,EAAA,IAAA/C,EAAAM,QAAAuC,OACAG,MAAAJ,EACAnG,EAAAiF,EAAAuB,QAAA7E,EAAA,EAAAuE,EAAAL,QACA3F,EAAA+E,EAAAwB,QAAA7E,EAAA,EAAAsE,EAAAJ,QACAnE,QACAC,WAEAqD,EAAAK,WAAAgB,GAEArB,EAAAE,UAAAuB,IAAAJ,GAEAJ,EAAAH,WACAd,EAAAgB,WAAAU,KAAAL,GACAA,EAAAtG,EAAAiF,EAAAuB,QAAA7E,EAAA,EAAAuE,EAAAL,QAAAlE,EAAA,GACA2E,EAAApG,EAAA+E,EAAAwB,QAAA7E,EAAA,EAAAsE,EAAAJ,QAAAlE,EAAA,GACA0E,EAAAM,QAAqC5G,EAAA2B,EAAA,EAAAzB,EAAA0B,EAAA,IACrC,IAAAqD,EAAAgB,WAAApD,QAAAoC,EAAA4B,eAEA5B,EAAA6B,MAAAJ,IAAAzB,EAAAE,YAEAe,EAAAF,SACAG,EAAAY,KAAAb,EAAAc,cAAA,0BAAoEd,EAAAN,IAEpEO,EAAAY,IAAAb,EAAAN,MAIAxB,SAIAN,EArEA,GAwEAnE,EAAAkE,QAAAC,gCC9FArE,OAAAC,eAAAC,EAAA,cACAC,MAAA,OAGA,IAAA4C,EAAA,WAAgC,SAAAC,EAAAC,EAAAC,GAA2C,QAAAC,EAAA,EAAgBA,EAAAD,EAAAE,OAAkBD,IAAA,CAAO,IAAAE,EAAAH,EAAAC,GAA2BE,EAAAC,WAAAD,EAAAC,YAAA,MAAwDD,EAAAE,aAAA,KAAgC,UAAAF,MAAAG,SAAA,MAAuDxD,OAAAC,eAAAgD,EAAAI,EAAAI,IAAAJ,IAA+D,gBAAAK,EAAAC,EAAAC,GAA2L,OAAlID,GAAAX,EAAAU,EAAAG,UAAAF,GAAqEC,GAAAZ,EAAAU,EAAAE,GAA6DF,GAAxhB,GAIA,IAAA8D,EAAA,WACA,SAAAA,EAAAjD,EAAArC,EAAAC,IAHA,SAAAqC,EAAAd,GAAiD,KAAAc,aAAAd,GAA0C,UAAAe,UAAA,qCAI3FC,CAAAC,KAAA6C,GAEA7C,KAAAJ,MAEAI,KAAA8C,KAAA,gBAAAC,KAAAC,MAEAhD,KAAAiD,QAAA,6DAEAjD,KAAAkD,SAAA3F,EAAAC,GAyUA,OAtUAY,EAAAyE,IACA/D,IAAA,WACAtD,MAAA,SAAA+B,EAAAC,GAEAwC,KAAAmD,eAEA5F,KAAAyC,KAAAJ,IAAAwD,YACA5F,KAAAwC,KAAAJ,IAAAyD,aAEArD,KAAAzC,SAAAyC,KAAAJ,IAAAwD,YACApD,KAAAxC,UAAAwC,KAAAJ,IAAAyD,aAEArD,KAAAsD,YAAA/F,GAAAyC,KAAAzC,MACAyC,KAAAuD,aAAA/F,GAAAwC,KAAAxC,OAIAwC,KAAAwD,IAAAxD,KAAAyD,QAAApH,KAAAmH,IAAAxD,KAAAzC,MAAAyC,KAAAxC,QACAwC,KAAA0D,IAAA1D,KAAA2D,QAAAtH,KAAAqH,IAAA1D,KAAAzC,MAAAyC,KAAAxC,QAEAwC,KAAA4D,GAAA5D,KAAAzC,MAAA,EACAyC,KAAA6D,GAAA7D,KAAAxC,OAAA,EACAwC,KAAA8D,QAA2BlI,EAAAoE,KAAA4D,GAAA9H,EAAAkE,KAAA6D,IAE3B7D,KAAA+D,WAAA,IACA/D,KAAAgE,YAAA,EACAhE,KAAAiE,WAAA,EAEAjE,KAAAc,UAEAd,KAAAkE,UAAA,IACAlE,KAAAmE,WAAA,IAEAnE,KAAA6B,cAEA7B,KAAAoE,gBAAA,EACApE,KAAAqE,eAAA,EAEArE,KAAAsE,SAAA,EAEAtE,KAAAuE,UAAA,IAEAvE,KAAA0D,IAAA1D,KAAAuE,YACAvE,KAAAsE,SAAAtE,KAAA0D,IAAA1D,KAAAuE,cAIAzF,IAAA,SACAtD,MAAA,SAAA2F,EAAAqD,GAQA,OALAxE,KAAAmB,OACAnB,KAAAwE,UAEAxE,KAAAyE,YAEAzE,QAGAlB,IAAA,UACAtD,MAAA,SAAAkJ,OAEA5F,IAAA,YACAtD,MAAA,SAAAmJ,GACA3E,KAAA2E,YAGA7F,IAAA,YACAtD,MAAA,eAEAsD,IAAA,cACAtD,MAAA,WACA,IAAAoJ,EAAA5E,KAGAA,KAAA6E,WACA7E,KAAA6B,WAAApD,QACAuB,KAAA8E,gBAEA9E,KAAA6B,WAAAR,IAAA,SAAAS,GACA8C,EAAAR,iBAAAQ,EAAAR,gBAAAQ,EAAAP,gBAAA,IACAvC,EAAAH,SAAAiD,EAAAR,mBAGApE,KAAA0C,MAAAJ,IAAAtC,KAAAe,WAEAgE,OAAAC,sBAAA,WACAJ,EAAAnC,oBAIA3D,IAAA,WACAtD,MAAA,SAAAyJ,EAAA1H,EAAAC,GACA,IAAAiE,EAAAyD,UAAAzG,OAAA,QAAA0G,IAAAD,UAAA,GAAAA,UAAA,KACAxD,EAAAwD,UAAAzG,OAAA,QAAA0G,IAAAD,UAAA,GAAAA,UAAA,KACAvD,EAAAuD,UAAAzG,OAAA,QAAA0G,IAAAD,UAAA,GAAAA,UAAA,KACAtD,EAAAsD,UAAAzG,OAAA,QAAA0G,IAAAD,UAAA,IAAAA,UAAA,GAGAE,EAAApF,KAAA0D,IAAA1D,KAAAkE,UACAmB,EAAArF,KAAA0D,IAAA1D,KAAAmE,WAWA,OAVAnE,KAAAc,OAAAyB,MACAf,IAAAyD,EACA1H,QAAA6H,EACA5H,SAAA6H,EACA5D,UACAC,UACAC,WACAC,aAGA5B,QAuBAlB,IAAA,YACAtD,MAAA,WACA,OAAAwE,QAGAlB,IAAA,YACAtD,MAAA,WACA,IAAAG,OAAA,EAMA,OAJAqE,KAAAmB,MAAAnB,KAAAmB,KAAAwD,QAAA3E,KAAAmB,KAAAwD,OAAAxD,MAAAnB,KAAAmB,KAAAwD,OAAAxD,KAAA1C,SACA9C,EAAA,MAGAA,KAGAmD,IAAA,QACAtD,MAAA,WAEA,OADAwE,KAAA4D,MAIA9E,IAAA,QACAtD,MAAA,WACA,IAAAG,EAAAqE,KAAA6D,GAEA,GAAA7D,KAAA2E,OACA,OAAA3E,KAAA2E,OAAAW,aACA,aAEA3J,GAAAqE,KAAAxC,OAAAwC,KAAA2E,OAAAY,cAAA,OAMA,OAAA5J,KAGAmD,IAAA,WACAtD,MAAA,WAEA,OADAwE,KAAAzC,SAIAuB,IAAA,YACAtD,MAAA,WAEA,OADAwE,KAAAxC,UAIAsB,IAAA,OACAtD,MAAA,WACA,OAAAwE,QAGAlB,IAAA,aACAtD,MAAA,SAAAgK,GAEA,QAAA1G,KAAA0G,EACAxF,KAAAlB,GAAA0G,EAAA1G,GAGAkB,KAAAwF,aAGA1G,IAAA,qBACAtD,MAAA,WACA,OAAAwE,QAGAlB,IAAA,mBACAtD,MAAA,WACA,OAAAwE,QAGAlB,IAAA,iBACAtD,MAAA,WACA,OAAAwE,QAGAlB,IAAA,OACAtD,MAAA,WACA,OAAAwE,QAGAlB,IAAA,QACAtD,MAAA,eAEAsD,IAAA,UACAtD,MAAA,WACA,OAAAwE,KAAAmB,YAGArC,IAAA,QACAtD,MAAA,WACA,OAAAwE,KAAAyF,SAGA3G,IAAA,cACAtD,MAAA,WACA,IAAAG,EAAA,KAUA,OARAqE,KAAAwE,SAAA,cAAAxE,KAAAwE,UACA7I,EAAAqE,KAAAwE,QAAAkB,WAGA1F,KAAAmB,MAAA,cAAAnB,KAAAmB,OACAxF,EAAAqE,KAAAmB,KAAAuE,WAGA/J,KAGAmD,IAAA,oBACAtD,MAAA,WACA,IAAAG,EAAA,KAMA,OAJAqE,KAAAmB,MAAA,oBAAAnB,KAAAmB,OACAxF,EAAAqE,KAAAmB,KAAAwE,iBAGAhK,KAGAmD,IAAA,WACAtD,MAAA,SAAAiK,GAEA,OADAzF,KAAAyF,QACAzF,QAGAlB,IAAA,WACAtD,MAAA,SAAAkH,GACA1C,KAAA0C,WAGA5D,IAAA,SACAtD,MAAA,SAAA+B,EAAAC,GACA,IAAA2D,EAAA+D,UAAAzG,OAAA,QAAA0G,IAAAD,UAAA,GAAAA,UAAA,QACAV,EAAAU,UAAAzG,OAAA,QAAA0G,IAAAD,UAAA,GAAAA,UAAA,QAIAlF,KAAAsD,YAAA/F,GAAAyC,KAAAzC,MACAyC,KAAAuD,aAAA/F,GAAAwC,KAAAxC,OAEAwC,KAAAmB,QAAAnB,KAAAmB,KACAnB,KAAAwE,WAAAxE,KAAAwE,QAEAxE,KAAAzC,SAAAyC,KAAAJ,IAAAwD,aAAApD,KAAAzC,MACAyC,KAAAxC,UAAAwC,KAAAJ,IAAAyD,cAAArD,KAAAxC,OAIAwC,KAAAkD,SAAAlD,KAAAzC,MAAAyC,KAAAxC,WAGAsB,IAAA,SACAtD,MAAA,eAEAsD,IAAA,aACAtD,MAAA,WACAwE,KAAA6E,UAAA,KAGA/F,IAAA,UACAtD,MAAA,WACAwE,KAAA4F,aAEA5F,KAAAmD,YAAA9B,IAAA,SAAAS,GACAA,IAEAA,EAAAd,SACAc,EAAA+D,gBAKA/G,IAAA,aACAtD,MAAA,WAGA,IAFA,IAAAqF,EAAAb,KAEA8F,EAAAZ,UAAAzG,OAAAqD,EAAAiE,MAAAD,GAAAE,EAAA,EAA2EA,EAAAF,EAAaE,IACxFlE,EAAAkE,GAAAd,UAAAc,GAGAlE,KAAArD,QAAAqD,EAAAT,IAAA,SAAAC,GACAT,EAAAsC,YAAAZ,KAAAjB,SAKAuB,EAnVA,GAsVAtH,EAAAkE,QAAAoD,gIC/VO,MAAAoD,EAAA,+oWAGAC,EAAA,+sMAEAC,EAAA,6/TCJP9K,OAAAC,eAAAC,EAAA,cACAC,MAAA,OAGA,IAAA4C,EAAA,WAAgC,SAAAC,EAAAC,EAAAC,GAA2C,QAAAC,EAAA,EAAgBA,EAAAD,EAAAE,OAAkBD,IAAA,CAAO,IAAAE,EAAAH,EAAAC,GAA2BE,EAAAC,WAAAD,EAAAC,YAAA,MAAwDD,EAAAE,aAAA,KAAgC,UAAAF,MAAAG,SAAA,MAAuDxD,OAAAC,eAAAgD,EAAAI,EAAAI,IAAAJ,IAA+D,gBAAAK,EAAAC,EAAAC,GAA2L,OAAlID,GAAAX,EAAAU,EAAAG,UAAAF,GAAqEC,GAAAZ,EAAAU,EAAAE,GAA6DF,GAAxhB,GAIAI,EAAAC,EAFaC,EAAQ,IAMrB+G,EAAAhH,EAFkBC,EAAQ,IAM1BgH,EAEA,SAAA9G,GAAuC,GAAAA,KAAAC,WAA6B,OAAAD,EAAqB,IAAA+G,KAAiB,SAAA/G,EAAmB,QAAAT,KAAAS,EAAuBlE,OAAA6D,UAAAqH,eAAArG,KAAAX,EAAAT,KAAAwH,EAAAxH,GAAAS,EAAAT,IAAsG,OAAtBwH,EAAA7G,QAAAF,EAAsB+G,EAF1PE,CAFgBnH,EAAQ,IAMxB,SAAAD,EAAAG,GAAsC,OAAAA,KAAAC,WAAAD,GAAuCE,QAAAF,GAI7E,IAAAkH,EAAA,WACA,SAAAA,EAAAlJ,EAAAC,EAAAkJ,IAHA,SAAA7G,EAAAd,GAAiD,KAAAc,aAAAd,GAA0C,UAAAe,UAAA,qCAI3FC,CAAAC,KAAAyG,GAEAzG,KAAAzC,QACAyC,KAAAxC,SACAwC,KAAA0G,QAEA1G,KAAA4D,GAAA5D,KAAAzC,MAAA,EACAyC,KAAA6D,GAAA7D,KAAAxC,OAAA,EAEAwC,KAAA8D,QAAuBlI,EAAAoE,KAAA4D,GAAA9H,EAAAkE,KAAA6D,IAEvB7D,KAAAyB,QAAA,GACAzB,KAAA0B,QAAA,GAEA1B,KAAAiD,QAAA,6DAEAjD,KAAA2G,OAuHA,OApHAvI,EAAAqI,IACA3H,IAAA,WACAtD,MAAA,SAAAkH,GACA1C,KAAA0C,QAEA1C,KAAAyF,MAAA,IAAAtG,EAAAM,QAAAwB,MAEA,IAAAzC,EAAA,EAEA,QAAAM,KAAAkB,KAAA4G,MAAA,CAEA,IAAA9E,EAAA9B,KAAA4G,MAAA9H,GACA+H,EAAAT,EAAA3G,QAAAqH,MAAAhF,GACA+E,EAAAE,KAAA/G,KAAAiD,OAAAzE,EAAAwB,KAAAiD,OAAAxE,QAEA,IAAAuI,EAAA,IAAA7H,EAAAM,QAAAwH,KAAAJ,GAEA7G,KAAAyF,MAAAnD,IAAA0E,GAEAxI,IAGAwB,KAAA0C,MAAAJ,IAAAtC,KAAAyF,UAGA3G,IAAA,OACAtD,MAAA,WACAwE,KAAAkH,SACAtL,EAAA,EACAE,EAAA,EACAyB,MAAAyC,KAAA4D,GAAA5D,KAAAyB,QACAjE,OAAAwC,KAAA6D,GAAA7D,KAAA0B,SAEA1B,KAAAkH,QAAArL,GAAAmE,KAAAkH,QAAAtL,EAAAoE,KAAAkH,QAAA3J,MACAyC,KAAAkH,QAAAnL,GAAAiE,KAAAkH,QAAApL,EAAAkE,KAAAkH,QAAA1J,OAEAwC,KAAAmH,UACAvL,EAAAoE,KAAA4D,GAAA5D,KAAAyB,QACA3F,EAAA,EACAyB,MAAAyC,KAAA4D,GAAA5D,KAAAyB,QACAjE,OAAAwC,KAAA6D,GAAA7D,KAAA0B,SAEA1B,KAAAmH,SAAAtL,GAAAmE,KAAAmH,SAAAvL,EAAAoE,KAAAmH,SAAA5J,MACAyC,KAAAmH,SAAApL,GAAAiE,KAAAmH,SAAArL,EAAAkE,KAAAmH,SAAA3J,OAEAwC,KAAAoH,YACAxL,EAAA,EACAE,EAAAkE,KAAA6D,GAAA7D,KAAA0B,QACAnE,MAAAyC,KAAA4D,GAAA5D,KAAAyB,QACAjE,OAAAwC,KAAA6D,GAAA7D,KAAA0B,SAEA1B,KAAAoH,WAAAvL,GAAAmE,KAAAoH,WAAAxL,EAAAoE,KAAAoH,WAAA7J,MACAyC,KAAAoH,WAAArL,GAAAiE,KAAAoH,WAAAtL,EAAAkE,KAAAoH,WAAA5J,OAEAwC,KAAAqH,aACAzL,EAAAoE,KAAA4D,GAAA5D,KAAAyB,QACA3F,EAAAkE,KAAA6D,GAAA7D,KAAA0B,QACAnE,MAAAyC,KAAA4D,GAAA5D,KAAAyB,QACAjE,OAAAwC,KAAA6D,GAAA7D,KAAA0B,SAEA1B,KAAAqH,YAAAxL,GAAAmE,KAAAqH,YAAAzL,EAAAoE,KAAAqH,YAAA9J,MACAyC,KAAAqH,YAAAtL,GAAAiE,KAAAqH,YAAAvL,EAAAkE,KAAAqH,YAAA7J,OAEAwC,KAAA4G,OACAM,QAAAlH,KAAAkH,QACAC,SAAAnH,KAAAmH,SACAC,WAAApH,KAAAoH,WACAC,YAAArH,KAAAqH,gBAIAvI,IAAA,YACAtD,MAAA,WACA,OAAA6K,EAAA5K,2BAAAuE,KAAA0G,MAAA1G,KAAAkH,SAAA,OAGApI,IAAA,aACAtD,MAAA,WACA,OAAA6K,EAAA5K,2BAAAuE,KAAA0G,MAAA1G,KAAAmH,UAAA,OAGArI,IAAA,gBACAtD,MAAA,WACA,OAAA6K,EAAA5K,2BAAAuE,KAAA0G,MAAA1G,KAAAqH,aAAA,OAGAvI,IAAA,eACAtD,MAAA,WACA,OAAA6K,EAAA5K,2BAAAuE,KAAA0G,MAAA1G,KAAAoH,YAAA,OAGAtI,IAAA,OACAtD,MAAA,WAEA,OADAwE,KAAAsH,YAAAtH,KAAAuH,aAAAvH,KAAAwH,gBAAAxH,KAAAyH,kBAIA3I,IAAA,YACAtD,MAAA,WACA,IAAAgB,EAAA6J,EAAA9J,WAAAyD,KAAA8D,OAAA9D,KAAA0G,OAaA,OAVAlK,GAAA,GAAAA,GAAA,GACAiK,EAAAiB,UAAAL,YACa7K,EAAA,IAAAA,GAAA,IACbiK,EAAAiB,UAAAN,WACa5K,EAAA,KAAAA,GAAA,IACbiK,EAAAiB,UAAAR,QAEAT,EAAAiB,UAAAP,aAOAV,EAzIA,GA4IAlL,EAAAkE,QAAAgH,EAGAA,EAAAiB,WACAR,QAAA,EACAC,SAAA,EACAE,YAAA,EACAD,WAAA,EAEAO,UAAA,EACAC,SAAA,EACAC,aAAA,GACAC,QAAA,GAGArB,EAAAsB,UACAC,EAAA,UACAC,EAAA,WACAC,EAAA,cACAC,EAAA,aAEAC,EAAA,YACAC,EAAA,WACAC,EAAA,UACAC,GAAA,8CC5LAlN,OAAAC,eAAAC,EAAA,cACAC,MAAA,OAGA,IAAA4C,EAAA,WAAgC,SAAAC,EAAAC,EAAAC,GAA2C,QAAAC,EAAA,EAAgBA,EAAAD,EAAAE,OAAkBD,IAAA,CAAO,IAAAE,EAAAH,EAAAC,GAA2BE,EAAAC,WAAAD,EAAAC,YAAA,MAAwDD,EAAAE,aAAA,KAAgC,UAAAF,MAAAG,SAAA,MAAuDxD,OAAAC,eAAAgD,EAAAI,EAAAI,IAAAJ,IAA+D,gBAAAK,EAAAC,EAAAC,GAA2L,OAAlID,GAAAX,EAAAU,EAAAG,UAAAF,GAAqEC,GAAAZ,EAAAU,EAAAE,GAA6DF,GAAxhB,GAEAyJ,EAAA,SAAAC,EAAAC,EAAAC,EAAAC,GAAqD,OAAAF,MAAAG,SAAA3J,WAAkD,IAAA4J,EAAAzN,OAAA0N,yBAAAL,EAAAC,GAA8D,QAAAxD,IAAA2D,EAAA,CAA0B,IAAAE,EAAA3N,OAAAiF,eAAAoI,GAA4C,cAAAM,OAAuB,EAA2BP,EAAAO,EAAAL,EAAAC,GAA4C,aAAAE,EAA4B,OAAAA,EAAAtN,MAA4B,IAAAyN,EAAAH,EAAAL,IAAuB,YAAAtD,IAAA8D,EAAgDA,EAAA/I,KAAA0I,QAAhD,GAIxZtJ,EAAAF,EAFoBC,EAAQ,IAM5B6J,EAAA9J,EAFaC,EAAQ,KAMrB8J,EAAA/J,EAFcC,EAAQ,KAMtBF,EAAAC,EAFaC,EAAQ,IAMrB+G,EAAAhH,EAFkBC,EAAQ,IAM1B+J,EAMA,SAAA7J,GAAuC,GAAAA,KAAAC,WAA6B,OAAAD,EAAqB,IAAA+G,KAAiB,SAAA/G,EAAmB,QAAAT,KAAAS,EAAuBlE,OAAA6D,UAAAqH,eAAArG,KAAAX,EAAAT,KAAAwH,EAAAxH,GAAAS,EAAAT,IAAsG,OAAtBwH,EAAA7G,QAAAF,EAAsB+G,EAN1PE,CAFgBnH,EAAQ,KAMxBgK,EAAAjK,EAFcC,EAAQ,KAMtB,SAAAD,EAAAG,GAAsC,OAAAA,KAAAC,WAAAD,GAAuCE,QAAAF,GAQ7E,IAAA+J,EAAA,SAAA3J,GAGA,SAAA2J,EAAA1J,EAAArC,EAAAC,IATA,SAAAqC,EAAAd,GAAiD,KAAAc,aAAAd,GAA0C,UAAAe,UAAA,qCAU3FC,CAAAC,KAAAsJ,GAEA,IAAA1E,EAVA,SAAA3E,EAAAC,GAAiD,IAAAD,EAAa,UAAAE,eAAA,6DAAyF,OAAAD,GAAA,iBAAAA,GAAA,mBAAAA,EAAAD,EAAAC,EAUvJE,CAAAJ,MAAAsJ,EAAAjJ,WAAAhF,OAAAiF,eAAAgJ,IAAApJ,KAAAF,KAAAJ,EAAArC,EAAAC,IAMA,OAJAoH,EAAA2E,OACA3E,EAAAD,OAAA,KAEAC,EAAA1B,SAAA3F,EAAAC,GACAoH,EA4LA,OA1MA,SAAArE,EAAAC,GAA0C,sBAAAA,GAAA,OAAAA,EAA+D,UAAAV,UAAA,kEAAAU,GAAuGD,EAAArB,UAAA7D,OAAAoF,OAAAD,KAAAtB,WAAyEwB,aAAelF,MAAA+E,EAAA5B,WAAA,MAAAE,SAAA,KAAAD,aAAA,QAA6E4B,IAAAnF,OAAAsF,eAAAtF,OAAAsF,eAAAJ,EAAAC,GAAAD,EAAAF,UAAAG,GAGrXI,CAAA0I,EAwMChK,EAAAG,SA1LDrB,EAAAkL,IACAxK,IAAA,WACAtD,MAAA,SAAA+B,EAAAC,GAWA,GATAgL,EAAAc,EAAApK,UAAAmB,WAAAhF,OAAAiF,eAAAgJ,EAAApK,WAAA,WAAAc,MAAAE,KAAAF,KAAAzC,EAAAC,GAEAwC,KAAA2G,OAEA3G,KAAA2E,QAAA3E,KAAAmB,MAAAnB,KAAAmB,KAAAwD,SACA3E,KAAA2E,OAAA6E,OAAAxJ,KAAAzC,MAAAyC,KAAAxC,QACAwC,KAAA2E,OAAA8E,OAAAzJ,KAAAmB,KAAAwD,SAGA3E,KAAAmB,KAAA,CACA,IAAAuI,EAAA1J,KAAA2J,OACA3J,KAAAyJ,OAAAzJ,KAAAmB,KAAAnB,KAAA4J,cACA5J,KAAA2J,OAAAD,MAIA5K,IAAA,OACAtD,MAAA,WAGA,GAAAwE,KAAAJ,IAmBA,OAjBAI,KAAA0C,OAOA1C,KAAA0C,MAAAnF,MAAAyC,KAAAzC,OACAyC,KAAA0C,MAAAlF,OAAAwC,KAAAxC,SAPAwC,KAAA0C,MAAA,IAAAvD,EAAAM,QAAAoK,OACAC,UAAA9J,KAAAJ,IACArC,MAAAyC,KAAAzC,MACAC,OAAAwC,KAAAxC,SAUAwC,KAAAsD,cAAAtD,KAAAJ,IAAAmK,MAAAxM,MAAAyC,KAAAsD,YAAA,MACAtD,KAAAuD,eAAAvD,KAAAJ,IAAAmK,MAAAvM,OAAAwC,KAAAuD,aAAA,MAEAvD,QAGAlB,IAAA,SACAtD,MAAA,SAAA2F,EAAAyI,GACA,IAAA/I,EAAAb,KAEA2J,IAAAzE,UAAAzG,OAAA,QAAA0G,IAAAD,UAAA,KAAAA,UAAA,GAMA,GAJAlF,KAAAmB,OACAnB,KAAA4J,eACA5J,KAAA2J,SAEAvD,EAAA3G,QAAAuK,WAAAhK,KAAAmB,KAAA,UAoCA,OAlCAnB,KAAAmB,MAAAnB,KAAAmB,KAAAwD,QAAA3E,KAAAmB,KAAAwD,OAAAxD,MAAAnB,KAAAmB,KAAAwD,OAAAxD,KAAAwD,QAAA3E,KAAAmB,KAAAwD,OAAAxD,KAAAE,IAAA,SAAAS,EAAAhD,GACAgD,EAAAmI,UAAAnL,IAGAkB,KAAAmB,MAAAnB,KAAAmB,KAAA+I,QAAAlK,KAAAmB,KAAA+I,OAAAzL,QAAAuB,KAAAmB,KAAA+I,OAAA7I,IAAA,SAAA8I,GACAA,EAAAhJ,MAAAgJ,EAAAhJ,KAAA1C,QAAA0L,EAAAhJ,KAAAE,IAAA,SAAAS,EAAAhD,GACAgD,EAAAmI,UAAAnL,MAIAkB,KAAAoK,cAQAhE,EAAA3G,QAAAuK,WAAAhK,KAAAmB,KAAA,gBAAAnB,KAAAmB,KAAAwD,OAAAxD,KAAA1C,SACAuB,KAAA2E,QAAAiF,EACA5J,KAAAqK,WAAA,OAEArK,KAAA2E,OAAA,IAAA0E,EAAA5J,QAAAO,KAAAJ,IAAAI,KAAAzC,MAAAyC,KAAAxC,QACAwC,KAAA2E,OAAA2F,SAAAtK,KAAA0C,OACA1C,KAAA2E,OAAA4F,YACAC,SAAA,SAAAC,GAEA5J,EAAA6J,eAGA1K,KAAA2E,OAAA8E,OAAAzJ,KAAAmB,KAAAwD,UAGA3E,KAAA0K,YACA1K,QAGAlB,IAAA,YACAtD,MAAA,WACA,IAAAmP,EAAA3K,KAEAA,KAAAuJ,KAAAvJ,KAAAuJ,IAAA9K,SAAAuB,KAAA2J,OACA3J,KAAAqK,WAAA,OAEArK,KAAAuJ,IAAAlI,IAAA,SAAAS,GACAA,EAAA+D,YAEA7F,KAAAuJ,QAGAvJ,KAAAmB,KAAA+I,OAAA7I,IAAA,SAAAC,EAAAxC,GAEA,IAAAyK,OAAA,EAEA,GAAAoB,EAAApB,KAAAoB,EAAApB,IAAA9K,QAAAkM,EAAApB,IAAAzK,KAAA6L,EAAAhB,QACAJ,EAAAoB,EAAApB,IAAAzK,IACAvB,MAAAoN,EAAApN,MACAgM,EAAA/L,OAAAmN,EAAAnN,WACiB,CACjB,OAAA8D,EAAAsJ,MACA,KAAAxB,EAAAyB,WAAAC,MAEAvB,EAAA,IAAAL,EAAAzJ,QAAAkL,EAAA/K,IAAA+K,EAAApN,MAAAoN,EAAAnN,QACA,MAEA,KAAA4L,EAAAyB,WAAAE,MAEAxB,EAAA,IAAAJ,EAAA1J,QAAAkL,EAAA/K,IAAA+K,EAAApN,MAAAoN,EAAAnN,QAIA+L,IACAoB,EAAAhG,QAAA4E,EAAAyB,UAAAL,EAAAhG,QACA4E,EAAAe,SAAAK,EAAAjI,QAIA6G,IACAoB,EAAAnF,SAAA+D,EAAAgB,WAAAI,EAAAnF,SACA+D,EAAAE,OAAAkB,EAAAM,cAAA3J,GAAA8E,EAAA3G,QAAAqH,MAAA6D,EAAAxJ,OAEAwJ,EAAApB,IAAAzK,KACA6L,EAAApB,IAAAzK,GAAAyK,SAMAzK,IAAA,gBACAtD,MAAA,SAAA2F,GACAA,EAAAiF,EAAA3G,QAAAqH,MAAA3F,GAEA,IAAA+J,KAYA,OAVAlL,KAAA2E,QAAA3E,KAAA2E,OAAA8F,OAAAzK,KAAA2E,OAAA8F,MAAAhM,SAEAuB,KAAA2E,OAAA8F,MAAApJ,IAAA,SAAAS,EAAAhD,GACAgD,EAAAqJ,UACAD,EAAA3I,KAAApB,OAAArC,MAGAqC,OAAA+J,GAGA/J,KAGArC,IAAA,UACAtD,MAAA,WACAgN,EAAAc,EAAApK,UAAAmB,WAAAhF,OAAAiF,eAAAgJ,EAAApK,WAAA,UAAAc,MAAAE,KAAAF,MAGAA,KAAAuJ,IAAAlI,IAAA,SAAAS,GACAA,EAAA+D,YAEA7F,KAAA2E,QAAA3E,KAAA2E,OAAAkB,UAEA7F,KAAA0C,OAAA1C,KAAA0C,MAAAmD,UACA7F,KAAA0C,MAAA,QAGA5D,IAAA,cACAtD,MAAA,WACAwE,KAAA2E,SAAA3E,KAAA4J,cAAA5J,KAAA2E,OAAAkB,cAIAyD,EAxMA,GA2MA/N,EAAAkE,QAAA6J,iCCzPAjO,OAAAC,eAAAC,EAAA,cACAC,MAAA,OAGA,IAAA4C,EAAA,WAAgC,SAAAC,EAAAC,EAAAC,GAA2C,QAAAC,EAAA,EAAgBA,EAAAD,EAAAE,OAAkBD,IAAA,CAAO,IAAAE,EAAAH,EAAAC,GAA2BE,EAAAC,WAAAD,EAAAC,YAAA,MAAwDD,EAAAE,aAAA,KAAgC,UAAAF,MAAAG,SAAA,MAAuDxD,OAAAC,eAAAgD,EAAAI,EAAAI,IAAAJ,IAA+D,gBAAAK,EAAAC,EAAAC,GAA2L,OAAlID,GAAAX,EAAAU,EAAAG,UAAAF,GAAqEC,GAAAZ,EAAAU,EAAAE,GAA6DF,GAAxhB,GAEAyJ,EAAA,SAAAC,EAAAC,EAAAC,EAAAC,GAAqD,OAAAF,MAAAG,SAAA3J,WAAkD,IAAA4J,EAAAzN,OAAA0N,yBAAAL,EAAAC,GAA8D,QAAAxD,IAAA2D,EAAA,CAA0B,IAAAE,EAAA3N,OAAAiF,eAAAoI,GAA4C,cAAAM,OAAuB,EAA2BP,EAAAO,EAAAL,EAAAC,GAA4C,aAAAE,EAA4B,OAAAA,EAAAtN,MAA4B,IAAAyN,EAAAH,EAAAL,IAAuB,YAAAtD,IAAA8D,EAAgDA,EAAA/I,KAAA0I,QAAhD,GAIxZwC,EAAAhM,EAFiBC,EAAQ,IAMzBgH,EAAAG,EAFgBnH,EAAQ,IAMxBgM,EAAAjM,EAFeC,EAAQ,IAMvBF,EAAAC,EAFaC,EAAQ,IAMrB+G,EAAAhH,EAFkBC,EAAQ,IAM1BiM,EAAA9E,EAFanH,EAAQ,IAMrBkM,EAAAnM,EAFkBC,EAAQ,KAI1B,SAAAmH,EAAAjH,GAAuC,GAAAA,KAAAC,WAA6B,OAAAD,EAAqB,IAAA+G,KAAiB,SAAA/G,EAAmB,QAAAT,KAAAS,EAAuBlE,OAAA6D,UAAAqH,eAAArG,KAAAX,EAAAT,KAAAwH,EAAAxH,GAAAS,EAAAT,IAAsG,OAAtBwH,EAAA7G,QAAAF,EAAsB+G,EAE1P,SAAAlH,EAAAG,GAAsC,OAAAA,KAAAC,WAAAD,GAAuCE,QAAAF,GAQ7E,IAAAiM,EAAA,SAAA7L,GAGA,SAAA6L,EAAA5L,EAAArC,EAAAC,IATA,SAAAqC,EAAAd,GAAiD,KAAAc,aAAAd,GAA0C,UAAAe,UAAA,qCAU3FC,CAAAC,KAAAwL,GAEA,IAAA5G,EAVA,SAAA3E,EAAAC,GAAiD,IAAAD,EAAa,UAAAE,eAAA,6DAAyF,OAAAD,GAAA,iBAAAA,GAAA,mBAAAA,EAAAD,EAAAC,EAUvJE,CAAAJ,MAAAwL,EAAAnL,WAAAhF,OAAAiF,eAAAkL,IAAAtL,KAAAF,KAAAJ,EAAArC,EAAAC,IAKA,OAHAoH,EAAA9B,KAAA,SAAAC,KAAAC,MAEA4B,EAAA1B,SAAA3F,EAAAC,GACAoH,EA0nBA,OAvoBA,SAAArE,EAAAC,GAA0C,sBAAAA,GAAA,OAAAA,EAA+D,UAAAV,UAAA,kEAAAU,GAAuGD,EAAArB,UAAA7D,OAAAoF,OAAAD,KAAAtB,WAAyEwB,aAAelF,MAAA+E,EAAA5B,WAAA,MAAAE,SAAA,KAAAD,aAAA,QAA6E4B,IAAAnF,OAAAsF,eAAAtF,OAAAsF,eAAAJ,EAAAC,GAAAD,EAAAF,UAAAG,GAGrXI,CAAA4K,EAqoBCJ,EAAA3L,SAxnBDrB,EAAAoN,IACA1M,IAAA,WACAtD,MAAA,SAAA+B,EAAAC,GACAgL,EAAAgD,EAAAtM,UAAAmB,WAAAhF,OAAAiF,eAAAkL,EAAAtM,WAAA,WAAAc,MAAAE,KAAAF,KAAAzC,EAAAC,GAEAwC,KAAAyL,WAAA,IACAzL,KAAA0L,UAAA,IAEA1L,KAAA2L,kBAAA,IACA3L,KAAA4L,cAAA,IACA5L,KAAA6L,mBAAA,EACA7L,KAAA8L,uBAAA,EAEA9L,KAAA+L,cAAA,EACA/L,KAAAgM,UAAA,EAEAhM,KAAAiM,WAAA,GACAjM,KAAAkM,WAAA,GAEAlM,KAAAmM,QACAnM,KAAAoM,QAEApM,KAAAqM,WAAA,EAEArM,KAAAsM,UAAA,UAEAtM,KAAAuM,WACAvE,KACAC,KACAC,KACAC,MAGAnI,KAAAwM,UAAA,GACAxM,KAAAyM,UAAA,GACAzM,KAAA0M,UAAA,GACA1M,KAAA2M,WAAA,GACA3M,KAAA4M,gBAAA,GAEA5M,KAAA6M,UAAA,SAEA7M,KAAA8M,aAEA9M,KAAA2G,UAGA7H,IAAA,OACAtD,MAAA,WAGA,OAFAwE,KAAA+M,qBAEA/M,QAGAlB,IAAA,SACAtD,MAAA,SAAA2F,EAAAqD,GAUA,GATAgE,EAAAgD,EAAAtM,UAAAmB,WAAAhF,OAAAiF,eAAAkL,EAAAtM,WAAA,SAAAc,MAAAE,KAAAF,KAAAmB,EAAAqD,GAEAxE,KAAAmB,OACAnB,KAAAwE,UAEAxE,KAAAiE,WAAA,EACAjE,KAAAgN,OAAA,EACAhN,KAAAiN,gBAAA,EAEA7G,EAAA3G,QAAAuK,WAAAhK,KAAAmB,KAAA,QAaA,OAXAnB,KAAAkN,aACAlN,KAAAmN,mBACAnN,KAAAoN,iBAIApN,KAAA0F,aACA1F,KAAAqN,QAAArN,KAAAsN,sBAEAtN,KAAAqN,OAAA,EAEArN,QAGAlB,IAAA,QACAtD,MAAA,WACAwE,KAAAmM,KAAA9K,IAAA,SAAAC,GACAA,EAAAiM,iBAIAzO,IAAA,sBACAtD,MAAA,WACA,IAAAqF,EAAAb,KAEAA,KAAA6E,WACA7E,KAAAwN,YAEAxN,KAAA8E,gBAIA9E,KAAA6L,oBAAA7L,KAAA8L,uBAEA9L,KAAAwN,WAAA7L,SAAA3B,KAAA6L,oBACA7L,KAAA0C,MAAAJ,IAAAtC,KAAAyN,aAEA1I,OAAAC,sBAAA,WACAnE,EAAAyM,4BAIAxO,IAAA,YACAtD,MAAA,WACA,IAAAmP,EAAA3K,KAEA,IAAAA,KAAA6E,YACA7E,KAAAgN,OAAA,CAIAhN,KAAAgM,UAEAhM,KAAAiE,YAAAjE,KAAA+L,cAEA/L,KAAA0N,sBACA1N,KAAAiE,WAAAjE,KAAA+D,aAGA/D,KAAAiE,YAAAjE,KAAA+D,aAAA/D,KAAA8E,iBACA9E,KAAAiE,WAAAjE,KAAA+D,WACA/D,KAAAgN,OAAA,GAGAhN,KAAA2N,QAEA,QAAAnP,EAAAwB,KAAAmM,KAAA1N,OAAA,EAA8CD,GAAA,EAAQA,IAAA,CAGtD,IAAAsD,EAAA9B,KAAAmM,KAAA3N,GAIAoP,EAAA5N,KAAAiE,WAEA2J,GAAA9L,EAAA+L,SAAAlQ,WACAiQ,EAAA9L,EAAA+L,SAAAlQ,UAGAiQ,EAAA9L,EAAA+L,SAAAnQ,YAEAoE,EAAAgM,IAAAtR,MAAAoR,GAEA5N,KAAA0C,MAAAJ,IAAAtC,KAAA+N,UAEAhJ,OAAAC,sBAAA,WACA2F,EAAAjF,cAGA1F,KAAAgN,QACAjI,OAAAC,sBAAA,WACA2F,EAAAqD,sBAKAlP,IAAA,aACAtD,MAAA,WACAwE,KAAAiO,aAAA5R,KAAA6R,KAAAlO,KAAA4L,cAAA5L,KAAA0D,IAAA,GAEA1D,KAAAmO,OAAA,IAAAhP,EAAAM,QAAA2O,QACAxS,EAAAoE,KAAAoC,QACAtG,EAAAkE,KAAAqC,QACAgM,OAAArO,KAAAiO,aACAK,OAAAtO,KAAAsM,UACAiC,YAAA,IACAxH,KAAA,cAEA/G,KAAAkB,WAAAlB,KAAAmO,QACAnO,KAAAyN,YAAAnL,IAAAtC,KAAAmO,WAGArP,IAAA,iBACAtD,MAAA,WACAwE,KAAAwO,iBAAAnS,KAAA6R,KAAAlO,KAAA2L,kBAAA3L,KAAA0D,IAAA,GAEA,IAAA+K,KACAA,EAAAlM,KAAA,KACA,QAAA/D,EAAA,GAA4BA,GAAA,IAAUA,IAAA,CACtC,IAAA0M,EAAA7E,EAAA1J,qBAAAqD,KAAAwO,iBAAAhQ,GACAiQ,EAAAlM,MAAA2I,EAAAtP,EAAAsP,EAAApP,GAAA4S,KAAA,UACA,IAAAlQ,GACAiQ,EAAAlM,KAAA,KAGAkM,EAAAlM,KAAA,KACA,QAAAvE,EAAA,IAA8BA,GAAA,IAAWA,IAAA,CACzC,IAAA2Q,EAAAtI,EAAA1J,qBAAAqD,KAAAwO,iBAAAxQ,GACAyQ,EAAAlM,MAAAoM,EAAA/S,EAAA+S,EAAA7S,GAAA4S,KAAA,UACA,KAAA1Q,GACAyQ,EAAAlM,KAAA,KAIAvC,KAAAwN,WAAA,IAAArO,EAAAM,QAAAmP,MACAzN,KAAAsN,EAAAC,KAAA,IACA9S,EAAAoE,KAAAoC,QACAtG,EAAAkE,KAAAqC,QACAiM,OAAAtO,KAAAsM,UACAiC,YAAA,IACAxH,KAAA,cAEA/G,KAAAkB,WAAAlB,KAAAwN,YAEAxN,KAAAyN,YAAAnL,IAAAtC,KAAAwN,eAGA1O,IAAA,iBACAtD,MAAA,WAEAwE,KAAAqN,SACArN,KAAAyN,YAAA,IAAAtO,EAAAM,QAAAwB,MACAjB,KAAAkB,WAAAlB,KAAAyN,aAEAzN,KAAA6O,aACA7O,KAAA8O,iBAEA9O,KAAA0C,MAAAJ,IAAAtC,KAAAyN,aAEAzN,KAAA+N,SAAA,IAAA5O,EAAAM,QAAAwB,MACAjB,KAAAkB,WAAAlB,KAAA+N,WAGA/N,KAAAmM,QACAnM,KAAAoM,QAEA,QAAA2C,EAAA/O,KAAAmB,UAAA1C,OAAA,EAAoDsQ,GAAA,EAASA,IAAA,CAC7D,IAAAzN,EAAAtB,KAAAmB,UAAA4N,GACAjQ,EAAAiQ,EAGAC,GAFAhP,KAAAmB,UAAA1C,OAEAuB,KAAAiD,OAAAnE,EAAAkB,KAAAiD,OAAAxE,SAEA2H,EAAA3G,QAAAuK,WAAA1I,EAAA,qBAEA0N,EAAA1N,EAAA2N,UAAAD,OAMA,IAAAnI,GACAjL,EAAAoE,KAAAoC,QACAtG,EAAAkE,KAAAqC,QACA6M,YAAAlP,KAAAmP,SACAC,YAAApP,KAAAqP,UACA7S,MAAAwD,KAAAiE,WACA8C,KAAAiI,EACAV,OAAAU,EACAT,YAAA,GAGAT,EAAA,IAAA3O,EAAAM,QAAA6P,IAAAzI,GACA7G,KAAA8M,UAAAvK,KAAAuL,GAEA,IAAA1B,EAAA,IAAAjN,EAAAM,QAAA8P,MACA3T,EAAAoE,KAAAoC,QACAtG,EAAAkE,KAAAqC,QACAoM,QAAA,SACAH,OAAA,UACAC,YAAA,IAEAvO,KAAAoM,KAAA7J,KAAA6J,GACApM,KAAA8M,UAAAvK,KAAA6J,GAEA,IAAAlB,GACA4C,MACAP,YACAM,SAAAvM,EACA8K,QAGApM,KAAAmM,KAAA5J,KAAA2I,GAEAlL,KAAA+N,SAAAzL,IAAAwL,GACA9N,KAAA+N,SAAAzL,IAAA8J,GAKA,OAFApM,KAAA0C,MAAAJ,IAAAtC,KAAA+N,UAEA/N,QAGAlB,IAAA,gBACAtD,MAAA,WACA,IAAAgU,EAAAxP,KAEA,KAAAA,KAAAiN,iBAAAjN,KAAAyP,YAAA,CAGAzP,KAAAiN,gBAAAjN,KAAAyP,WAEAzP,KAAAiN,iBAAAjN,KAAA0P,gBAEA1P,KAAAiN,iBAAAjN,KAAAyP,aAAAzP,KAAA8E,iBACA9E,KAAAiN,gBAAAjN,KAAAyP,YAEA,QAAAjR,EAAA,EAA2BA,EAAAwB,KAAAmM,KAAA1N,OAAsBD,IAAA,CACjD,IAAA2N,EAAAnM,KAAAmM,KAAA3N,GACAiH,EAAAzF,KAAA+N,SAEA4B,EAAAxD,EAAA0B,SAAA8B,QACAC,EAAAzD,EAAA0B,SAAA+B,WAEA5P,KAAAoM,KAAA5N,GACAiQ,QAAAtC,EAAA0B,SAAAgC,UAAAjU,EAAAuQ,EAAA0B,SAAAgC,UAAA/T,EAAA6T,EAAA/T,EAAA+T,EAAA7T,EAAA8T,EAAAhU,EAAAgU,EAAA9T,IAEAkE,KAAAiN,iBAAAjN,KAAAyP,YACAzP,KAAA8P,QAAA3D,EAAA1G,GACAzF,KAAA+P,QAAA5D,EAAA1G,IAEAV,OAAAC,sBAAA,WACAwK,EAAAxB,kBAIAhO,KAAA0C,MAAAJ,IAAAmD,QAIA3G,IAAA,UACAtD,MAAA,SAAA2Q,EAAA1G,GACA0G,EAAA6D,WACA7D,EAAA6D,SAAA,IAAAzE,EAAA9L,QAAAO,KAAAJ,IAAAI,KAAAiQ,WAAAjQ,KAAAkQ,aACAlQ,KAAA8M,UAAAvK,KAAA4J,EAAA6D,WAGA,IAAA9N,EAAAiK,EAAA6D,SACA9N,EAAAqI,YACA7H,MAAA1C,KAAA0C,MACA+C,QACA7B,GAAA5D,KAAAoC,QACAyB,GAAA7D,KAAAqC,UAEAH,EAAAuH,OAAA0C,EAAA0B,SAAA+B,eAGA9Q,IAAA,UACAtD,MAAA,SAAA2Q,EAAA1G,GACA,IAAA0G,EAAAgE,KAAA,CACA,IAAAjF,EAAAiB,EAAAgE,KAAA,IAAAhR,EAAAM,QAAA2Q,MACAxU,EAAA,EACAE,EAAA,EACAqU,KAAAhE,EAAA0B,SAAAwC,QAAA,IACAtJ,KAAA,UACAuJ,WAAA,iBACAC,SAAA,GACAC,UAAA,WAEAxQ,KAAA8M,UAAAvK,KAAA2I,GAEA,IAAAiF,EAAAhE,EAAAgE,KAEAM,EAAAtE,EAAA0B,SAAA4C,UACAC,EAAAvE,EAAA0B,SAAA8C,eAAAC,YAKA,QAHAH,EAAArK,EAAA3G,QAAAqH,MAAAqF,EAAA0B,SAAA8B,UACA7T,GAAAqU,EAAAlE,WAAA,EAEAyE,GACA,OAEAD,EAAA7U,GAAAuU,EAAAU,UACA,MAEA,OAIA,OAEA,MAEA,OAEAJ,EAAA7U,GAAAuU,EAAAU,UAKA,IAAAC,EAAA9Q,KAAAoC,QAAAqO,EAAA7U,EACAmV,EAAA/Q,KAAAqC,QAAAoO,EAAA3U,EACAqQ,EAAA0B,SAAA8C,eAAAK,OAEAb,EAAAvU,EAAAkV,GACAX,EAAArU,EAAAiV,GACAtL,EAAAnD,IAAA6N,MAGArR,IAAA,qBACAtD,MAAA,WAaA,OAVAwE,KAAAqP,UAAAhT,KAAA6R,KAAAlO,KAAAyL,WAAAzL,KAAA0D,IAAA,GACA1D,KAAAmP,SAAA9S,KAAA6R,KAAAlO,KAAA0L,UAAA1L,KAAA0D,IAAA,GAEA1D,KAAAyP,YAAApT,KAAAqH,IAAA1D,KAAAiQ,WAAAjQ,KAAAkQ,aAAA,EAAAlQ,KAAAqP,WAAA,EAAArP,KAAAkM,WACAlM,KAAAiN,gBAAA,EACAjN,KAAA0P,eAAA,GAEA1P,KAAAiR,SAAAjR,KAAAoC,QAAApC,KAAAqP,UAAArP,KAAAyM,UACAzM,KAAAkR,UAAAlR,KAAAoC,QAAApC,KAAAqP,UAAArP,KAAAyM,UAEAzM,QAGAlB,IAAA,UACAtD,MAAA,WACAwE,KAAAkN,aACA1E,EAAAgD,EAAAtM,UAAAmB,WAAAhF,OAAAiF,eAAAkL,EAAAtM,WAAA,UAAAc,MAAAE,KAAAF,SAGAlB,IAAA,aACAtD,MAAA,WACAwE,KAAA8M,UAAAzL,IAAA,SAAAS,GACAA,EAAAd,SACAc,EAAA+D,YAEA7F,KAAA8M,gBAGAhO,IAAA,mBACAtD,MAAA,WACA,IAAA2V,EAAAnR,KAEA,GAAAA,KAAAmB,KAAA,CAEA,IAAAiQ,EAAA,EACAlG,EAAA,EAmBA,GAjBAlL,KAAAmB,UAAAE,IAAA,SAAAC,GAEA8P,GAAA9P,EAAA9F,QAEAwE,KAAAoR,QAEApR,KAAAmB,UAAAE,IAAA,SAAAC,GACAA,EAAA+P,SAAA/F,EAAAvN,aAAAuD,EAAA9F,MAAA4V,GACAlG,EAAAI,EAAAvN,aAAAmN,EAAA5J,EAAA+P,UACA/P,EAAAgQ,cAAApG,EAEA5J,EAAA+O,QAAAkB,SAAA,IAAAjQ,EAAA+P,UAEA/P,EAAA3D,SAAAwT,EAAApN,WAAAzC,EAAAgQ,gBAIAtR,KAAAmB,UAAA1C,OAAA,CACA,IAAAqD,EAAA9B,KAAAmB,UAAAnB,KAAAmB,UAAA1C,OAAA,GACAyM,GAAApJ,EAAAuP,SAEAvP,EAAAuP,SAAA,EAAAnG,EACApJ,EAAAuO,QAAAkB,SAAA,IAAAzP,EAAAuP,UACAvP,EAAAwP,cAAA,EACAxP,EAAAnE,SAAAqC,KAAA+D,WAGA/D,KAAAuM,WACAvE,KACAC,KACAC,KACAC,MAEcnI,KAAAmB,UAAAE,IAAA,SAAAC,EAAAxC,GAIdwC,EAAA5D,WAHAoB,EAGAqS,EAAAhQ,UAAArC,EAAA,GAAAnB,SAFA,EAKA2D,EAAAkQ,SAAAlQ,EAAA5D,YAAA4D,EAAA3D,SAAA2D,EAAA5D,YAAA,EAEA4D,EAAAuO,UAAAxJ,EAAA1J,qBAAAwU,EAAA9B,UAAA/N,EAAAkQ,UACAlQ,EAAAqO,QAAAtJ,EAAA1J,qBAAAwU,EAAA9B,UAAA8B,EAAA1B,WAAAnO,EAAAkQ,UAEAlQ,EAAAmP,UAAApK,EAAA1J,qBAAAwU,EAAA9B,UAAA8B,EAAA1B,WAAAnO,EAAAkQ,UAEAlQ,EAAAqP,eAAA,IAAAtF,EAAA5L,QAAA0R,EAAAlB,WAAAkB,EAAAjB,YAAA7J,EAAAzI,UAAA0D,EAAAmP,UAAAU,EAAArN,SACA,IAAA4I,EAAApL,EAAAqP,eAAAC,YAGA,OAFAtP,EAAAsO,WAAAxJ,EAAA3G,QAAAqH,MAAAxF,EAAAqO,SAEAjD,GACA,OACA,OAMA,GAHApL,EAAAqO,QAAA/T,IAAAuV,EAAA9B,UAAA8B,EAAA1E,WAEApG,EAAArK,cAAAsF,EAAAuO,UAAAvO,EAAAqO,SACAwB,EAAAvE,gBAAA,CACA,IAAAgB,EAAAvH,EAAA9J,WAAA+E,EAAAuO,UAAAvO,EAAAqO,SACA8B,EAAApL,EAAA1J,qBAAAwU,EAAAvE,gBAAAgB,GACA6D,EAAApL,EAAAzI,UAAA6T,EAAAnQ,EAAAuO,WAEAvO,EAAAqO,QAAA/T,EAAA6V,EAAA7V,EAGA0F,EAAAsO,WAAAhU,EAAA0F,EAAAqO,QAAA/T,EAAAuV,EAAA3E,UAEA,MAEA,QAIA,GAFAlL,EAAAqO,QAAA/T,EAAAuV,EAAA9B,UAAA8B,EAAA1E,UACApG,EAAArK,cAAAsF,EAAAuO,UAAAvO,EAAAqO,SACAwB,EAAAvE,gBAAA,CACA,IAAA8E,EAAArL,EAAA9J,WAAA+E,EAAAuO,UAAAvO,EAAAqO,SACAgC,EAAAtL,EAAA1J,qBAAAwU,EAAAvE,gBAAA8E,GACAC,EAAAtL,EAAAzI,UAAA+T,EAAArQ,EAAAuO,WAEAvO,EAAAqO,QAAA/T,EAAA+V,EAAA/V,EAGA0F,EAAAsO,WAAAhU,EAAA0F,EAAAqO,QAAA/T,EAAAuV,EAAA3E,UAKA2E,EAAA5E,UAAAG,GAAAnK,KAAAjB,KAGAtB,KAAA6M,SAAAxL,IAAA,SAAAvC,GACA,IAAAgD,EAAAqP,EAAA5E,UAAAzN,GACA,GAAAgD,KAAArD,QAAAqD,EAAArD,OAAA,GAEA,IADA,IACAD,EAAA,EAA+BA,EAAAsD,EAAArD,OAAiBD,IAAA,CAChD,IAAAoT,EAAA9P,EAAAtD,EAAA,GACAqT,EAAA/P,EAAAtD,GACA,GAAAnC,KAAAyV,IAAAD,EAAAlC,QAAA7T,EAAA8V,EAAAjC,QAAA7T,GAAAqV,EAAAxE,WAAA,CACA,EACA,OAGA,OAAA7N,GACA,OAIA,IAFA,IAAAiT,EAAAjQ,EAAA,GAAA6N,QAAA7T,EAEAkW,EAAAlQ,EAAArD,OAAA,EAA2DuT,GAAA,EAAUA,IAAA,CACrE,IAAAC,EAAAnQ,EAAAkQ,EAAA,GACAE,EAAApQ,EAAAkQ,IACA3V,KAAAyV,IAAAG,EAAAtC,QAAA7T,EAAAoW,EAAAvC,QAAA7T,GAAAqV,EAAAxE,YAAAuF,EAAAvC,QAAA7T,GAAAmW,EAAAtC,QAAA7T,KACAiW,EAAAE,EAAAtC,QAAA7T,EAAAqV,EAAAxE,WACAuF,EAAAvC,QAAA7T,EAAAiW,EAQAG,EAAAtC,WAAA9T,EAAAiW,GAGA,MAEA,OAGA,IADA,IAAAI,EAAArQ,EAAA,GAAA6N,QAAA7T,EACAsW,EAAA,EAA6CA,EAAAtQ,EAAArD,OAAmB2T,IAAA,CAChE,IAAAC,EAAAvQ,EAAAsQ,EAAA,GACAE,EAAAxQ,EAAAsQ,GACAtQ,EAAA,GAEAzF,KAAAyV,IAAAO,EAAA1C,QAAA7T,EAAAqV,EAAA9O,SAAA8O,EAAAxE,aACA0F,EAAAzC,WAAA9T,EAAAuW,EAAA1C,QAAA7T,EAAAuW,EAAAzC,WAAA9T,EAAAqV,EAAAxE,aAEAtQ,KAAAyV,IAAAO,EAAA1C,QAAA7T,EAAAwW,EAAA3C,QAAA7T,GAAAqV,EAAAxE,YAAA2F,EAAA3C,QAAA7T,GAAAuW,EAAA1C,QAAA7T,KAEAqW,EAAAE,EAAA1C,QAAA7T,EAAAqV,EAAAxE,WACA2F,EAAA3C,QAAA7T,EAAAqW,EAQAG,EAAA1C,WAAA9T,EAAAqW,GAIA,MAEA,OAGA,IADA,IAAAI,EAAA,EACAC,EAAA1Q,EAAArD,OAAA,EAA2D+T,GAAA,EAAUA,IAAA,CACrE,IAAAC,EAAA3Q,EAAA0Q,EAAA,GACAE,EAAA5Q,EAAA0Q,IACAnW,KAAAyV,IAAAW,EAAA9C,QAAA7T,EAAA4W,EAAA/C,QAAA7T,GAAAqV,EAAAxE,YAAA+F,EAAA/C,QAAA7T,GAAA2W,EAAA9C,QAAA7T,KAEAyW,EAAAE,EAAA9C,QAAA7T,EAAAqV,EAAAxE,WACA+F,EAAA/C,QAAA7T,EAAAyW,EACAG,EAAA9C,WAAA9T,EAAAyW,GAGA,MAEA,OAGA,IADA,IAAAI,EAAA,EACAC,EAAA,EAA6CA,EAAA9Q,EAAArD,OAAmBmU,IAAA,CAChE,IAAAC,EAAA/Q,EAAA8Q,EAAA,GACAE,EAAAhR,EAAA8Q,IACAvW,KAAAyV,IAAAe,EAAAlD,QAAA7T,EAAAgX,EAAAnD,QAAA7T,GAAAqV,EAAAxE,YAAAmG,EAAAnD,QAAA7T,GAAA+W,EAAAlD,QAAA7T,KACA6W,EAAAE,EAAAlD,QAAA7T,EAAAqV,EAAAxE,WACAmG,EAAAnD,QAAA7T,EAAA6W,EAOAG,EAAAlD,WAAA9T,EAAAgX,EAAAnD,QAAA7T,aAWA0P,EAroBA,GAwoBAjQ,EAAAkE,QAAA+L,gCCtrBAnQ,OAAAC,eAAAC,EAAA,cACAC,MAAA,OAGA,IAAA4C,EAAA,WAAgC,SAAAC,EAAAC,EAAAC,GAA2C,QAAAC,EAAA,EAAgBA,EAAAD,EAAAE,OAAkBD,IAAA,CAAO,IAAAE,EAAAH,EAAAC,GAA2BE,EAAAC,WAAAD,EAAAC,YAAA,MAAwDD,EAAAE,aAAA,KAAgC,UAAAF,MAAAG,SAAA,MAAuDxD,OAAAC,eAAAgD,EAAAI,EAAAI,IAAAJ,IAA+D,gBAAAK,EAAAC,EAAAC,GAA2L,OAAlID,GAAAX,EAAAU,EAAAG,UAAAF,GAAqEC,GAAAZ,EAAAU,EAAAE,GAA6DF,GAAxhB,GAIAqM,EAAAhM,EAFiBC,EAAQ,IAUzBF,GAJAqH,EAFgBnH,EAAQ,IAMxBD,EAFaC,EAAQ,KAMrBD,EAFkBC,EAAQ,IAM1BmH,EAFanH,EAAQ,IAIrB,SAAAmH,EAAAjH,GAAuC,GAAAA,KAAAC,WAA6B,OAAAD,EAAqB,IAAA+G,KAAiB,SAAA/G,EAAmB,QAAAT,KAAAS,EAAuBlE,OAAA6D,UAAAqH,eAAArG,KAAAX,EAAAT,KAAAwH,EAAAxH,GAAAS,EAAAT,IAAsG,OAAtBwH,EAAA7G,QAAAF,EAAsB+G,EAE1P,SAAAlH,EAAAG,GAAsC,OAAAA,KAAAC,WAAAD,GAAuCE,QAAAF,GAQ7E,IAAAwT,EAAA,SAAApT,GAGA,SAAAoT,EAAAnT,EAAArC,EAAAC,IATA,SAAAqC,EAAAd,GAAiD,KAAAc,aAAAd,GAA0C,UAAAe,UAAA,qCAU3FC,CAAAC,KAAA+S,GAEA,IAAAnO,EAVA,SAAA3E,EAAAC,GAAiD,IAAAD,EAAa,UAAAE,eAAA,6DAAyF,OAAAD,GAAA,iBAAAA,GAAA,mBAAAA,EAAAD,EAAAC,EAUvJE,CAAAJ,MAAA+S,EAAA1S,WAAAhF,OAAAiF,eAAAyS,IAAA7S,KAAAF,KAAAJ,EAAArC,EAAAC,IAkBA,OAhBAoH,EAAA9B,KAAA,aAAAC,KAAAC,MAEA4B,EAAAyK,UAAA,EACAzK,EAAAuK,SAAA,IAEAvK,EAAAoK,MAAA,UAEApK,EAAApB,IAAA,IACAoB,EAAAlB,IAAA,GAEAkB,EAAAoO,KAAA,KACApO,EAAAiN,IAAA,EAEAjN,EAAAqO,OAAA,EAEArO,EAAA+B,OACA/B,EAwGA,OAlIA,SAAArE,EAAAC,GAA0C,sBAAAA,GAAA,OAAAA,EAA+D,UAAAV,UAAA,kEAAAU,GAAuGD,EAAArB,UAAA7D,OAAAoF,OAAAD,KAAAtB,WAAyEwB,aAAelF,MAAA+E,EAAA5B,WAAA,MAAAE,SAAA,KAAAD,aAAA,QAA6E4B,IAAAnF,OAAAsF,eAAAtF,OAAAsF,eAAAJ,EAAAC,GAAAD,EAAAF,UAAAG,GAGrXI,CAAAmS,EAgIC3H,EAAA3L,SAtGDrB,EAAA2U,IACAjU,IAAA,OACAtD,MAAA,WACA,OAAAwE,QAGAlB,IAAA,UACAtD,MAAA,SAAAkJ,GAGA,OAFA1E,KAAAyK,OAAAzK,KAAAyK,MAAAyI,QAAAxO,GAEA1E,QAGAlB,IAAA,SACAtD,MAAA,SAAAkL,GACA1G,KAAA0G,QAEA1G,KAAAqN,QA4BArN,KAAAyK,MAAA7O,EAAAoE,KAAA0G,MAAA9K,EAAAoE,KAAA4D,IACA5D,KAAAyK,MAAA3O,EAAAkE,KAAA0G,MAAA5K,EAAAkE,KAAA6D,MA5BA7D,KAAAyK,MAAA,IAAAtL,EAAAM,QAAA0T,OACAvX,EAAAoE,KAAA0G,MAAA9K,EAAAoE,KAAA4D,GACA9H,EAAAkE,KAAA0G,MAAA5K,EAAAkE,KAAA6D,GACAtG,MAAA,EAAAyC,KAAAqP,UACA7R,OAAA,EAAAwC,KAAAqP,YAEArP,KAAAkB,WAAAlB,KAAAyK,OAEAzK,KAAAmO,OAAA,IAAAhP,EAAAM,QAAA2O,QACAC,OAAArO,KAAAmP,SACApI,KAAA/G,KAAAgP,MACAV,OAAAtO,KAAAgP,MACApT,EAAA,EACAE,EAAA,IAEAkE,KAAAkB,WAAAlB,KAAAmO,QAEAnO,KAAAoT,UAAA,IAAAjU,EAAAM,QAAA2O,QACAC,OAAArO,KAAAqP,UACAtI,KAAA,YACAuH,OAAAtO,KAAAgP,MACAT,YAAA,EACA3S,EAAA,EACAE,EAAA,IAEAkE,KAAAkB,WAAAlB,KAAAoT,YAMApT,KAAAyK,MAAAnI,IAAAtC,KAAAmO,QACAnO,KAAAyK,MAAA4I,OAA8BzX,EAAAoE,KAAA6R,IAAA/V,EAAAkE,KAAA6R,MAC9B7R,KAAAyF,MAAAnD,IAAAtC,KAAAyK,OAEAzK,KAAAqN,OAAA,KAIAvO,IAAA,QACAtD,MAAA,eAEAsD,IAAA,YACAtD,MAAA,WACA,IAAAqF,EAAAb,KAEAA,KAAAsT,MACAtT,KAAA6R,IAAA7R,KAAA6R,IAAA7R,KAAAgT,KAEAhT,KAAA6R,IAAA7R,KAAAwD,MACAxD,KAAA6R,IAAA7R,KAAAwD,IACAxD,KAAAsT,KAAA,KAGAtT,KAAA6R,IAAA7R,KAAA6R,IAAA7R,KAAAgT,KACAhT,KAAA6R,IAAA7R,KAAA0D,MACA1D,KAAA6R,IAAA7R,KAAA0D,IACA1D,KAAAsT,KAAA,IAIAtT,KAAAyK,MAAA4I,OAA8BzX,EAAAoE,KAAA6R,IAAA/V,EAAAkE,KAAA6R,MAE9B7R,KAAA0C,MAAAJ,IAAAtC,KAAAyF,OAEAV,OAAAC,sBAAA,WACAnE,EAAA6E,iBAIA5G,IAAA,iBACAtD,MAAA,eAEAsD,IAAA,mBACAtD,MAAA,eAEAsD,IAAA,gBACAtD,MAAA,eAEAsD,IAAA,qBACAtD,MAAA,gBAGAuX,EAhIA,GAmIAxX,EAAAkE,QAAAsT,gCCvKA1X,OAAAC,eAAAC,EAAA,cACAC,MAAA,OAGA,IAAA4C,EAAA,WAAgC,SAAAC,EAAAC,EAAAC,GAA2C,QAAAC,EAAA,EAAgBA,EAAAD,EAAAE,OAAkBD,IAAA,CAAO,IAAAE,EAAAH,EAAAC,GAA2BE,EAAAC,WAAAD,EAAAC,YAAA,MAAwDD,EAAAE,aAAA,KAAgC,UAAAF,MAAAG,SAAA,MAAuDxD,OAAAC,eAAAgD,EAAAI,EAAAI,IAAAJ,IAA+D,gBAAAK,EAAAC,EAAAC,GAA2L,OAAlID,GAAAX,EAAAU,EAAAG,UAAAF,GAAqEC,GAAAZ,EAAAU,EAAAE,GAA6DF,GAAxhB,GAEAyJ,EAAA,SAAAC,EAAAC,EAAAC,EAAAC,GAAqD,OAAAF,MAAAG,SAAA3J,WAAkD,IAAA4J,EAAAzN,OAAA0N,yBAAAL,EAAAC,GAA8D,QAAAxD,IAAA2D,EAAA,CAA0B,IAAAE,EAAA3N,OAAAiF,eAAAoI,GAA4C,cAAAM,OAAuB,EAA2BP,EAAAO,EAAAL,EAAAC,GAA4C,aAAAE,EAA4B,OAAAA,EAAAtN,MAA4B,IAAAyN,EAAAH,EAAAL,IAAuB,YAAAtD,IAAA8D,EAAgDA,EAAA/I,KAAA0I,QAAhD,GAIxZwC,EAAAhM,EAFiBC,EAAQ,IAMzBgH,EAAAG,EAFgBnH,EAAQ,IAMxBgM,EAAAjM,EAFeC,EAAQ,IAMvBF,EAAAC,EAFaC,EAAQ,IAMrB+G,EAAAhH,EAFkBC,EAAQ,IAU1BkU,GAJA/M,EAFanH,EAAQ,IAMrBD,EAFsBC,EAAQ,MAI9B,SAAAmH,EAAAjH,GAAuC,GAAAA,KAAAC,WAA6B,OAAAD,EAAqB,IAAA+G,KAAiB,SAAA/G,EAAmB,QAAAT,KAAAS,EAAuBlE,OAAA6D,UAAAqH,eAAArG,KAAAX,EAAAT,KAAAwH,EAAAxH,GAAAS,EAAAT,IAAsG,OAAtBwH,EAAA7G,QAAAF,EAAsB+G,EAE1P,SAAAlH,EAAAG,GAAsC,OAAAA,KAAAC,WAAAD,GAAuCE,QAAAF,GAQ7E,IAAAiU,EAAA,SAAA7T,GAGA,SAAA6T,EAAA5T,EAAArC,EAAAC,IATA,SAAAqC,EAAAd,GAAiD,KAAAc,aAAAd,GAA0C,UAAAe,UAAA,qCAU3FC,CAAAC,KAAAwT,GAEA,IAAA5O,EAVA,SAAA3E,EAAAC,GAAiD,IAAAD,EAAa,UAAAE,eAAA,6DAAyF,OAAAD,GAAA,iBAAAA,GAAA,mBAAAA,EAAAD,EAAAC,EAUvJE,CAAAJ,MAAAwT,EAAAnT,WAAAhF,OAAAiF,eAAAkT,IAAAtT,KAAAF,KAAAJ,EAAArC,EAAAC,IAKA,OAHAoH,EAAA9B,KAAA,QAAAC,KAAAC,MAEA4B,EAAA1B,SAAA3F,EAAAC,GACAoH,EA6vBA,OA1wBA,SAAArE,EAAAC,GAA0C,sBAAAA,GAAA,OAAAA,EAA+D,UAAAV,UAAA,kEAAAU,GAAuGD,EAAArB,UAAA7D,OAAAoF,OAAAD,KAAAtB,WAAyEwB,aAAelF,MAAA+E,EAAA5B,WAAA,MAAAE,SAAA,KAAAD,aAAA,QAA6E4B,IAAAnF,OAAAsF,eAAAtF,OAAAsF,eAAAJ,EAAAC,GAAAD,EAAAF,UAAAG,GAGrXI,CAAA4S,EAwwBCpI,EAAA3L,SA3vBDrB,EAAAoV,IACA1U,IAAA,WACAtD,MAAA,SAAA+B,EAAAC,GACAgL,EAAAgL,EAAAtU,UAAAmB,WAAAhF,OAAAiF,eAAAkT,EAAAtU,WAAA,WAAAc,MAAAE,KAAAF,KAAAzC,EAAAC,GAEAwC,KAAAyT,aAAA,MAEAzT,KAAA0T,SAAA,GAEA1T,KAAA6D,IAAA7D,KAAA0T,SAEA1T,KAAA2T,QAAA,EACA3T,KAAA4T,SAAA,EACA5T,KAAA6T,aAAA,EAEA7T,KAAA+L,cAAA,GAEA/L,KAAA8T,mBAAA,KAEA9T,KAAAsM,UAAA,UAEAtM,KAAA2L,kBAAA,IACA3L,KAAA4L,cAAA,IAEA5L,KAAA6L,mBAAA,EACA7L,KAAA8L,uBAAA,EAEA9L,KAAA+T,eAAA,KAEA/T,KAAAgU,cAAA,IACAhU,KAAAiU,aAAA,MAEAjU,KAAAkU,eAAA,EACAlU,KAAAmU,cAAA,GAEAnU,KAAAoU,SAAA,IACApU,KAAAqU,KAAA,GACArU,KAAAsU,SAAA,KAEAtU,KAAAqM,WAAA,EAEArM,KAAAuU,UAAA,QAAAvU,KAAAoU,UAAA,EACApU,KAAAwU,cAAA,EACAxU,KAAAyU,UAAAzU,KAAAqU,KAAA,EACArU,KAAA0U,UAAA1U,KAAAoU,SAAApU,KAAAqU,KACArU,KAAA2U,QAAA3U,KAAAsU,SAAAtU,KAAAqU,KAEArU,KAAA4U,aAAA,EACA5U,KAAA6U,aAAA,EACA7U,KAAA8U,eAAA,EAEA9U,KAAA+U,qBAAA,GACA/U,KAAAgV,sBAAA,IAEAhV,KAAAiV,iBAAA,IACAjV,KAAAkV,qBAAA,IACAlV,KAAAmV,mBAAA,IACAnV,KAAAoV,kBAAApV,KAAAkV,qBAAA,EAAAlV,KAAAmV,mBACAnV,KAAAqV,kBAAA,GACArV,KAAAsV,iBACA9Y,MAAAwD,KAAAkV,qBACA/E,KAAA,IACAzJ,SACAhD,IAAA,EACAF,IAAA,IACA6K,OAAArO,KAAAqV,kBACA/I,UAAAtM,KAAAsM,YAEA9P,MAAAwD,KAAAkV,qBAAAlV,KAAAmV,mBACAhF,KAAA,IACAzJ,SACAhD,IAAA,IACAF,IAAA,IACA6K,OAAArO,KAAAqV,kBACA/I,UAAAtM,KAAAsM,YAEA9P,MAAAwD,KAAAkV,qBAAA,EAAAlV,KAAAmV,mBACAhF,KAAA,IACAzJ,SACAhD,IAAA,IACAF,IAAAnH,KAAAkZ,IAAA,OACAlH,OAAArO,KAAAqV,kBACA/I,UAAAtM,KAAAsM,YAGAtM,KAAA2G,UAGA7H,IAAA,qBACAtD,MAAA,WAKA,OAFAwE,KAAAuU,UAAAvU,KAAAoU,SAAApU,KAAAwV,0BAKA1W,IAAA,uBACAtD,MAAA,WACA,IAAAG,EAAA,EACAuP,OAAA,EASA,OARAlL,KAAA2T,WACAzI,EAAAlL,KAAA2T,SACA3T,KAAAsU,WACApJ,EAAAlL,KAAAsU,UAGA3Y,EAAAuP,EAAAlL,KAAAsU,UAEA3Y,KAGAmD,IAAA,gBACAtD,MAAA,WACA,IAAAqF,EAAAb,KAEAmQ,EAAA,IAUA,OARAnQ,KAAA2T,SACA3T,KAAAsV,eAAAjU,IAAA,SAAAC,GACAT,EAAA8S,SAAArS,EAAAoC,KAAA7C,EAAA8S,SAAArS,EAAAkC,MACA2M,EAAA7O,EAAA6O,QAKAA,EAAA,WAGArR,IAAA,OACAtD,MAAA,WACA,IAAAmP,EAAA3K,KAEAA,KAAAyV,gBAAAzV,KAAAzC,MAAAyC,KAAAiV,iBAAAjV,KAAAsE,SAEAtE,KAAA0V,YAAA1V,KAAAzC,MAAAyC,KAAA8T,mBAAA9T,KAAAsE,SAEAtE,KAAA2V,YAAA3V,KAAAzC,MAAAyC,KAAAiU,aAAAjU,KAAAsE,SACAtE,KAAA4V,aAAA5V,KAAAzC,MAAAyC,KAAAgU,cAAAhU,KAAAsE,SAEAtE,KAAA6V,cAAAxZ,KAAA6R,KAAAlO,KAAA+T,eAAA/T,KAAAwD,KAAAxD,KAAAsE,SAEAtE,KAAA6Q,UAAA7Q,KAAA+U,qBAAA/U,KAAAzC,MACAyC,KAAAiM,WAAA,GAAAjM,KAAAsE,SACAtE,KAAA8Q,MAAA9Q,KAAA4D,GAAA5D,KAAA6Q,UAAA,EACA7Q,KAAA+Q,MAAA/Q,KAAA6D,GAAA7D,KAAA6V,cAAA7V,KAAAmU,cAAA,IAEAnU,KAAAsV,eAAAjU,IAAA,SAAAC,EAAAxC,GACA,IAAA4H,EAAAL,EAAA1J,qBAAAgO,EAAA8K,gBAAAnU,EAAA9E,OACA8E,EAAAoF,MAAAL,EAAAzI,UAAA8I,EAAAiE,EAAA7G,QACAxC,EAAAoF,MAAA5K,GAAA6O,EAAA+I,WAGA1T,KAAA8V,iBACA9V,KAAA+V,oBACA/V,KAAAgW,UACA,QAAAxX,EAAA,EAA2BA,GAAAwB,KAAAqU,KAAgB7V,IAAA,CAC3C,IAEAhC,EAFAyZ,OAAA,EACAC,OAAA,EAsBA,GApBA1Z,EAAAgC,EAAAwB,KAAA0U,UAAA1U,KAAAuU,UAEA/V,KAAAwB,KAAAqU,OACA4B,EAAA5P,EAAA1J,qBAAAqD,KAAA2V,YAAAnZ,GACA0Z,EAAA7P,EAAA1J,qBAAAqD,KAAA4V,aAAApZ,GAEAwD,KAAA8V,cAAAvT,KAAA,KACAvC,KAAA8V,cAAAvT,MAAA0T,EAAAra,EAAAqa,EAAAna,GAAA4S,KAAA,MACA1O,KAAA8V,cAAAvT,KAAA,KACAvC,KAAA8V,cAAAvT,MAAA2T,EAAAta,EAAAsa,EAAApa,GAAA4S,KAAA,OAGAuH,EAAA5P,EAAA1J,qBAAAqD,KAAA6V,cAAArZ,GACA0Z,EAAA7P,EAAA1J,qBAAAqD,KAAA6V,cAAA7V,KAAAkU,eAAA1X,GAEAwD,KAAA+V,iBAAAxT,KAAA,KACAvC,KAAA+V,iBAAAxT,MAAA0T,EAAAra,EAAAqa,EAAAna,GAAA4S,KAAA,MACA1O,KAAA+V,iBAAAxT,KAAA,KACAvC,KAAA+V,iBAAAxT,MAAA2T,EAAAta,EAAAsa,EAAApa,GAAA4S,KAAA,QAEAlQ,EAAAwB,KAAA2U,QAAA,UAAAnW,EAAA,CACA,IAAAwF,EAAA,EAGA,IAAAxF,IACAwF,EAAA,GAGAxF,GAAA,KACAwF,EAAA,IAEAxF,GAAA,KACAwF,EAAA,IAEA,IAAAmM,GACAA,KAAA3R,EAAAwB,KAAA2U,QACAnY,QAAAwH,EACA0C,MAAAL,EAAA1J,qBAAAqD,KAAA6V,cAAA7V,KAAAmU,cAfA,EAeA3X,EAAAwH,IAEAmM,EAAAM,UAAA,IAAApF,EAAA5L,QAAAO,KAAAzC,MAAAyC,KAAAxC,OAAA6I,EAAAzI,UAAAuS,EAAAzJ,MAAA1G,KAAA8D,SAEA9D,KAAAgW,OAAAzT,KAAA4N,QAKArR,IAAA,gBACAtD,MAAA,WACA,IAAAgU,EAAAxP,KAEAA,KAAAsV,eAAAjU,IAAA,SAAAC,GAEAA,EAAAiI,MACAjI,EAAAiI,IAAA,IAAAgK,EAAA9T,QAAA+P,EAAA5P,IAAA4P,EAAAjS,MAAAiS,EAAAhS,QACA8D,EAAAiI,IAAAgB,WAAAlP,OAAA8a,OAAA7U,GACAoB,MAAA8M,EAAA9M,MACA+C,MAAA+J,EAAA/B,YACAtM,KAAAqO,EAAArO,KACAqD,QAAAgL,EAAAhL,WAEAlD,EAAAiI,IAAA5C,QAEArF,EAAAiI,IAAAE,OAAA+F,EAAAmE,cAqBA7U,IAAA,SACAtD,MAAA,SAAA2F,EAAAqD,GACA,IAAA2M,EAAAnR,KAEAA,KAAA0C,MAAA0T,iBACA5N,EAAAgL,EAAAtU,UAAAmB,WAAAhF,OAAAiF,eAAAkT,EAAAtU,WAAA,SAAAc,MAAAE,KAAAF,KAAAmB,EAAAqD,GAIArD,kBAAA1C,QACA0C,OAAAE,IAAA,SAAAC,GACA6P,EAAAwC,QAAArS,EAAA9F,MACA2V,EAAAyC,SAAAtS,EAAA8P,QASApR,KAAAoN,iBAGApN,KAAAxD,MAAAwD,KAAAuU,UAAAvU,KAAAwU,aACAxU,KAAAqW,eAAArW,KAAAsW,qBAAAtW,KAAAwU,aAGAxU,KAAAuW,cAEAvW,KAAA2T,UACA3T,KAAAwW,SAAAna,KAAAoa,MAAAzW,KAAA2T,SAAA,EAAA3T,KAAA+L,iBACA/L,KAAAqN,QAAArN,KAAA0F,aAEA1F,KAAA4T,WACA5T,KAAA6T,aAAAxX,KAAAoa,MAAAzW,KAAA4T,SAAA5T,KAAA+L,eACA/L,KAAA0W,cAAA,EACA1W,KAAA2W,kBAGA3W,KAAAqN,QAAArN,KAAAsN,sBAEAtN,KAAAqN,OAAA,KAGAvO,IAAA,sBACAtD,MAAA,WACA,IAAAob,EAAA5W,KAGAA,KAAA6E,WACA7E,KAAAwN,YAEAxN,KAAA8E,gBAIA9E,KAAA6L,oBAAA7L,KAAA8L,uBAEA9L,KAAAwN,WAAA7L,SAAA3B,KAAA6L,oBACA7L,KAAA0C,MAAAJ,IAAAtC,KAAAyN,aAEA1I,OAAAC,sBAAA,WACA4R,EAAAtJ,4BAIAxO,IAAA,gBACAtD,MAAA,WACA,IAAAqb,EAAA7W,KAEAA,KAAA6E,WAEA7E,KAAA0W,eAAA1W,KAAA4T,WACA5T,KAAA0W,eAAA1W,KAAA6T,cAEA7T,KAAA0W,eAAA1W,KAAA4T,WAAA5T,KAAA8E,iBACA9E,KAAA0W,cAAA1W,KAAA4T,UAGA5T,KAAA8W,UAAA3G,KAAAnQ,KAAA0W,eACA1W,KAAA+W,iBAAAnb,EAAAoE,KAAA8W,UAAAjG,UAAA,GAEA7Q,KAAAgX,eAAApb,GAAAoE,KAAAzC,MAAAyC,KAAA+W,iBAAAlG,UAAA7Q,KAAA8W,UAAAjG,UAAA,MAEA7Q,KAAAyN,YAAAnL,IAAAtC,KAAAgX,gBAEAjS,OAAAC,sBAAA,WACA6R,EAAAF,sBAIA7X,IAAA,WACAtD,MAAA,WAEAwE,KAAAgX,eAAA,IAAA7X,EAAAM,QAAA0T,MACAnT,KAAAkB,WAAAlB,KAAAgX,gBAEA,IAAAnQ,GACAsJ,KAAA,IAKAI,SAAA,GAAAvQ,KAAAsE,SACAgM,WAAA,YACAvJ,KAAA,UACAyJ,UAAA,SACAyG,cAAA,KAEA/L,EAAA9E,EAAA3G,QAAAqH,MAAAD,GACAqE,EAAAiF,KAAAnQ,KAAA4T,SAEA5T,KAAA8W,UAAA,IAAA3X,EAAAM,QAAA2Q,KAAAvJ,GACA7G,KAAAkB,WAAAlB,KAAA8W,WAEA,IAAAI,GACA/G,KAAAnQ,KAAAyT,aACA7X,EAAAoE,KAAA8W,UAAAjG,UAAA,EACAN,SAAA,GAAAvQ,KAAAsE,SACAgM,WAAA,iBACAvJ,KAAA,UACAyJ,UAAA,SACAyG,cAAA,KAGAjX,KAAA+W,iBAAA,IAAA5X,EAAAM,QAAA2Q,KAAA8G,GACAlX,KAAA+W,iBAAAjb,EAAAkE,KAAA8W,UAAA7K,WAAAjM,KAAA+W,iBAAA9K,WAAA,GACAjM,KAAAkB,WAAAlB,KAAA+W,kBAEA/W,KAAAgX,eAAA1U,IAAAtC,KAAA8W,WACA9W,KAAAgX,eAAA1U,IAAAtC,KAAA+W,kBAKA/W,KAAAgX,eAAAlb,EAAAkE,KAAA+Q,OACA/Q,KAAAgX,eAAApb,GAAAoE,KAAAzC,MAAAyC,KAAA+W,iBAAAlG,UAAA7Q,KAAA8W,UAAAjG,UAAA,MAEA7Q,KAAAmX,aAAA,IAAAhY,EAAAM,QAAA2Q,KAAAlF,GACAlL,KAAAkB,WAAAlB,KAAAmX,iBAGArY,IAAA,eACAtD,MAAA,WAEA,IAAAqV,EAAA7Q,KAAAmX,aAAAtG,UAAA,GAAA7Q,KAAA+W,iBAAAlG,UAAA,EACAC,EAAA,EACAC,EAAA,EAEAF,EAAA,MACAA,EAAA,KAEAC,EAAA9Q,KAAA4D,GAAAiN,EAAA,IAEAE,EAAA/Q,KAAA+Q,OAAA/Q,KAAAiM,WAAAjM,KAAA8W,UAAA7K,YAAA,EAEAjM,KAAAoX,SAAA,IAAAjY,EAAAM,QAAAwH,MACAF,KAAA,UACAuH,OAAA,YACAC,YAAA,EACA2E,QAAA,GACA3V,MAAAsT,EACArT,OAAAwC,KAAAiM,WACArQ,EAAAkV,EACAhV,EAAAiV,IAEA/Q,KAAAkB,WAAAlB,KAAAoX,UAEA,IAAA3I,KACAA,EAAAlM,KAAA,KAAAuO,EAAAC,EAAA/Q,KAAA8U,gBAAApG,KAAA,MACAD,EAAAlM,KAAA,KAAAuO,EAAAC,GAAArC,KAAA,MACAD,EAAAlM,KAAA,KAAAuO,EAAA9Q,KAAA8U,eAAA/D,GAAArC,KAAA,MAEAD,EAAAlM,KAAA,KAAAuO,EAAAD,EAAA7Q,KAAA8U,eAAA/D,GAAArC,KAAA,MACAD,EAAAlM,KAAA,KAAAuO,EAAAD,EAAAE,GAAArC,KAAA,MACAD,EAAAlM,KAAA,KAAAuO,EAAAD,EAAAE,EAAA/Q,KAAA8U,gBAAApG,KAAA,MAEAD,EAAAlM,KAAA,KAAAuO,EAAAD,EAAAE,EAAA/Q,KAAAiM,WAAAjM,KAAA8U,gBAAApG,KAAA,MACAD,EAAAlM,KAAA,KAAAuO,EAAAD,EAAAE,EAAA/Q,KAAAiM,YAAAyC,KAAA,MACAD,EAAAlM,KAAA,KAAAuO,EAAAD,EAAA7Q,KAAA8U,eAAA/D,EAAA/Q,KAAAiM,YAAAyC,KAAA,MAEAD,EAAAlM,KAAA,KAAAuO,EAAA9Q,KAAA8U,eAAA/D,EAAA/Q,KAAAiM,YAAAyC,KAAA,MACAD,EAAAlM,KAAA,KAAAuO,EAAAC,EAAA/Q,KAAAiM,YAAAyC,KAAA,MACAD,EAAAlM,KAAA,KAAAuO,EAAAC,EAAA/Q,KAAAiM,WAAAjM,KAAA8U,gBAAApG,KAAA,MAEA1O,KAAAqX,aAAA,IAAAlY,EAAAM,QAAAmP,MACAzN,KAAAsN,EAAAC,KAAA,IACAJ,OAAAtO,KAAAsM,UACAiC,YAAA,IAEAvO,KAAAkB,WAAAlB,KAAAqX,cAEArX,KAAAyN,YAAAnL,IAAAtC,KAAAqX,cACArX,KAAAyN,YAAAnL,IAAAtC,KAAAoX,UAEApX,KAAAyN,YAAAnL,IAAAtC,KAAAgX,mBAGAlY,IAAA,cACAtD,MAAA,WACA,IAAA8b,EAAAtX,KAEAA,KAAAgW,QAAAhW,KAAAgW,OAAAvX,QAEAuB,KAAAgW,OAAA3U,IAAA,SAAAC,GACA,IAAA6O,EAAA,IAAAhR,EAAAM,QAAA2Q,MACAxU,EAAA0F,EAAAoF,MAAA9K,EAAA0b,EAAA1T,GACA9H,EAAAwF,EAAAoF,MAAA5K,EAAAwb,EAAAzT,GACAsM,KAAA7O,EAAA6O,KAAA,GACAI,SAAA,GAAA+G,EAAAhT,SAEAgM,WAAA,iBACAvJ,KAAAuQ,EAAAhL,YAEAgL,EAAApW,WAAAiP,GACAA,EAAAxO,SAAAL,EAAA9E,MAAA,IAEA8a,EAAA7J,YAAAnL,IAAA6N,QAIArR,IAAA,cACAtD,MAAA,WAEA,IAAAiT,KACAA,EAAAlM,KAAA,KACA,QAAA/D,EAAAwB,KAAAuU,UAAwC/V,GAAAwB,KAAAuU,UAAAvU,KAAAoU,SAAqC5V,GAAA,IAC7E,IAAA0M,EAAA7E,EAAA1J,qBAAAqD,KAAA6V,cAAArX,GACAiQ,EAAAlM,MAAA2I,EAAAtP,EAAAsP,EAAApP,GAAA4S,KAAA,UACA,IAAAlQ,GACAiQ,EAAAlM,KAAA,KAIAvC,KAAAuX,QAAA,IAAApY,EAAAM,QAAAmP,MACAzN,KAAAsN,EAAAC,KAAA,IACA9S,EAAAoE,KAAA4D,GACA9H,EAAAkE,KAAA6D,GACAyK,OAAAtO,KAAAsM,UACAiC,YAAA,EACAxH,KAAA,cAEA/G,KAAAkB,WAAAlB,KAAAuX,SAEAvX,KAAAwX,YAAA,IAAArY,EAAAM,QAAAmP,MACAzN,KAAAnB,KAAA8V,cAAApH,KAAA,IACA9S,EAAAoE,KAAA4D,GACA9H,EAAAkE,KAAA6D,GACAyK,OAAA,YACAC,YAAA,EACAxH,KAAA,cAEA/G,KAAAkB,WAAAlB,KAAAwX,aAEAxX,KAAAyX,eAAA,IAAAtY,EAAAM,QAAAmP,MACAzN,KAAAnB,KAAA+V,iBAAArH,KAAA,IACA9S,EAAAoE,KAAA4D,GACA9H,EAAAkE,KAAA6D,GACAyK,OAAAtO,KAAAsM,UACAiC,YAAA,EACAxH,KAAA,cAEA/G,KAAAkB,WAAAlB,KAAAyX,gBAEAzX,KAAAyN,YAAAnL,IAAAtC,KAAAuX,SACAvX,KAAAyN,YAAAnL,IAAAtC,KAAAwX,aACAxX,KAAAyN,YAAAnL,IAAAtC,KAAAyX,mBAGA3Y,IAAA,UACAtD,MAAA,WAEA,IAAAqL,GACAjL,EAAAoE,KAAA4D,GACA9H,EAAAkE,KAAA6D,GACAqL,YAAAlP,KAAA2V,YACAvG,YAAApP,KAAA4V,aACApZ,MAAAwD,KAAAoU,SAEA9F,OAAA,YACAC,YAAA,EACA5M,SAAA3B,KAAAuU,UACAmD,8BAA+C9b,GAAA,GAAAE,GAAA,IAC/C6b,4BAA6C/b,EAAA,GAAAE,EAAA,IAC7C8b,8BAAA,uCAEA5X,KAAA8N,IAAA,IAAA3O,EAAAM,QAAA6P,IAAAzI,GACA7G,KAAAkB,WAAAlB,KAAA8N,KAEA9N,KAAAyN,YAAAnL,IAAAtC,KAAA8N,QAGAhP,IAAA,iBACAtD,MAAA,WAqDA,GAnDAwE,KAAAqN,SACArN,KAAAyF,MAAA,IAAAtG,EAAAM,QAAAwB,MACAjB,KAAAkB,WAAAlB,KAAAyF,OAEAzF,KAAAyN,YAAA,IAAAtO,EAAAM,QAAAwB,MACAjB,KAAAkB,WAAAlB,KAAAyN,aAEAzN,KAAA6X,UAAA,IAAA1Y,EAAAM,QAAA2O,QACAxS,EAAAoE,KAAA4D,GACA9H,EAAAkE,KAAA6D,GACAwK,OAAArO,KAAA0V,YACApH,OAAAtO,KAAAsM,UACAiC,YAAA,IACAxH,KAAA,wBAEA/G,KAAAkB,WAAAlB,KAAA6X,YAGA7X,KAAAqN,SACArN,KAAA8X,YAAA,IAAA3Y,EAAAM,QAAA2Q,MACAxU,EAAAoE,KAAA4D,GACA9H,EAAAkE,KAAA6D,GACAsM,KAAAnQ,KAAA+X,gBACAxH,SAAA,GAAAvQ,KAAAsE,SACAgM,WAAA,gBACAvJ,KAAA,UACAyJ,UAAA,WAEAxQ,KAAAkB,WAAAlB,KAAA8X,cAEA9X,KAAA8X,YAAA3H,KAAAnQ,KAAA+X,iBACA/X,KAAA8X,YAAAlc,EAAAoE,KAAA4D,GAAA5D,KAAA8X,YAAAjH,UAAA,EAAA7Q,KAAA4U,aACA5U,KAAA8X,YAAAhc,EAAAkE,KAAA6D,GAAA7D,KAAA8X,YAAA7L,WAAA,EAAAjM,KAAA6U,cAmBA7U,KAAAqN,OAAA,CACA,IAAA2K,EAAA,IAAA7Y,EAAAM,QAAAwY,OACArc,EAAA,EACAE,GAAA,EACAuS,OAAA,GACA7R,MAAA,GACAuK,KAAA,UACAuH,OAAA,UACAC,YAAA,EACA5M,SAAA,KAEA3B,KAAAkB,WAAA8W,GAEA,IAAAE,EAAA,IAAA/Y,EAAAM,QAAAwY,OACArc,EAAA,EACAE,GAAA,EACAuS,OAAA,GACA7R,MAAA,GACAuK,KAAA,UACAuH,OAAA,UACAC,YAAA,EACA5M,SAAA,KAEA3B,KAAAkB,WAAAgX,GAEA,IAAAzN,EAAA,IAAAtL,EAAAM,QAAA0T,OACAvX,EAAAoE,KAAA4D,GACA9H,EAAAkE,KAAA6D,KAEA7D,KAAAkB,WAAAuJ,GAEAA,EAAAnI,IAAA4V,GACAzN,EAAAnI,IAAA0V,GAEAhY,KAAAyK,QAGAzK,KAAAmY,gBAEAnY,KAAAqN,SACArN,KAAAxD,MAAAwD,KAAAuU,UAAA,EAEAvU,KAAAyF,MAAAnD,IAAAtC,KAAAyK,OACAzK,KAAAyF,MAAAnD,IAAAtC,KAAA6X,WACA7X,KAAAyF,MAAAnD,IAAAtC,KAAA8X,aAIA9X,KAAA6O,aACA7O,KAAA8O,iBACA9O,KAAAoY,UACApY,KAAAqY,cACArY,KAAAsY,cACAtY,KAAAuY,WACAvY,KAAAwY,gBAGAxY,KAAA0C,MAAAJ,IAAAtC,KAAAyF,OACAzF,KAAA0C,MAAAJ,IAAAtC,KAAAyN,gBAGA3O,IAAA,YACAtD,MAAA,WACA,IAAAid,EAAAzY,KAGAA,KAAA6E,WACA7E,KAAAxD,MAAAwD,KAAAqW,iBAEArW,KAAAxD,OAAAwD,KAAAwW,UAEAxW,KAAAxD,OAAAwD,KAAAqW,iBAAArW,KAAA8E,iBACA9E,KAAAxD,MAAAwD,KAAAqW,gBAGArW,KAAAuW,cAEAvW,KAAA0C,MAAAJ,IAAAtC,KAAAyF,OAEAV,OAAAC,sBAAA,WACAyT,EAAA/S,kBAIA5G,IAAA,cACAtD,MAAA,WACA,IAAAkL,EAAAL,EAAA1J,qBAAAqD,KAAA0V,YAAA,EAAA1V,KAAAxD,OACAwD,KAAAyK,MAAA7O,EAAAoE,KAAA4D,GAAA8C,EAAA9K,GACAoE,KAAAyK,MAAA3O,EAAAkE,KAAA6D,GAAA6C,EAAA5K,GACAkE,KAAAyK,MAAA9I,SAAA3B,KAAAxD,MAAA,IACAwD,KAAAyK,MAAA9I,SAAA3B,KAAAxD,MAAA,IACAwD,KAAA0C,MAAAJ,IAAAtC,KAAAyF,UAGA3G,IAAA,mBACAtD,MAAA,eAEAsD,IAAA,gBACAtD,MAAA,eAEAsD,IAAA,UACAtD,MAAA,SAAA2Q,EAAA1G,OAEA3G,IAAA,UACAtD,MAAA,SAAA2Q,EAAA1G,OAEA3G,IAAA,qBACAtD,MAAA,eAEAsD,IAAA,aACAtD,MAAA,WACAwE,KAAAiO,aAAA5R,KAAA6R,KAAAlO,KAAA4L,cAAA5L,KAAAwD,IAAA,GAAAxD,KAAAsE,SAEAtE,KAAAmO,OAAA,IAAAhP,EAAAM,QAAA2O,QACAxS,EAAAoE,KAAA4D,GACA9H,EAAAkE,KAAA6D,GACAwK,OAAArO,KAAAiO,aACAK,OAAAtO,KAAAsM,UACAiC,YAAA,EACAxH,KAAA,cAEA/G,KAAAkB,WAAAlB,KAAAmO,QACAnO,KAAAyN,YAAAnL,IAAAtC,KAAAmO,WAGArP,IAAA,iBACAtD,MAAA,WACAwE,KAAAwO,iBAAAnS,KAAA6R,KAAAlO,KAAA2L,kBAAA3L,KAAAwD,IAAA,GAAAxD,KAAAsE,SAEA,IAAAmK,KACAA,EAAAlM,KAAA,KACA,QAAA/D,EAAA,GAA4BA,GAAA,IAAUA,IAAA,CACtC,IAAA0M,EAAA7E,EAAA1J,qBAAAqD,KAAAwO,iBAAAhQ,EAAA,IACAiQ,EAAAlM,MAAA2I,EAAAtP,EAAAsP,EAAApP,GAAA4S,KAAA,UACA,IAAAlQ,GACAiQ,EAAAlM,KAAA,KAGAkM,EAAAlM,KAAA,KACA,QAAAvE,EAAA,IAA8BA,GAAA,IAAWA,IAAA,CACzC,IAAA2Q,EAAAtI,EAAA1J,qBAAAqD,KAAAwO,iBAAAxQ,EAAA,IACAyQ,EAAAlM,MAAAoM,EAAA/S,EAAA+S,EAAA7S,GAAA4S,KAAA,UACA,KAAA1Q,GACAyQ,EAAAlM,KAAA,KAIAvC,KAAAwN,WAAA,IAAArO,EAAAM,QAAAmP,MACAzN,KAAAsN,EAAAC,KAAA,IACA9S,EAAAoE,KAAA4D,GACA9H,EAAAkE,KAAA6D,GACAyK,OAAAtO,KAAAsM,UACAiC,YAAA,IACAxH,KAAA,cAEA/G,KAAAkB,WAAAlB,KAAAwN,YAEAxN,KAAAyN,YAAAnL,IAAAtC,KAAAwN,eAGA1O,IAAA,QACAtD,MAAA,eAEAsD,IAAA,UACAtD,MAAA,WACAgN,EAAAgL,EAAAtU,UAAAmB,WAAAhF,OAAAiF,eAAAkT,EAAAtU,WAAA,UAAAc,MAAAE,KAAAF,MACAA,KAAAsV,eAAAjU,IAAA,SAAAC,GACAA,EAAAiI,KAAAjI,EAAAiI,IAAA1D,gBAKA2N,EAxwBA,GA2wBAjY,EAAAkE,QAAA+T,gCCzzBAnY,OAAAC,eAAAC,EAAA,cACAC,MAAA,OAGA,IAAA4C,EAAA,WAAgC,SAAAC,EAAAC,EAAAC,GAA2C,QAAAC,EAAA,EAAgBA,EAAAD,EAAAE,OAAkBD,IAAA,CAAO,IAAAE,EAAAH,EAAAC,GAA2BE,EAAAC,WAAAD,EAAAC,YAAA,MAAwDD,EAAAE,aAAA,KAAgC,UAAAF,MAAAG,SAAA,MAAuDxD,OAAAC,eAAAgD,EAAAI,EAAAI,IAAAJ,IAA+D,gBAAAK,EAAAC,EAAAC,GAA2L,OAAlID,GAAAX,EAAAU,EAAAG,UAAAF,GAAqEC,GAAAZ,EAAAU,EAAAE,GAA6DF,GAAxhB,GAIAqM,EAAAhM,EAFiBC,EAAQ,IAMzBgH,EAAAG,EAFgBnH,EAAQ,IAMxBF,EAAAC,EAFaC,EAAQ,IAMrBD,EAFkBC,EAAQ,IAM1BmH,EAFanH,EAAQ,IAIrB,SAAAmH,EAAAjH,GAAuC,GAAAA,KAAAC,WAA6B,OAAAD,EAAqB,IAAA+G,KAAiB,SAAA/G,EAAmB,QAAAT,KAAAS,EAAuBlE,OAAA6D,UAAAqH,eAAArG,KAAAX,EAAAT,KAAAwH,EAAAxH,GAAAS,EAAAT,IAAsG,OAAtBwH,EAAA7G,QAAAF,EAAsB+G,EAE1P,SAAAlH,EAAAG,GAAsC,OAAAA,KAAAC,WAAAD,GAAuCE,QAAAF,GAQ7E,IAAAmZ,EAAA,SAAA/Y,GAGA,SAAA+Y,EAAA9Y,EAAArC,EAAAC,IATA,SAAAqC,EAAAd,GAAiD,KAAAc,aAAAd,GAA0C,UAAAe,UAAA,qCAU3FC,CAAAC,KAAA0Y,GAEA,IAAA9T,EAVA,SAAA3E,EAAAC,GAAiD,IAAAD,EAAa,UAAAE,eAAA,6DAAyF,OAAAD,GAAA,iBAAAA,GAAA,mBAAAA,EAAAD,EAAAC,EAUvJE,CAAAJ,MAAA0Y,EAAArY,WAAAhF,OAAAiF,eAAAoY,IAAAxY,KAAAF,KAAAJ,EAAArC,EAAAC,IAaA,OAXAoH,EAAA9B,KAAA,kBAAAC,KAAAC,MAEA4B,EAAAyJ,OAAA,GAEAzJ,EAAAgQ,aAAA,EACAhQ,EAAAiQ,aAAA,EAEAjQ,EAAAiH,mBAAA,EACAjH,EAAAkH,uBAAA,EAEAlH,EAAA+T,SAAA,UACA/T,EAuJA,OA5KA,SAAArE,EAAAC,GAA0C,sBAAAA,GAAA,OAAAA,EAA+D,UAAAV,UAAA,kEAAAU,GAAuGD,EAAArB,UAAA7D,OAAAoF,OAAAD,KAAAtB,WAAyEwB,aAAelF,MAAA+E,EAAA5B,WAAA,MAAAE,SAAA,KAAAD,aAAA,QAA6E4B,IAAAnF,OAAAsF,eAAAtF,OAAAsF,eAAAJ,EAAAC,GAAAD,EAAAF,UAAAG,GAGrXI,CAAA8X,EA0KCtN,EAAA3L,SArJDrB,EAAAsa,IACA5Z,IAAA,sBACAtD,MAAA,WACA,IAAAqF,EAAAb,KAEAA,KAAA6E,WACA7E,KAAAwN,YAEAxN,KAAA8E,gBAIA9E,KAAA6L,oBAAA7L,KAAA8L,uBAEA9L,KAAAwN,WAAA7L,SAAA3B,KAAA6L,oBACA7L,KAAA0C,MAAAJ,IAAAtC,KAAAyF,OAEAV,OAAAC,sBAAA,WACAnE,EAAAyM,4BAIAxO,IAAA,OACAtD,MAAA,WAWA,OATAwE,KAAA4Y,aAAA5Y,KAAAqO,OAAA,EACArO,KAAA4Y,cAAA5Y,KAAAsE,SAIAtE,KAAAoN,iBAEApN,KAAAsN,sBAEAtN,QAGAlB,IAAA,SACAtD,MAAA,SAAAqd,GACA7Y,KAAA6Y,OAEA,IAAA7J,EAAAhP,KAAAsM,UAcA,OAZAuM,GAAA7Y,KAAA0D,KAAAmV,EAAA7Y,KAAAwD,MACAwL,EAAAhP,KAAA2Y,UAGA3Y,KAAAmQ,KAAApJ,KAAAiI,GACAhP,KAAAmO,OAAAG,OAAAU,GACAhP,KAAAwN,WAAAc,OAAAU,GAEAhP,KAAA0C,MAAAJ,IAAAtC,KAAAyF,OAIAzF,QAGAlB,IAAA,iBACAtD,MAAA,WACAwE,KAAAuY,WACAvY,KAAA6O,aACA7O,KAAA8O,oBAGAhQ,IAAA,WACAtD,MAAA,WACAwE,KAAAmQ,KAAA,IAAAhR,EAAAM,QAAA2Q,MACAxU,EAAAoE,KAAA0G,MAAA9K,EACAE,EAAAkE,KAAA0G,MAAA5K,EACAqU,KAAAnQ,KAAAmQ,KACAI,SAAA,GAAAvQ,KAAAsE,SACAgM,WAAA,gBACAvJ,KAAA/G,KAAAsM,UACAkE,UAAA,WAEAxQ,KAAAkB,WAAAlB,KAAAmQ,MAEAnQ,KAAAmQ,KAAAvU,EAAAoE,KAAA0G,MAAA9K,EAAAoE,KAAAmQ,KAAAU,UAAA,EAAA7Q,KAAA4U,aACA5U,KAAAmQ,KAAArU,EAAAkE,KAAA0G,MAAA5K,EAAAkE,KAAAmQ,KAAAlE,WAAA,EAAAjM,KAAA6U,aAEA7U,KAAAyF,MAAAnD,IAAAtC,KAAAmQ,SAGArR,IAAA,aACAtD,MAAA,WACAwE,KAAAmO,OAAA,IAAAhP,EAAAM,QAAA2O,QACAxS,EAAAoE,KAAA0G,MAAA9K,EACAE,EAAAkE,KAAA0G,MAAA5K,EACAuS,OAAArO,KAAA4Y,aACAtK,OAAAtO,KAAAsM,UACAiC,YAAA,EACAxH,KAAA,cAEA/G,KAAAkB,WAAAlB,KAAAmO,QAEAnO,KAAAyF,MAAAnD,IAAAtC,KAAAmO,WAGArP,IAAA,iBACAtD,MAAA,WACAwE,KAAAwO,iBAAAxO,KAAAqO,OAAA,EACArO,KAAAwO,kBAAAxO,KAAAsE,SAEA,IAAAmK,KACAA,EAAAlM,KAAA,KACA,QAAA/D,EAAA,GAA4BA,GAAA,IAAUA,IAAA,CACtC,IAAA0M,EAAA7E,EAAA1J,qBAAAqD,KAAAwO,iBAAAhQ,EAAA,IACAiQ,EAAAlM,MAAA2I,EAAAtP,EAAAsP,EAAApP,GAAA4S,KAAA,UACA,IAAAlQ,GACAiQ,EAAAlM,KAAA,KAGAkM,EAAAlM,KAAA,KACA,QAAAvE,EAAA,IAA8BA,GAAA,IAAWA,IAAA,CACzC,IAAA2Q,EAAAtI,EAAA1J,qBAAAqD,KAAAwO,iBAAAxQ,EAAA,IACAyQ,EAAAlM,MAAAoM,EAAA/S,EAAA+S,EAAA7S,GAAA4S,KAAA,UACA,KAAA1Q,GACAyQ,EAAAlM,KAAA,KAIAvC,KAAAwN,WAAA,IAAArO,EAAAM,QAAAmP,MACAzN,KAAAsN,EAAAC,KAAA,IACA9S,EAAAoE,KAAA0G,MAAA9K,EACAE,EAAAkE,KAAA0G,MAAA5K,EACAwS,OAAAtO,KAAAsM,UACAiC,YAAA,EACAxH,KAAA,cAEA/G,KAAAkB,WAAAlB,KAAAwN,YAEAxN,KAAAyF,MAAAnD,IAAAtC,KAAAwN,eAGA1O,IAAA,QACAtD,MAAA,eAEAsD,IAAA,mBACAtD,MAAA,eAEAsD,IAAA,gBACAtD,MAAA,eAEAsD,IAAA,qBACAtD,MAAA,gBAGAkd,EA1KA,GA6KAnd,EAAAkE,QAAAiZ,gCCjNArd,OAAAC,eAAAC,EAAA,cACAC,MAAA,OAEAD,EAAAsP,YACAC,MAAA,QACAC,MAAA,uCCLA1P,OAAAC,eAAAC,EAAA,cACAC,MAAA,OAGA,IAAA4C,EAAA,WAAgC,SAAAC,EAAAC,EAAAC,GAA2C,QAAAC,EAAA,EAAgBA,EAAAD,EAAAE,OAAkBD,IAAA,CAAO,IAAAE,EAAAH,EAAAC,GAA2BE,EAAAC,WAAAD,EAAAC,YAAA,MAAwDD,EAAAE,aAAA,KAAgC,UAAAF,MAAAG,SAAA,MAAuDxD,OAAAC,eAAAgD,EAAAI,EAAAI,IAAAJ,IAA+D,gBAAAK,EAAAC,EAAAC,GAA2L,OAAlID,GAAAX,EAAAU,EAAAG,UAAAF,GAAqEC,GAAAZ,EAAAU,EAAAE,GAA6DF,GAAxhB,GAEAyJ,EAAA,SAAAC,EAAAC,EAAAC,EAAAC,GAAqD,OAAAF,MAAAG,SAAA3J,WAAkD,IAAA4J,EAAAzN,OAAA0N,yBAAAL,EAAAC,GAA8D,QAAAxD,IAAA2D,EAAA,CAA0B,IAAAE,EAAA3N,OAAAiF,eAAAoI,GAA4C,cAAAM,OAAuB,EAA2BP,EAAAO,EAAAL,EAAAC,GAA4C,aAAAE,EAA4B,OAAAA,EAAAtN,MAA4B,IAAAyN,EAAAH,EAAAL,IAAuB,YAAAtD,IAAA8D,EAAgDA,EAAA/I,KAAA0I,QAAhD,GAIxZtJ,EAAAF,EAFoBC,EAAQ,IAU5BF,GAJAqH,EAFgBnH,EAAQ,IAMxBD,EAFaC,EAAQ,KAMrB+G,EAAAhH,EAFkBC,EAAQ,IAM1BmH,EAFanH,EAAQ,IAIrB,SAAAmH,EAAAjH,GAAuC,GAAAA,KAAAC,WAA6B,OAAAD,EAAqB,IAAA+G,KAAiB,SAAA/G,EAAmB,QAAAT,KAAAS,EAAuBlE,OAAA6D,UAAAqH,eAAArG,KAAAX,EAAAT,KAAAwH,EAAAxH,GAAAS,EAAAT,IAAsG,OAAtBwH,EAAA7G,QAAAF,EAAsB+G,EAE1P,SAAAlH,EAAAG,GAAsC,OAAAA,KAAAC,WAAAD,GAAuCE,QAAAF,GAQ7E,IAAAuZ,EAAA,SAAAnZ,GAGA,SAAAmZ,EAAAlZ,EAAArC,EAAAC,IATA,SAAAqC,EAAAd,GAAiD,KAAAc,aAAAd,GAA0C,UAAAe,UAAA,qCAU3FC,CAAAC,KAAA8Y,GAEA,IAAAlU,EAVA,SAAA3E,EAAAC,GAAiD,IAAAD,EAAa,UAAAE,eAAA,6DAAyF,OAAAD,GAAA,iBAAAA,GAAA,mBAAAA,EAAAD,EAAAC,EAUvJE,CAAAJ,MAAA8Y,EAAAzY,WAAAhF,OAAAiF,eAAAwY,IAAA5Y,KAAAF,KAAAJ,EAAArC,EAAAC,IAaA,OAXAoH,EAAA9B,KAAA,UAAAC,KAAAC,MAEA4B,EAAAmU,UAAA,UAEAnU,EAAAoU,UAAA,EAEApU,EAAAuL,QACAvL,EAAA1C,QACA0C,EAAA6F,SAEA7F,EAAAzB,eACAyB,EAkOA,OAvPA,SAAArE,EAAAC,GAA0C,sBAAAA,GAAA,OAAAA,EAA+D,UAAAV,UAAA,kEAAAU,GAAuGD,EAAArB,UAAA7D,OAAAoF,OAAAD,KAAAtB,WAAyEwB,aAAelF,MAAA+E,EAAA5B,WAAA,MAAAE,SAAA,KAAAD,aAAA,QAA6E4B,IAAAnF,OAAAsF,eAAAtF,OAAAsF,eAAAJ,EAAAC,GAAAD,EAAAF,UAAAG,GAGrXI,CAAAkY,EAqPCxZ,EAAAG,SAhODrB,EAAA0a,IACAha,IAAA,WACAtD,MAAA,SAAAkH,GACA8F,EAAAsQ,EAAA5Z,UAAAmB,WAAAhF,OAAAiF,eAAAwY,EAAA5Z,WAAA,WAAAc,MAAAE,KAAAF,KAAA0C,GAEA1C,KAAAyF,MAAA,IAAAtG,EAAAM,QAAAwB,UACAjB,KAAAkB,WAAAlB,KAAAyF,OAEA/C,EAAAJ,IAAAtC,KAAAyF,UAGA3G,IAAA,OACAtD,MAAA,WACA,IAAAqF,EAAAb,KA2GA,OAzGAA,KAAAmB,UAAAE,IAAA,SAAAS,EAAAhD,GACA,IAAAlD,EAAA,EACAE,EAAA,EAEAmd,EAAA5c,KAAAoa,MAAA3X,EAAA+B,EAAAqY,UAEA,OAAArY,EAAAyE,aACA,aAEA1J,EAAAiF,EAAAsY,SAAAtY,EAAAsY,QAAAtY,EAAAuY,gBAAAta,EAAA+B,EAAAqY,UACApd,EAAA+E,EAAArD,QAAAqD,EAAAwY,MAAAJ,IAAApY,EAAAyY,SAAAzY,EAAA0Y,aAMA,IAAAC,EAAA1X,EAAAgB,MAAAhE,EAAA,GAEAkQ,EAAAnO,EAAAoC,OAAAnE,EAAA+B,EAAAoC,OAAAxE,QAOA,GALA2H,EAAA3G,QAAAuK,WAAAlI,EAAA,qBAEAkN,EAAAlN,EAAA2X,UAAAzK,OAGAnO,EAAAwM,OA6DiB,CACjB,IAAAqM,EAAA7Y,EAAA4J,MAAA3L,GAEA4a,EAAA1S,KAAApL,KACA8d,EAAA1S,KAAAlL,KACA4d,EAAA1S,KAAAzJ,MAAAsD,EAAA8Y,aACAD,EAAA1S,KAAAxJ,OAAAqD,EAAA+Y,cAEAF,EAAAG,GAAAje,KACA8d,EAAAG,GAAA/d,KACA4d,EAAAG,GAAAtc,MAAAsD,EAAA8Y,aACAD,EAAAG,GAAArc,OAAAqD,EAAA+Y,cAEAF,EAAAvJ,KAAAvU,IAAAiF,EAAAmY,UAAAU,EAAA1S,KAAAzJ,SACAmc,EAAAvJ,KAAArU,SA3EA,CACA,IAAAkL,EAAA,IAAA7H,EAAAM,QAAAwH,MACArL,IACAE,IACAyB,MAAAsD,EAAA8Y,YACAnc,OAAAqD,EAAA+Y,aACA7S,KAAAiI,IAEAnO,EAAAK,WAAA8F,GAEA,IAAA6S,EAAA,IAAA1a,EAAAM,QAAAwH,MACArL,IACAE,IACAyB,MAAAsD,EAAAuY,cACA5b,OAAAqD,EAAA0Y,YACAxS,KAAA,cAEAlG,EAAAK,WAAA2Y,GAEA,IAAA1J,EAAA,IAAAhR,EAAAM,QAAA2Q,MACAD,KAAAqJ,EACA5d,IAAAiF,EAAAmY,UAAAhS,EAAAzJ,QACAzB,IACAiL,KAAAlG,EAAAkY,UACAzI,WAAA,iBACAC,SAAA,KAEA1P,EAAAK,WAAAiP,GAEA,IAAA1F,EAAA,IAAAtL,EAAAM,QAAA0T,MACAtS,EAAAK,WAAAuJ,GACAA,EAAAnI,IAAAuX,GACApP,EAAAnI,IAAA0E,GACAyD,EAAAnI,IAAA6N,GAEA,IAAAhP,GACA2Y,IAAArP,EACA3I,OACAqJ,SAAA,MACAnE,OACA6S,KACA1J,QAGAtP,EAAA4J,MAAAlI,KAAApB,GACAsJ,EAAAsP,GAAA,mBAEA5Y,EAAAgK,UAAAhK,EAAAgK,SAEAhK,EAAAgK,SACAV,EAAAyI,QAAA,IAEAzI,EAAAyI,QAAA,GAGArS,EAAA6B,MAAAJ,IAAAzB,EAAA4E,OAEA5E,EAAA2J,UAAA3J,EAAA2J,SAAA3J,EAAA4J,SAGA5J,EAAA4E,MAAAnD,IAAAmI,MAkBAzK,KAAA0C,MAAAJ,IAAAtC,KAAAyF,OAEAzF,QAGAlB,IAAA,SACAtD,MAAA,SAAA2F,GACAnB,KAAAmB,WACAnB,KAAAmB,MAAAnB,KAAAmB,WAAAnB,KAAAmB,UAAA1C,SAaAuB,KAAA2G,OAEA3G,KAAAqN,OAAA,MAGAvO,IAAA,cACAtD,MAAA,WACA,OAAAwE,KAAAuZ,YAAAvZ,KAAAqZ,MAAArZ,KAAAmZ,WAGAra,IAAA,QACAtD,MAAA,WAGA,OAFA,KAKAsD,IAAA,YACAtD,MAAA,WACA,OAAAwE,KAAAmB,KAAAwY,WAAA,KAGA7a,IAAA,aACAtD,MAAA,WACA,OAAAwE,KAAAmB,KAAAyY,YAAA,KAGA9a,IAAA,cACAtD,MAAA,WACA,OAAAwE,KAAAzC,OAAAyC,KAAAkZ,SAAA,KAAAlZ,KAAAmZ,SAAAnZ,KAAAkZ,YAGApa,IAAA,SACAtD,MAAA,WACA,OAAAwE,KAAAmB,KAAA+X,QAAA,KAGApa,IAAA,QACAtD,MAAA,WACA,OAAAwE,KAAAmB,KAAAgY,OAAA,MAGAra,IAAA,SACAtD,MAAA,WACA,OAAAwE,KAAAmB,KAAAgY,OAAA,KAGAra,IAAA,YACAtD,MAAA,WACA,OAAAwE,KAAAmB,KAAAoY,WAAA,MAGAza,IAAA,MACAtD,MAAA,WACA,OAAAa,KAAA6R,KAAAlO,KAAAmB,UAAA1C,OAAAuB,KAAAkZ,aAGApa,IAAA,YACAtD,MAAA,WACA,IAAAG,EAAA,MAUA,OARAqE,KAAAmB,KAAA6Y,OACAre,EAAA,SACaqE,KAAAmB,KAAA8Y,KACbte,EAAA,OACaqE,KAAAmB,KAAA+Y,QACbve,EAAA,SAGAA,KAGAmD,IAAA,UACAtD,MAAA,WACAgN,EAAAsQ,EAAA5Z,UAAAmB,WAAAhF,OAAAiF,eAAAwY,EAAA5Z,WAAA,UAAAc,MAAAE,KAAAF,MAGAA,KAAAyK,OAAAzK,KAAAyK,MAAAhM,QAAAuB,KAAAyK,MAAApJ,IAAA,SAAAS,GAEAA,EAAAgY,IAAAK,IAAA,eAKArB,EArPA,GAwPAvd,EAAAkE,QAAAqZ,2lFC9RA,IAAAsB,GACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAIO,SAAAC,EAAAlZ,EAAA8B,GACPA,KAAAmX,EAGAjZ,KAAAwD,QAAAxD,EAAAwD,OAAAxD,MACAA,EAAAwD,OAAAxD,KAAAE,IAAA,CAAAS,EAAAhD,KACAgD,EAAA2X,YAEA3X,EAAA2X,UAAAzK,MAAA/L,EAAAnE,EAAAmE,EAAAxE,WAIA0C,KAAA+I,QACA/I,EAAA+I,OAAA7I,IAAA,CAAAS,EAAAhD,KACAgD,EAAAX,MAEAW,EAAAX,KAAAE,IAAA,CAAA8I,EAAAmQ,KACAnQ,EAAA8E,YACA9E,EAAA8E,UAAAD,MAAA/L,EAAAqX,EAAArX,EAAAxE,aCvBA,IAAA2C,IAGAI,IAAe+Y,EAAA,EACf3Y,SAAA,KACAgB,aAAA,yBACArF,MAAA,IACAC,OAAA,IACAiE,QAAA,EACAC,QAAA,IAIAF,IAAe+Y,EAAA,EACf3Y,SAAA,KACAgB,aAAA,yBACArF,MAAA,IACAC,OAAA,IACAiE,QAAA,EACAC,QAAA,EACAC,SAAA,IAMA,IAAe6Y,EAAAC,EAAgB,iBAC/BC,OAAAC,KAAA,WAGA,IAAAxZ,EAAe9B,EAAS,IAGxB8B,GACAA,EAAA+I,QACA/I,EAAA+I,OAAA7I,IAAAS,IACAA,EAAAV,eAEIiZ,EAAelZ,GAEnB,IAAAvB,EAAAgb,SAAAC,cAAA,WAEAC,EAAA,IAAoBC,EAAAN,EAAQ7a,GAC5Bkb,EAAArR,OAAAtI,EAAA,MAEA4D,OAAAiW,iBAAA,cAEAjW,OAAAkW,YAAAC,aAAAnW,OAAAkW,YAEAlW,OAAAkW,WAAAE,WAAA,KAEA,IAAAC,EAAArW,OAAAsW,YAAA,EAEAP,EAAAtR,OAAA4R,MACS,OAETE,YAAA,KAEA,IAAAna,EAAmB9B,EAAS,IAE5B8B,GACAA,EAAA+I,QACA/I,EAAA+I,OAAA7I,IAAAS,IACAA,EAAAV,eAGQiZ,EAAelZ,GAEvB2Z,EAAArR,OAAAtI,EAAA,MAEK,MAsCJ","file":"assets/js/dount.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.pointRectangleIntersection = pointRectangleIntersection;\nexports.pointDistance = pointDistance;\nexports.pointAngle = pointAngle;\nexports.distanceAngleToPoint = distanceAngleToPoint;\nexports.radians = radians;\nexports.degree = degree;\nexports.intersectRect = intersectRect;\nexports.fixEndAngle = fixEndAngle;\nexports.pointPlus = pointPlus;\n\n/**\n * 判断一个点是否在矩形里面\n * @method  pointRectangleIntersection\n * @param   {point} _p\n * @param   {rect}  _r\n * @return  Boolean\n * @static\n */\nfunction pointRectangleIntersection(p, r) {\n    return p.x >= r.x && p.x <= r.x2 && p.y >= r.y && p.y <= r.y2;\n}\n/**\n * 计算两个坐标点之间的距离\n * @method pointDistance\n * @param   {point} _p1\n * @param   {point} _p2\n * @return  Boolean\n * @static\n */\nfunction pointDistance(_p1, _p2) {\n    var _dx = _p2.x - _p1.x,\n        _dy = _p2.y - _p1.y,\n        _dist = Math.sqrt(_dx * _dx + _dy * _dy);\n    ;\n    return _dist;\n}\n/**\n * 计算两个坐标点之间的角度\n * @method pointAngle\n * @param   {point} _p1\n * @param   {point} _p2\n * @return  Boolean\n * @static\n */\nfunction pointAngle(_p1, _p2) {\n    var angle = Math.atan2(_p2.y - _p1.y, _p2.x - _p1.x) * 180 / Math.PI;\n    if (angle < 0) {\n        angle = 360 + angle;\n    }\n\n    return angle;\n}\n\n/**\n * 从长度和角度求坐标点\n * @method  distanceAngleToPoint\n * @param  {Number} _distance\n * @param  {Number} _angle\n * @return Point\n * @static\n */\nfunction distanceAngleToPoint(_distance, _angle) {\n    var _radian = _angle * Math.PI / 180;\n    return {\n        x: Math.cos(_radian) * _distance,\n        y: Math.sin(_radian) * _distance\n    };\n}\n/**\n * 从角度获取弧度\n * @method  radians\n * @param   {Number} _angle\n * @return  {Number}\n * @static\n */\nfunction radians(_angle) {\n    return _angle * Math.PI / 180;\n}\n/**\n * 从弧度获取角度\n * @method  degree\n * @param   {Number} _radians\n * @return  {Number}\n * @static\n */\nfunction degree(_radians) {\n    return _radians / Math.PI * 180;\n}\n/**\n * 判断两个矩形是否有交集\n * @method intersectRect\n * @param   {rect_Object}   r1\n * @param   {rect_Object}   r2\n * @return  {Boolean}\n */\nfunction intersectRect(r1, r2) {\n    return !(r2.x > r1.x + r1.width || r2.x + r2.width < r1.x || r2.y > r1.y + r1.height || r2.y + r2.height < r1.y);\n}\n\nfunction fixEndAngle(startAngle, endAngle) {\n    if (endAngle < startAngle) {\n        endAngle += 360;\n    }\n    return endAngle;\n}\n\nfunction pointPlus(p1, p2) {\n    return {\n        x: p1.x + p2.x,\n        y: p1.y + p2.y\n    };\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseFinance = parseFinance;\n\n\n/**\n * 取小数点的N位\n * <br />JS 解析 浮点数的时候，经常出现各种不可预知情况，这个函数就是为了解决这个问题\n * @method  parseFinance\n * @static\n * @param   {number}    _i\n * @param   {int}       _dot  default = 2\n * @return  number\n */\nfunction parseFinance(_i, _dot) {\n  _i = parseFloat(_i) || 0;\n  typeof _dot == 'undefined' && (_dot = 2);\n  _i && (_i = parseFloat(_i.toFixed(_dot)));\n  return _i;\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _vischartbase = require('../../common/vischartbase.js');\n\nvar _vischartbase2 = _interopRequireDefault(_vischartbase);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar KonvaBase = function (_VisChartBase) {\n    _inherits(KonvaBase, _VisChartBase);\n\n    function KonvaBase(box, width, height) {\n        _classCallCheck(this, KonvaBase);\n\n        return _possibleConstructorReturn(this, (KonvaBase.__proto__ || Object.getPrototypeOf(KonvaBase)).call(this, box, width, height));\n    }\n\n    _createClass(KonvaBase, [{\n        key: 'loadImage',\n        value: function loadImage() {\n            var _this2 = this;\n\n            if (this.images.length) return;\n\n            if (this.iconLayer) this.iconLayer.remove();\n            this.iconLayer = new _konva2.default.Layer();\n            this.addDestroy(this.iconLayer);\n\n            this.images = [];\n\n            if (this.data && this.data.background && this.data.background.length) {\n                this.data.background.map(function (val) {\n                    _this2.addImage(val.url, val.width, val.height, val.offsetX || 0, val.offsetY || 0, val.rotation || 0, val.isbase64);\n                });\n            }\n\n            this.rotationBg = [];\n\n            this.images.map(function (item) {\n                //console.log( 'item', item );\n\n                var img = new Image();\n                img.onload = function () {\n                    var width = item.width || img.width,\n                        height = item.height || img.height;\n\n                    var icon = new _konva2.default.Image({\n                        image: img,\n                        x: _this2.fixCx() - width / 2 + item.offsetX,\n                        y: _this2.fixCy() - height / 2 + item.offsetY,\n                        width: width,\n                        height: height\n                    });\n                    _this2.addDestroy(icon);\n\n                    _this2.iconLayer.add(icon);\n\n                    if (item.rotation) {\n                        _this2.rotationBg.push(icon);\n                        icon.x(_this2.fixCx() - width / 2 + item.offsetX + width / 2);\n                        icon.y(_this2.fixCy() - height / 2 + item.offsetY + height / 2);\n                        icon.offset({ x: width / 2, y: height / 2 });\n                        if (_this2.rotationBg.length === 1) _this2.animationBg();\n                    }\n                    _this2.stage.add(_this2.iconLayer);\n                };\n                if (item.isbase64) {\n                    img.src = (item.base64prefix || 'data:image/png;base64,') + item.url;\n                } else {\n                    img.src = item.url;\n                }\n            });\n\n            return this;\n        }\n    }]);\n\n    return KonvaBase;\n}(_vischartbase2.default);\n\nexports.default = KonvaBase;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar VisChartBase = function () {\n    function VisChartBase(box, width, height) {\n        _classCallCheck(this, VisChartBase);\n\n        this.box = box;\n\n        this.name = 'VisChartBase_' + Date.now();\n\n        this.colors = ['#f12575', '#da432e', '#f3a42d', '#19af89', '#24a3ea', '#b56be8'];\n\n        this._setSize(width, height);\n    }\n\n    _createClass(VisChartBase, [{\n        key: '_setSize',\n        value: function _setSize(width, height) {\n\n            this.destroyList = [];\n\n            width = width || this.box.offsetWidth;\n            height = height || this.box.offsetHeight;\n\n            this.width = width || this.box.offsetWidth;\n            this.height = height || this.box.offsetHeight;\n\n            this.customWidth = width || this.width;\n            this.customHeight = height || this.height;\n\n            //console.log( this.width, this.height );\n\n            this.max = this.maxSize = Math.max(this.width, this.height);\n            this.min = this.minSize = Math.min(this.width, this.height);\n\n            this.cx = this.width / 2;\n            this.cy = this.height / 2;\n            this.cpoint = { x: this.cx, y: this.cy };\n\n            this.totalAngle = 360;\n            this.angleOffset = 0;\n            this.countAngle = 0;\n\n            this.images = [];\n\n            this.rateWidth = 330;\n            this.rateHeight = 330;\n\n            this.rotationBg = [];\n\n            this.rotationBgCount = 0;\n            this.rotationBgStep = 1;\n\n            this.sizeRate = 1;\n\n            this.standSize = 330;\n\n            if (this.min < this.standSize) {\n                this.sizeRate = this.min / this.standSize;\n            }\n        }\n    }, {\n        key: 'update',\n        value: function update(data, allData) {\n            //console.log( 'update', this.name, Date.now(), this.width, this.height );\n\n            this.data = data;\n            this.allData = allData;\n\n            this.loadImage();\n\n            return this;\n        }\n    }, {\n        key: 'opacity',\n        value: function opacity(num) {}\n    }, {\n        key: 'setLegend',\n        value: function setLegend(legend) {\n            this.legend = legend;\n        }\n    }, {\n        key: 'animation',\n        value: function animation() {}\n    }, {\n        key: 'animationBg',\n        value: function animationBg() {\n            var _this = this;\n\n            //console.log( 'animationBg', Date.now(), this.isDestroy, this.rotationBg.length, this.rotationBgCount );\n            if (this.isDestroy) return;\n            if (!this.rotationBg.length) return;\n            if (!this.isAnimation()) return;\n\n            this.rotationBg.map(function (item) {\n                _this.rotationBgCount = (_this.rotationBgCount - _this.rotationBgStep) % 360;\n                item.rotation(_this.rotationBgCount);\n            });\n\n            this.stage.add(this.iconLayer);\n\n            window.requestAnimationFrame(function () {\n                _this.animationBg();\n            });\n        }\n    }, {\n        key: 'addImage',\n        value: function addImage(imgUrl, width, height) {\n            var offsetX = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n            var offsetY = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n            var rotation = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n            var isbase64 = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;\n\n            //console.log( this.rateWidth, this.width );\n            var rateW = this.min / this.rateWidth,\n                rateH = this.min / this.rateHeight;\n            this.images.push({\n                url: imgUrl,\n                width: width * rateW,\n                height: height * rateH,\n                offsetX: offsetX,\n                offsetY: offsetY,\n                rotation: rotation,\n                isbase64: isbase64\n            });\n\n            return this;\n        }\n\n        /*\n            \"background\": [\n                { \n                    \"url\": \"./img/dount-in.png\"\n                    , \"width\": 120\n                    , \"height\": 120\n                    , \"offsetX\": 0\n                    , \"offsetY\": 1\n                }\n                , { \n                    \"url\": \"./img/dount-big.png\"\n                    , \"width\": 250\n                    , \"height\": 248\n                    , \"offsetX\": 0\n                    , \"offsetY\": 1\n                }\n            ],\n        */\n\n    }, {\n        key: 'loadImage',\n        value: function loadImage() {\n            return this;\n        }\n    }, {\n        key: 'hasLegend',\n        value: function hasLegend() {\n            var r = void 0;\n\n            if (this.data && this.data.legend && this.data.legend.data && this.data.legend.data.length) {\n                r = true;\n            }\n\n            return r;\n        }\n    }, {\n        key: 'fixCx',\n        value: function fixCx() {\n            var r = this.cx;\n            return r;\n        }\n    }, {\n        key: 'fixCy',\n        value: function fixCy() {\n            var r = this.cy;\n\n            if (this.legend) {\n                switch (this.legend.direction()) {\n                    case 'bottom':\n                        {\n                            r = (this.height - this.legend.outerHeight() / 2) / 2 - 5;\n                            break;\n                        }\n                }\n            }\n\n            return r;\n        }\n    }, {\n        key: 'fixWidth',\n        value: function fixWidth() {\n            var r = this.width;\n            return r;\n        }\n    }, {\n        key: 'fixHeight',\n        value: function fixHeight() {\n            var r = this.height;\n            return r;\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            return this;\n        }\n    }, {\n        key: 'setOptions',\n        value: function setOptions(options) {\n\n            for (var key in options) {\n                this[key] = options[key];\n            }\n\n            this.options = options;\n        }\n    }, {\n        key: 'calcLayoutPosition',\n        value: function calcLayoutPosition() {\n            return this;\n        }\n    }, {\n        key: 'calcDataPosition',\n        value: function calcDataPosition() {\n            return this;\n        }\n    }, {\n        key: 'initDataLayout',\n        value: function initDataLayout() {\n            return this;\n        }\n    }, {\n        key: 'draw',\n        value: function draw() {\n            return this;\n        }\n    }, {\n        key: 'reset',\n        value: function reset() {}\n    }, {\n        key: 'getData',\n        value: function getData() {\n            return this.data || {};\n        }\n    }, {\n        key: 'layer',\n        value: function layer() {\n            return this.layer;\n        }\n    }, {\n        key: 'isAnimation',\n        value: function isAnimation() {\n            var r = true;\n\n            if (this.allData && 'animation' in this.allData) {\n                r = this.allData.animation;\n            }\n\n            if (this.data && 'animation' in this.data) {\n                r = this.data.animation;\n            }\n\n            return r;\n        }\n    }, {\n        key: 'isSeriesAnimation',\n        value: function isSeriesAnimation() {\n            var r = true;\n\n            if (this.data && 'seriesAnimation' in this.data) {\n                r = this.data.seriesAnimation;\n            }\n\n            return r;\n        }\n    }, {\n        key: 'setLayer',\n        value: function setLayer(layer) {\n            this.layer = layer;\n            return this;\n        }\n    }, {\n        key: 'setStage',\n        value: function setStage(stage) {\n            this.stage = stage;\n        }\n    }, {\n        key: 'resize',\n        value: function resize(width, height) {\n            var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n            var allData = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n            //console.log( 'resize', this.name, Date.now(), width, height );\n\n            this.customWidth = width || this.width;\n            this.customHeight = height || this.height;\n\n            this.data = data || this.data;\n            this.allData = allData || this.allData;\n\n            this.width = width || this.box.offsetWidth || this.width;\n            this.height = height || this.box.offsetHeight || this.height;\n\n            //console.log( this.width, this.height );\n\n            this._setSize(this.width, this.height);\n        }\n    }, {\n        key: 'remove',\n        value: function remove() {}\n    }, {\n        key: 'setDestroy',\n        value: function setDestroy() {\n            this.isDestroy = 1;\n        }\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            this.setDestroy();\n\n            this.destroyList.map(function (item) {\n                if (item) {\n                    //console.log( 'item', item );\n                    item.remove();\n                    item.destroy();\n                }\n            });\n        }\n    }, {\n        key: 'addDestroy',\n        value: function addDestroy() {\n            var _this2 = this;\n\n            for (var _len = arguments.length, item = Array(_len), _key = 0; _key < _len; _key++) {\n                item[_key] = arguments[_key];\n            }\n\n            item && item.length && item.map(function (val) {\n                _this2.destroyList.push(val);\n            });\n        }\n    }]);\n\n    return VisChartBase;\n}();\n\nexports.default = VisChartBase;","\nexport const dountBig = '';\n\n\nexport const dountIn = 'iVBORw0KGgoAAAANSUhEUgAAAHYAAAB1CAYAAACbMxW/AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAA3FpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMC1jMDYwIDYxLjEzNDc3NywgMjAxMC8wMi8xMi0xNzozMjowMCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iIHhtbG5zOnN0UmVmPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VSZWYjIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDoyNzI0ZGMwNS03YzE0LTMwNGUtYTMxZC02Y2NkNDM5NTRjNmUiIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6MEI1QkNFMUZDMjA2MTFFODhGOTNFOUM0REJFQ0YyQTciIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6MEI1QkNFMUVDMjA2MTFFODhGOTNFOUM0REJFQ0YyQTciIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENDIChXaW5kb3dzKSI+IDx4bXBNTTpEZXJpdmVkRnJvbSBzdFJlZjppbnN0YW5jZUlEPSJ4bXAuaWlkOmY0NTY1MTdhLTI1ZDQtNzA0Zi05ZmY0LWMxMGFjNTFkODc3ZiIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1wLmRpZDoyNzI0ZGMwNS03YzE0LTMwNGUtYTMxZC02Y2NkNDM5NTRjNmUiLz4gPC9y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';\n\nexport const rateOut = '';\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _geometry = require('../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar PointAt = function () {\n    function PointAt(width, height, point) {\n        _classCallCheck(this, PointAt);\n\n        this.width = width;\n        this.height = height;\n        this.point = point;\n\n        this.cx = this.width / 2;\n        this.cy = this.height / 2;\n\n        this.cpoint = { x: this.cx, y: this.cy };\n\n        this.offsetX = 20;\n        this.offsetY = 20;\n\n        this.colors = ['#f12575', '#da432e', '#f3a42d', '#19af89', '#24a3ea', '#b56be8'];\n\n        this.init();\n    }\n\n    _createClass(PointAt, [{\n        key: 'setDebug',\n        value: function setDebug(stage) {\n            this.stage = stage;\n\n            this.layer = new _konva2.default.Layer();\n\n            var i = 0;\n\n            for (var key in this.rects) {\n\n                var item = this.rects[key];\n                var params = _jsonUtilsx2.default.clone(item);\n                params.fill = this.colors[i % this.colors.length];\n\n                var rect = new _konva2.default.Rect(params);\n\n                this.layer.add(rect);\n\n                i++;\n            }\n\n            this.stage.add(this.layer);\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            this.leftTop = {\n                x: 0,\n                y: 0,\n                width: this.cx + this.offsetX,\n                height: this.cy + this.offsetY\n            };\n            this.leftTop.x2 = this.leftTop.x + this.leftTop.width;\n            this.leftTop.y2 = this.leftTop.y + this.leftTop.height;\n\n            this.rightTop = {\n                x: this.cx - this.offsetX,\n                y: 0,\n                width: this.cx + this.offsetX,\n                height: this.cy + this.offsetY\n            };\n            this.rightTop.x2 = this.rightTop.x + this.rightTop.width;\n            this.rightTop.y2 = this.rightTop.y + this.rightTop.height;\n\n            this.leftBottom = {\n                x: 0,\n                y: this.cy - this.offsetY,\n                width: this.cx + this.offsetX,\n                height: this.cy + this.offsetY\n            };\n            this.leftBottom.x2 = this.leftBottom.x + this.leftBottom.width;\n            this.leftBottom.y2 = this.leftBottom.y + this.leftBottom.height;\n\n            this.rightBottom = {\n                x: this.cx - this.offsetX,\n                y: this.cy - this.offsetY,\n                width: this.cx + this.offsetX,\n                height: this.cy + this.offsetY\n            };\n            this.rightBottom.x2 = this.rightBottom.x + this.rightBottom.width;\n            this.rightBottom.y2 = this.rightBottom.y + this.rightBottom.height;\n\n            this.rects = {\n                leftTop: this.leftTop,\n                rightTop: this.rightTop,\n                leftBottom: this.leftBottom,\n                rightBottom: this.rightBottom\n            };\n        }\n    }, {\n        key: 'isLeftTop',\n        value: function isLeftTop() {\n            return geometry.pointRectangleIntersection(this.point, this.leftTop) ? 1 : 0;\n        }\n    }, {\n        key: 'isRightTop',\n        value: function isRightTop() {\n            return geometry.pointRectangleIntersection(this.point, this.rightTop) ? 2 : 0;\n        }\n    }, {\n        key: 'isRightBottom',\n        value: function isRightBottom() {\n            return geometry.pointRectangleIntersection(this.point, this.rightBottom) ? 4 : 0;\n        }\n    }, {\n        key: 'isLeftBottom',\n        value: function isLeftBottom() {\n            return geometry.pointRectangleIntersection(this.point, this.leftBottom) ? 8 : 0;\n        }\n    }, {\n        key: 'auto',\n        value: function auto() {\n            var r = this.isLeftTop() + this.isRightTop() + this.isRightBottom() + this.isLeftBottom();\n            return r;\n        }\n    }, {\n        key: 'autoAngle',\n        value: function autoAngle() {\n            var angle = geometry.pointAngle(this.cpoint, this.point),\n                r = '';\n\n            if (angle >= 0 && angle <= 90) {\n                r = PointAt.DIRE_NAME.rightBottom;\n            } else if (angle > 90 && angle <= 180) {\n                r = PointAt.DIRE_NAME.leftBottom;\n            } else if (angle > 180 && angle <= 270) {\n                r = PointAt.DIRE_NAME.leftTop;\n            } else {\n                r = PointAt.DIRE_NAME.rightTop;\n            }\n\n            return r;\n        }\n    }]);\n\n    return PointAt;\n}();\n\nexports.default = PointAt;\n\n\nPointAt.DIRE_NAME = {\n    leftTop: 1,\n    rightTop: 2,\n    rightBottom: 4,\n    leftBottom: 8,\n\n    topCenter: 3,\n    rightMid: 6,\n    bottomCenter: 12,\n    leftMid: 9\n};\n\nPointAt.DIRE_NUM = {\n    '1': 'leftTop',\n    '2': 'rightTop',\n    '4': 'rightBottom',\n    '8': 'leftBottom',\n\n    '3': 'topCenter',\n    '6': 'rightMid',\n    '9': 'leftMid',\n    '12': 'bottomCenter'\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _vischartbase = require('./common/vischartbase.js');\n\nvar _vischartbase2 = _interopRequireDefault(_vischartbase);\n\nvar _index = require('./2d/dount/index.js');\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _index3 = require('./2d/gauge/index.js');\n\nvar _index4 = _interopRequireDefault(_index3);\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _constant = require('./common/constant.js');\n\nvar constant = _interopRequireWildcard(_constant);\n\nvar _legend = require('./2d/common/legend.js');\n\nvar _legend2 = _interopRequireDefault(_legend);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar VisChart = function (_VisChartBase) {\n    _inherits(VisChart, _VisChartBase);\n\n    function VisChart(box, width, height) {\n        _classCallCheck(this, VisChart);\n\n        var _this = _possibleConstructorReturn(this, (VisChart.__proto__ || Object.getPrototypeOf(VisChart)).call(this, box, width, height));\n\n        _this.ins = [];\n        _this.legend = null;\n\n        _this._setSize(width, height);\n        return _this;\n    }\n\n    _createClass(VisChart, [{\n        key: '_setSize',\n        value: function _setSize(width, height) {\n\n            _get(VisChart.prototype.__proto__ || Object.getPrototypeOf(VisChart.prototype), '_setSize', this).call(this, width, height);\n\n            this.init();\n\n            if (this.legend && this.data && this.data.legend) {\n                this.legend.resize(this.width, this.height);\n                this.legend.update(this.data.legend);\n            }\n\n            if (this.data) {\n                var tmpredraw = this.redraw;\n                this.update(this.data, this.ignoreLegend);\n                this.redraw = tmpredraw;\n            }\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            //console.log( 'VisChartBase init', Date.now(), this.width, this.height, this.canvas );\n\n            if (!this.box) return;\n\n            if (!this.stage) {\n                this.stage = new _konva2.default.Stage({\n                    container: this.box,\n                    width: this.width,\n                    height: this.height\n                });\n            } else {\n                this.stage.width(this.width);\n                this.stage.height(this.height);\n            }\n\n            //console.log( this.width, this.height, this.box.offsetWidth, this.box.offsetHeight );\n            //console.log( this );\n\n            this.customWidth && (this.box.style.width = this.customWidth + 'px');\n            this.customHeight && (this.box.style.height = this.customHeight + 'px');\n\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(data, ignoreLegend) {\n            var _this2 = this;\n\n            var redraw = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            this.data = data;\n            this.ignoreLegend = ignoreLegend;\n            this.redraw = redraw;\n\n            if (!_jsonUtilsx2.default.jsonInData(this.data, 'series')) return;\n\n            this.data && this.data.legend && this.data.legend.data && this.data.legend.data.legend && this.data.legend.data.map(function (item, key) {\n                item.realIndex = key;\n            });\n\n            this.data && this.data.series && this.data.series.length && this.data.series.map(function (sitem) {\n                sitem.data && sitem.data.length && sitem.data.map(function (item, key) {\n                    item.realIndex = key;\n                });\n            });\n\n            this.clearUpdate();\n\n            //console.log( ju );\n\n            //this.stage.removeChildren();\n\n            //console.log( 'update data', data );\n\n            if (_jsonUtilsx2.default.jsonInData(this.data, 'legend.data') && this.data.legend.data.length) {\n                if (this.legend && ignoreLegend) {\n                    this.emptyblock = 'kao';\n                } else {\n                    this.legend = new _legend2.default(this.box, this.width, this.height);\n                    this.legend.setStage(this.stage);\n                    this.legend.setOptions({\n                        onChange: function onChange(group) {\n                            //console.log( 'legend onchange', group );\n                            _this2.initChart();\n                        }\n                    });\n                    this.legend.update(this.data.legend);\n                }\n            }\n            this.initChart();\n            return this;\n        }\n    }, {\n        key: 'initChart',\n        value: function initChart() {\n            var _this3 = this;\n\n            if (this.ins && this.ins.length && !this.redraw) {\n                this.emptyblock = 'kao';\n            } else {\n                this.ins.map(function (item) {\n                    item.destroy();\n                });\n                this.ins = [];\n            }\n\n            this.data.series.map(function (val, key) {\n                //console.log( val, constant );\n                var ins = void 0;\n\n                if (_this3.ins && _this3.ins.length && _this3.ins[key] && !_this3.redraw) {\n                    ins = _this3.ins[key];\n                    ins.width = _this3.width;\n                    ins.height = _this3.height;\n                } else {\n                    switch (val.type) {\n                        case constant.CHART_TYPE.dount:\n                            {\n                                ins = new _index2.default(_this3.box, _this3.width, _this3.height);\n                                break;\n                            }\n                        case constant.CHART_TYPE.gauge:\n                            {\n                                ins = new _index4.default(_this3.box, _this3.width, _this3.height);\n                                break;\n                            }\n                    }\n                    if (ins) {\n                        _this3.legend && ins.setLegend(_this3.legend);\n                        ins.setStage(_this3.stage);\n                    }\n                }\n\n                if (ins) {\n                    _this3.options && ins.setOptions(_this3.options);\n                    ins.update(_this3.getLegendData(val), _jsonUtilsx2.default.clone(_this3.data));\n\n                    if (!_this3.ins[key]) {\n                        _this3.ins[key] = ins;\n                    }\n                }\n            });\n        }\n    }, {\n        key: 'getLegendData',\n        value: function getLegendData(data) {\n            data = _jsonUtilsx2.default.clone(data);\n\n            var tmp = [];\n\n            if (this.legend && this.legend.group && this.legend.group.length) {\n                //console.log( 'getLegendData', this.legend.group, 111111111 );\n                this.legend.group.map(function (item, key) {\n                    if (!item.disabled) {\n                        tmp.push(data.data[key]);\n                    }\n                });\n                data.data = tmp;\n            }\n\n            return data;\n        }\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            _get(VisChart.prototype.__proto__ || Object.getPrototypeOf(VisChart.prototype), 'destroy', this).call(this);\n\n            //this.clearUpdate();\n            this.ins.map(function (item) {\n                item.destroy();\n            });\n            this.legend && this.legend.destroy();\n\n            this.stage && this.stage.destroy();\n            this.stage = null;\n        }\n    }, {\n        key: 'clearUpdate',\n        value: function clearUpdate() {\n            this.legend && !this.ignoreLegend && this.legend.destroy();\n        }\n    }]);\n\n    return VisChart;\n}(_vischartbase2.default);\n\nexports.default = VisChart;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _konvabase = require('../common/konvabase.js');\n\nvar _konvabase2 = _interopRequireDefault(_konvabase);\n\nvar _geometry = require('../../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _pointat = require('../../common/pointat.js');\n\nvar _pointat2 = _interopRequireDefault(_pointat);\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _utils = require('../../common/utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nvar _iconcircle = require('../icon/iconcircle.js');\n\nvar _iconcircle2 = _interopRequireDefault(_iconcircle);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Dount = function (_VisChartBase) {\n    _inherits(Dount, _VisChartBase);\n\n    function Dount(box, width, height) {\n        _classCallCheck(this, Dount);\n\n        var _this = _possibleConstructorReturn(this, (Dount.__proto__ || Object.getPrototypeOf(Dount)).call(this, box, width, height));\n\n        _this.name = 'Dount_' + Date.now();\n\n        _this._setSize(width, height);\n        return _this;\n    }\n\n    _createClass(Dount, [{\n        key: '_setSize',\n        value: function _setSize(width, height) {\n            _get(Dount.prototype.__proto__ || Object.getPrototypeOf(Dount.prototype), '_setSize', this).call(this, width, height);\n\n            this.outPercent = .53;\n            this.inPercent = .37;\n\n            this.circleLinePercent = .34;\n            this.circlePercent = .31;\n            this.circleLineRotation = 0;\n            this.circleLineRotationStep = 4;\n\n            this.animationStep = 8;\n            this.angleStep = 5;\n\n            this.textHeight = 26;\n            this.lineOffset = 50;\n\n            this.path = [];\n            this.line = [];\n\n            this.textOffset = 4;\n\n            this.lineColor = '#24a3ea';\n\n            this.lineRange = {\n                \"1\": [],\n                \"2\": [],\n                \"4\": [],\n                \"8\": []\n            };\n\n            this.lineWidth = 40;\n            this.lineSpace = 10;\n            this.lineAngle = 35;\n            this.lineHeight = 21;\n            this.lineCurveLength = 30;\n\n            this.loopSort = [4, 8, 1, 2];\n\n            this.clearList = [];\n\n            this.init();\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            this.calcLayoutPosition();\n\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(data, allData) {\n            _get(Dount.prototype.__proto__ || Object.getPrototypeOf(Dount.prototype), 'update', this).call(this, data, allData);\n\n            this.data = data;\n            this.allData = allData;\n\n            this.countAngle = 0;\n            this.isDone = 0;\n            this.lineLengthCount = 0;\n\n            if (!_jsonUtilsx2.default.jsonInData(this.data, 'data')) return;\n\n            this.clearItems();\n            this.calcDataPosition();\n            this.initDataLayout();\n\n            //console.log( 'dount update', this.data, this, utils );\n\n            this.animation();\n            !this.inited && this.animationCircleLine();\n\n            this.inited = 1;\n\n            return this;\n        }\n    }, {\n        key: 'reset',\n        value: function reset() {\n            this.path.map(function (val) {\n                val.pathData = [];\n            });\n        }\n    }, {\n        key: 'animationCircleLine',\n        value: function animationCircleLine() {\n            var _this2 = this;\n\n            if (this.isDestroy) return;\n            if (!this.circleLine) return;\n\n            if (!this.isAnimation()) {\n                return;\n            }\n\n            this.circleLineRotation += this.circleLineRotationStep;\n\n            this.circleLine.rotation(this.circleLineRotation);\n            this.stage.add(this.layoutLayer);\n\n            window.requestAnimationFrame(function () {\n                _this2.animationCircleLine();\n            });\n        }\n    }, {\n        key: 'animation',\n        value: function animation() {\n            var _this3 = this;\n\n            if (this.isDestroy) return;\n            if (this.isDone) return;\n\n            var tmp = void 0,\n                tmppoint = void 0,\n                step = this.angleStep;\n\n            this.countAngle += this.animationStep;\n\n            if (!this.isSeriesAnimation()) {\n                this.countAngle = this.totalAngle;\n            }\n\n            if (this.countAngle >= this.totalAngle || !this.isAnimation()) {\n                this.countAngle = this.totalAngle;\n                this.isDone = 1;\n            }\n\n            this.reset();\n\n            for (var i = this.path.length - 1; i >= 0; i--) {\n                //for( let i = 0; i < this.path.length; i++ ){\n                //let i = 2;\n                var item = this.path[i];\n\n                //console.log( i, item, item.itemData.endAngle, item.itemData.value );\n\n                var tmpAngle = this.countAngle;\n\n                if (tmpAngle >= item.itemData.endAngle) {\n                    tmpAngle = item.itemData.endAngle;\n                }\n\n                if (tmpAngle < item.itemData.startAngle) continue;\n\n                item.arc.angle(tmpAngle);\n            }\n            this.stage.add(this.arcLayer);\n\n            window.requestAnimationFrame(function () {\n                _this3.animation();\n            });\n\n            if (this.isDone) {\n                window.requestAnimationFrame(function () {\n                    _this3.animationLine();\n                });\n            }\n        }\n    }, {\n        key: 'drawCircle',\n        value: function drawCircle() {\n            this.circleRadius = Math.ceil(this.circlePercent * this.min / 2);\n\n            this.circle = new _konva2.default.Circle({\n                x: this.fixCx(),\n                y: this.fixCy(),\n                radius: this.circleRadius,\n                stroke: this.lineColor,\n                strokeWidth: 2.5,\n                fill: '#ffffff00'\n            });\n            this.addDestroy(this.circle);\n            this.layoutLayer.add(this.circle);\n        }\n    }, {\n        key: 'drawCircleLine',\n        value: function drawCircleLine() {\n            this.circleLineRadius = Math.ceil(this.circleLinePercent * this.min / 2);\n\n            var points = [];\n            points.push('M');\n            for (var i = 90; i <= 180; i++) {\n                var tmp = geometry.distanceAngleToPoint(this.circleLineRadius, i);\n                points.push([tmp.x, tmp.y].join(',') + ',');\n                if (i == 90) {\n                    points.push('L');\n                }\n            }\n            points.push('M');\n            for (var _i = 270; _i <= 360; _i++) {\n                var _tmp = geometry.distanceAngleToPoint(this.circleLineRadius, _i);\n                points.push([_tmp.x, _tmp.y].join(',') + ',');\n                if (_i == 270) {\n                    points.push('L');\n                }\n            }\n\n            this.circleLine = new _konva2.default.Path({\n                data: points.join(''),\n                x: this.fixCx(),\n                y: this.fixCy(),\n                stroke: this.lineColor,\n                strokeWidth: 2.5,\n                fill: '#ffffff00'\n            });\n            this.addDestroy(this.circleLine);\n\n            this.layoutLayer.add(this.circleLine);\n        }\n    }, {\n        key: 'initDataLayout',\n        value: function initDataLayout() {\n\n            if (!this.inited) {\n                this.layoutLayer = new _konva2.default.Layer();\n                this.addDestroy(this.layoutLayer);\n\n                this.drawCircle();\n                this.drawCircleLine();\n\n                this.stage.add(this.layoutLayer);\n\n                this.arcLayer = new _konva2.default.Layer();\n                this.addDestroy(this.arcLayer);\n            }\n\n            this.path = [];\n            this.line = [];\n\n            for (var ii = this.data.data.length - 1; ii >= 0; ii--) {\n                var val = this.data.data[ii],\n                    key = ii;\n                var pathindex = this.data.data.length - 1 - ii;\n\n                var color = this.colors[key % this.colors.length];\n\n                if (_jsonUtilsx2.default.jsonInData(val, 'itemStyle.color')) {\n                    //path.fill( val.itemStyle.color );\n                    color = val.itemStyle.color;\n                }\n                //console.log(  ii, pathindex );\n\n                //console.log( this.path[pathindex], pathindex, this.path );\n\n                var params = {\n                    x: this.fixCx(),\n                    y: this.fixCy(),\n                    innerRadius: this.inRadius,\n                    outerRadius: this.outRadius,\n                    angle: this.countAngle,\n                    fill: color,\n                    stroke: color,\n                    strokeWidth: 0\n                    //, rotation: this.arcOffset\n                };\n                var arc = new _konva2.default.Arc(params);\n                this.clearList.push(arc);\n\n                var line = new _konva2.default.Line({\n                    x: this.fixCx(),\n                    y: this.fixCy(),\n                    points: [0, 0, 0, 0],\n                    stroke: '#ffffff',\n                    strokeWidth: 2\n                });\n                this.line.push(line);\n                this.clearList.push(line);\n\n                var tmp = {\n                    arc: arc,\n                    pathData: [],\n                    itemData: val,\n                    line: line\n                };\n\n                this.path.push(tmp);\n\n                this.arcLayer.add(arc);\n                this.arcLayer.add(line);\n            };\n\n            this.stage.add(this.arcLayer);\n\n            return this;\n        }\n    }, {\n        key: 'animationLine',\n        value: function animationLine() {\n            var _this4 = this;\n\n            if (this.lineLengthCount >= this.lineLength) {\n                return;\n            }\n            this.lineLengthCount = this.lineLength;\n\n            this.lineLengthCount += this.lineLengthStep;\n\n            if (this.lineLengthCount >= this.lineLength || !this.isAnimation()) {\n                this.lineLengthCount = this.lineLength;\n            }\n            for (var i = 0; i < this.path.length; i++) {\n                var path = this.path[i];\n                var layer = this.arcLayer;\n\n                var lineEnd = path.itemData.lineEnd;\n                var lineExpend = path.itemData.lineExpend;\n\n                var line = this.line[i];\n                line.points([path.itemData.lineStart.x, path.itemData.lineStart.y, lineEnd.x, lineEnd.y, lineExpend.x, lineExpend.y]);\n\n                if (this.lineLengthCount >= this.lineLength) {\n                    this.addText(path, layer);\n                    this.addIcon(path, layer);\n                } else {\n                    window.requestAnimationFrame(function () {\n                        _this4.animationLine();\n                    });\n                }\n\n                this.stage.add(layer);\n            }\n        }\n    }, {\n        key: 'addIcon',\n        value: function addIcon(path, layer) {\n            if (!path.lineicon) {\n                path.lineicon = new _iconcircle2.default(this.box, this.fixWidth(), this.fixHeight());\n                this.clearList.push(path.lineicon);\n            }\n            //console.log( path );\n            var icon = path.lineicon;\n            icon.setOptions({\n                stage: this.stage,\n                layer: layer,\n                cx: this.fixCx(),\n                cy: this.fixCy()\n            });\n            icon.update(path.itemData.lineExpend);\n        }\n    }, {\n        key: 'addText',\n        value: function addText(path, layer) {\n            if (!path.text) {\n                var tmp = path.text = new _konva2.default.Text({\n                    x: 0,\n                    y: 0,\n                    text: path.itemData.percent + '%',\n                    fill: '#a3a7f3',\n                    fontFamily: 'MicrosoftYaHei',\n                    fontSize: 16,\n                    fontStyle: 'italic'\n                });\n                this.clearList.push(tmp);\n            }\n            var text = path.text;\n\n            var textPoint = path.itemData.textPoint,\n                angleDirect = path.itemData.pointDirection.autoAngle();\n\n            textPoint = _jsonUtilsx2.default.clone(path.itemData.lineEnd);\n            textPoint.y -= text.textHeight + 1;\n\n            switch (angleDirect) {\n                case 1:\n                    {\n                        textPoint.x -= text.textWidth;\n                        break;\n                    }\n                case 2:\n                    {\n                        break;\n                    }\n                case 4:\n                    {\n                        break;\n                    }\n                case 8:\n                    {\n                        textPoint.x -= text.textWidth;\n                        break;\n                    }\n            }\n\n            var textX = this.fixCx() + textPoint.x,\n                textY = this.fixCy() + textPoint.y,\n                direct = path.itemData.pointDirection.auto();\n\n            text.x(textX);\n            text.y(textY);\n            layer.add(text);\n        }\n    }, {\n        key: 'calcLayoutPosition',\n        value: function calcLayoutPosition() {\n            //console.log( 'calcLayoutPosition', Date.now() );\n\n            this.outRadius = Math.ceil(this.outPercent * this.min / 2);\n            this.inRadius = Math.ceil(this.inPercent * this.min / 2);\n\n            this.lineLength = (Math.min(this.fixWidth(), this.fixHeight()) - this.outRadius * 2) / 2 - this.lineOffset;\n            this.lineLengthCount = 1;\n            this.lineLengthStep = .5;\n\n            this.lineLeft = this.fixCx() - this.outRadius - this.lineSpace;\n            this.lineRight = this.fixCx() + this.outRadius + this.lineSpace;\n\n            return this;\n        }\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            this.clearItems();\n            _get(Dount.prototype.__proto__ || Object.getPrototypeOf(Dount.prototype), 'destroy', this).call(this);\n        }\n    }, {\n        key: 'clearItems',\n        value: function clearItems() {\n            this.clearList.map(function (item) {\n                item.remove();\n                item.destroy();\n            });\n            this.clearList = [];\n        }\n    }, {\n        key: 'calcDataPosition',\n        value: function calcDataPosition() {\n            var _this5 = this;\n\n            if (!this.data) return;\n\n            var total = 0,\n                tmp = 0;\n\n            this.data.data.map(function (val) {\n                //console.log( val );\n                total += val.value;\n            });\n            this.total = total;\n\n            this.data.data.map(function (val) {\n                val._percent = utils.parseFinance(val.value / total);\n                tmp = utils.parseFinance(tmp + val._percent);\n                val._totalPercent = tmp;\n\n                val.percent = parseInt(val._percent * 100);\n\n                val.endAngle = _this5.totalAngle * val._totalPercent;\n            });\n\n            //修正浮点数精确度\n            if (this.data.data.length) {\n                var item = this.data.data[this.data.data.length - 1];\n                tmp = tmp - item._percent;\n\n                item._percent = 1 - tmp;\n                item.percent = parseInt(item._percent * 100);\n                item._totalPercent = 1;\n                item.endAngle = this.totalAngle;\n            }\n\n            this.lineRange = {\n                \"1\": [],\n                \"2\": [],\n                \"4\": [],\n                \"8\": []\n                //计算开始角度, 计算指示线的2端\n            };this.data.data.map(function (val, key) {\n                if (!key) {\n                    val.startAngle = 0;\n                } else {\n                    val.startAngle = _this5.data.data[key - 1].endAngle;\n                }\n\n                val.midAngle = val.startAngle + (val.endAngle - val.startAngle) / 2;\n\n                val.lineStart = geometry.distanceAngleToPoint(_this5.outRadius, val.midAngle);\n                val.lineEnd = geometry.distanceAngleToPoint(_this5.outRadius + _this5.lineLength, val.midAngle);\n\n                val.textPoint = geometry.distanceAngleToPoint(_this5.outRadius + _this5.lineLength, val.midAngle);\n\n                val.pointDirection = new _pointat2.default(_this5.fixWidth(), _this5.fixHeight(), geometry.pointPlus(val.textPoint, _this5.cpoint));\n                var lineAngle = val.pointDirection.autoAngle();\n                val.lineExpend = _jsonUtilsx2.default.clone(val.lineEnd);\n\n                switch (lineAngle) {\n                    case 1:\n                    case 8:\n                        {\n                            //val.lineEnd.x = this.lineLeft;\n                            val.lineEnd.x = -(_this5.outRadius + _this5.lineSpace);\n\n                            var _tmp2 = geometry.pointDistance(val.lineStart, val.lineEnd);\n                            if (_tmp2 > _this5.lineCurveLength) {\n                                var tmpAngle = geometry.pointAngle(val.lineStart, val.lineEnd),\n                                    tmpPoint = geometry.distanceAngleToPoint(_this5.lineCurveLength, tmpAngle);\n                                tmpPoint = geometry.pointPlus(tmpPoint, val.lineStart);\n\n                                val.lineEnd.x = tmpPoint.x;\n                            }\n\n                            val.lineExpend.x = val.lineEnd.x - _this5.lineWidth;\n\n                            break;\n                        }\n                    default:\n                        {\n                            val.lineEnd.x = _this5.outRadius + _this5.lineSpace;\n                            var _tmp3 = geometry.pointDistance(val.lineStart, val.lineEnd);\n                            if (_tmp3 > _this5.lineCurveLength) {\n                                var _tmpAngle = geometry.pointAngle(val.lineStart, val.lineEnd),\n                                    _tmpPoint = geometry.distanceAngleToPoint(_this5.lineCurveLength, _tmpAngle);\n                                _tmpPoint = geometry.pointPlus(_tmpPoint, val.lineStart);\n\n                                val.lineEnd.x = _tmpPoint.x;\n                            }\n\n                            val.lineExpend.x = val.lineEnd.x + _this5.lineWidth;\n                            break;\n                        }\n                }\n\n                _this5.lineRange[lineAngle].push(val);\n            });\n\n            this.loopSort.map(function (key) {\n                var item = _this5.lineRange[key];\n                if (!(item && item.length && item.length > 1)) return;\n                var needFix = void 0;\n                for (var i = 1; i < item.length; i++) {\n                    var pre = item[i - 1],\n                        cur = item[i];\n                    if (Math.abs(cur.lineEnd.y - pre.lineEnd.y) < _this5.lineHeight) {\n                        needFix = 1;\n                        break;\n                    }\n                }\n                switch (key) {\n                    case 1:\n                        {\n                            var tmpY = item[0].lineEnd.y;\n                            //console.log( item );\n                            for (var _i2 = item.length - 2; _i2 >= 0; _i2--) {\n                                var _pre = item[_i2 + 1],\n                                    _cur = item[_i2];\n                                if (Math.abs(_pre.lineEnd.y - _cur.lineEnd.y) < _this5.lineHeight || _cur.lineEnd.y <= _pre.lineEnd.y) {\n                                    tmpY = _pre.lineEnd.y + _this5.lineHeight;\n                                    _cur.lineEnd.y = tmpY;\n\n                                    /*\n                                    if( cur.lineEnd.y < cur.lineStart.y ){\n                                        //tmpY = cur.lineStart.y + this.lineHeight;\n                                        //cur.lineEnd.y = tmpY;\n                                    }\n                                    */\n                                    _cur.lineExpend.y = tmpY;\n                                }\n                            }\n                            break;\n                        }\n                    case 2:\n                        {\n                            var _tmpY = item[0].lineEnd.y;\n                            for (var _i3 = 1; _i3 < item.length; _i3++) {\n                                var _pre2 = item[_i3 - 1],\n                                    _cur2 = item[_i3],\n                                    zero = item[0];\n\n                                if (Math.abs(_pre2.lineEnd.y + _this5.fixCy()) < _this5.lineHeight) {\n                                    _pre2.lineExpend.y = _pre2.lineEnd.y = _pre2.lineExpend.y + _this5.lineHeight;\n                                }\n                                if (Math.abs(_pre2.lineEnd.y - _cur2.lineEnd.y) < _this5.lineHeight || _cur2.lineEnd.y <= _pre2.lineEnd.y) {\n\n                                    _tmpY = _pre2.lineEnd.y + _this5.lineHeight;\n                                    _cur2.lineEnd.y = _tmpY;\n\n                                    /*\n                                    if( cur.lineEnd.y < cur.lineStart.y ){\n                                        //tmpY = cur.lineStart.y + this.lineHeight;\n                                        //cur.lineEnd.y = tmpY;\n                                    }\n                                    */\n                                    _cur2.lineExpend.y = _tmpY;\n                                }\n                            }\n\n                            break;\n                        }\n                    case 4:\n                        {\n                            var _tmpY2 = 0;\n                            for (var _i4 = item.length - 2; _i4 >= 0; _i4--) {\n                                var _pre3 = item[_i4 + 1],\n                                    _cur3 = item[_i4];\n                                if (Math.abs(_pre3.lineEnd.y - _cur3.lineEnd.y) < _this5.lineHeight || _cur3.lineEnd.y >= _pre3.lineEnd.y) {\n                                    //console.log( pre.lineEnd.y, cur.lineEnd.y );\n                                    _tmpY2 = _pre3.lineEnd.y - _this5.lineHeight;\n                                    _cur3.lineEnd.y = _tmpY2;\n                                    _cur3.lineExpend.y = _tmpY2;\n                                }\n                            }\n                            break;\n                        }\n                    case 8:\n                        {\n                            var _tmpY3 = 0;\n                            for (var _i5 = 1; _i5 < item.length; _i5++) {\n                                var _pre4 = item[_i5 - 1],\n                                    _cur4 = item[_i5];\n                                if (Math.abs(_pre4.lineEnd.y - _cur4.lineEnd.y) < _this5.lineHeight || _cur4.lineEnd.y >= _pre4.lineEnd.y) {\n                                    _tmpY3 = _pre4.lineEnd.y - _this5.lineHeight;\n                                    _cur4.lineEnd.y = _tmpY3;\n\n                                    /*\n                                    if( cur.lineEnd.y < cur.lineStart.y ){\n                                        //cur.lineEnd.y = cur.lineStart.y + this.lineHeight;\n                                    }\n                                    */\n                                    _cur4.lineExpend.y = _cur4.lineEnd.y;\n                                }\n                            }\n\n                            break;\n                        }\n                }\n            });\n        }\n    }]);\n\n    return Dount;\n}(_konvabase2.default);\n\nexports.default = Dount;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _konvabase = require('../common/konvabase.js');\n\nvar _konvabase2 = _interopRequireDefault(_konvabase);\n\nvar _geometry = require('../../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _utils = require('../../common/utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar IconCircle = function (_VisChartBase) {\n    _inherits(IconCircle, _VisChartBase);\n\n    function IconCircle(box, width, height) {\n        _classCallCheck(this, IconCircle);\n\n        var _this = _possibleConstructorReturn(this, (IconCircle.__proto__ || Object.getPrototypeOf(IconCircle)).call(this, box, width, height));\n\n        _this.name = 'IconRound ' + Date.now();\n\n        _this.outRadius = 6;\n        _this.inRadius = 2.5;\n\n        _this.color = '#ffffff';\n\n        _this.max = 1.1;\n        _this.min = 0.8;\n\n        _this.step = .006;\n        _this.cur = 1;\n\n        _this.isplus = 1;\n\n        _this.init();\n        return _this;\n    }\n\n    _createClass(IconCircle, [{\n        key: 'init',\n        value: function init() {\n            return this;\n        }\n    }, {\n        key: 'opacity',\n        value: function opacity(num) {\n            this.group && this.group.opacity(num);\n\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(point) {\n            this.point = point;\n\n            if (!this.inited) {\n                this.group = new _konva2.default.Group({\n                    x: this.point.x + this.cx,\n                    y: this.point.y + this.cy,\n                    width: this.outRadius * 2,\n                    height: this.outRadius * 2\n                });\n                this.addDestroy(this.group);\n\n                this.circle = new _konva2.default.Circle({\n                    radius: this.inRadius,\n                    fill: this.color,\n                    stroke: this.color,\n                    x: 0,\n                    y: 0\n                });\n                this.addDestroy(this.circle);\n\n                this.outcircle = new _konva2.default.Circle({\n                    radius: this.outRadius,\n                    fill: '#ffffff00',\n                    stroke: this.color,\n                    strokeWidth: 1,\n                    x: 0,\n                    y: 0\n                });\n                this.addDestroy(this.outcircle);\n            } else {\n                this.group.x(this.point.x + this.cx);\n                this.group.y(this.point.y + this.cy);\n            }\n\n            this.group.add(this.circle);\n            this.group.scale({ x: this.cur, y: this.cur });\n            this.layer.add(this.group);\n\n            this.inited = 1;\n            //window.requestAnimationFrame( ()=>{ this.animation() } );\n        }\n    }, {\n        key: 'reset',\n        value: function reset() {}\n    }, {\n        key: 'animation',\n        value: function animation() {\n            var _this2 = this;\n\n            if (this.plus) {\n                this.cur = this.cur + this.step;\n\n                if (this.cur > this.max) {\n                    this.cur = this.max;\n                    this.plus = 0;\n                }\n            } else {\n                this.cur = this.cur - this.step;\n                if (this.cur < this.min) {\n                    this.cur = this.min;\n                    this.plus = 1;\n                }\n            }\n\n            this.group.scale({ x: this.cur, y: this.cur });\n\n            this.stage.add(this.layer);\n\n            window.requestAnimationFrame(function () {\n                _this2.animation();\n            });\n        }\n    }, {\n        key: 'initDataLayout',\n        value: function initDataLayout() {}\n    }, {\n        key: 'calcDataPosition',\n        value: function calcDataPosition() {}\n    }, {\n        key: 'animationLine',\n        value: function animationLine() {}\n    }, {\n        key: 'calcLayoutPosition',\n        value: function calcLayoutPosition() {}\n    }]);\n\n    return IconCircle;\n}(_konvabase2.default);\n\nexports.default = IconCircle;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _konvabase = require('../common/konvabase.js');\n\nvar _konvabase2 = _interopRequireDefault(_konvabase);\n\nvar _geometry = require('../../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _pointat = require('../../common/pointat.js');\n\nvar _pointat2 = _interopRequireDefault(_pointat);\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _utils = require('../../common/utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nvar _roundstatetext = require('../icon/roundstatetext.js');\n\nvar _roundstatetext2 = _interopRequireDefault(_roundstatetext);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Gauge = function (_VisChartBase) {\n    _inherits(Gauge, _VisChartBase);\n\n    function Gauge(box, width, height) {\n        _classCallCheck(this, Gauge);\n\n        var _this = _possibleConstructorReturn(this, (Gauge.__proto__ || Object.getPrototypeOf(Gauge)).call(this, box, width, height));\n\n        _this.name = 'Gauge' + Date.now();\n\n        _this._setSize(width, height);\n        return _this;\n    }\n\n    _createClass(Gauge, [{\n        key: '_setSize',\n        value: function _setSize(width, height) {\n            _get(Gauge.prototype.__proto__ || Object.getPrototypeOf(Gauge.prototype), '_setSize', this).call(this, width, height);\n\n            this.totalPostfix = '次/时';\n\n            this.offsetCy = 15;\n\n            this.cy += this.offsetCy;\n\n            this.curRate = 0;\n            this.totalNum = 0;\n            this.totalNumStep = 5;\n\n            this.animationStep = 40 * 1;\n\n            this.roundRadiusPercent = .085;\n\n            this.lineColor = '#596ea7';\n\n            this.circleLinePercent = .26;\n            this.circlePercent = .28;\n\n            this.circleLineRotation = 0;\n            this.circleLineRotationStep = 4;\n\n            this.arcLinePercent = .39 / 2;\n\n            this.arcOutPercent = .38 / 2;\n            this.arcInPercent = .305 / 2;\n\n            this.arcLabelLength = 6;\n            this.arcTextLength = 20;\n\n            this.arcAngle = 280;\n            this.part = 22;\n            this.arcTotal = 1100;\n\n            this.textOffset = 0;\n\n            this.arcOffset = 90 + (360 - this.arcAngle) / 2;\n            this.arcOffsetPad = -5;\n            this.partLabel = this.part / 2;\n            this.partAngle = this.arcAngle / this.part;\n            this.partNum = this.arcTotal / this.part;\n\n            this.textOffsetX = -1;\n            this.textOffsetY = -8;\n            this.textLineLength = 6;\n\n            this.textRectWidthPercent = .5;\n            this.textRectHeightPercent = .11;\n\n            this.textRoundPercent = .38;\n            this.textRoundOffsetAngle = 160;\n            this.textRoundPlusAngle = 110;\n            this.textRoundMaxAngle = this.textRoundOffsetAngle + this.textRoundPlusAngle * 2;\n            this.roundStatusRaidus = 30;\n            this.textRoundAngle = [{\n                angle: this.textRoundOffsetAngle,\n                text: '低',\n                point: {},\n                min: 0,\n                max: 100,\n                radius: this.roundStatusRaidus,\n                lineColor: this.lineColor\n            }, {\n                angle: this.textRoundOffsetAngle + this.textRoundPlusAngle,\n                text: '中',\n                point: {},\n                min: 101,\n                max: 500,\n                radius: this.roundStatusRaidus,\n                lineColor: this.lineColor\n            }, {\n                angle: this.textRoundOffsetAngle + this.textRoundPlusAngle * 2,\n                text: '高',\n                point: {},\n                min: 501,\n                max: Math.pow(10, 10),\n                radius: this.roundStatusRaidus,\n                lineColor: this.lineColor\n            }];\n\n            this.init();\n        }\n    }, {\n        key: 'getAttackRateAngle',\n        value: function getAttackRateAngle() {\n            var r = 0;\n\n            r = this.arcOffset + this.arcAngle * this.getAttackRatePercent();\n\n            return r;\n        }\n    }, {\n        key: 'getAttackRatePercent',\n        value: function getAttackRatePercent() {\n            var r = 0,\n                tmp = void 0;\n            if (this.curRate) {\n                tmp = this.curRate;\n                if (tmp > this.arcTotal) {\n                    tmp = this.arcTotal;\n                }\n\n                r = tmp / this.arcTotal;\n            }\n            return r;\n        }\n    }, {\n        key: 'getAttackText',\n        value: function getAttackText() {\n            var _this2 = this;\n\n            var text = '低';\n\n            if (this.curRate) {\n                this.textRoundAngle.map(function (val) {\n                    if (_this2.curRate >= val.min && _this2.curRate <= val.max) {\n                        text = val.text;\n                    }\n                });\n            }\n\n            return text + '\\u9891\\n\\u653B\\u51FB';\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            var _this3 = this;\n\n            this.textRoundRadius = this.width * this.textRoundPercent * this.sizeRate;\n\n            this.roundRadius = this.width * this.roundRadiusPercent * this.sizeRate;\n\n            this.arcInRadius = this.width * this.arcInPercent * this.sizeRate;\n            this.arcOutRadius = this.width * this.arcOutPercent * this.sizeRate;\n\n            this.arcLineRaidus = Math.ceil(this.arcLinePercent * this.max) * this.sizeRate;\n\n            this.textWidth = this.textRectWidthPercent * this.width;\n            this.textHeight = 38 * this.sizeRate;\n            this.textX = this.cx - this.textWidth / 2;\n            this.textY = this.cy + this.arcLineRaidus + this.arcTextLength / 2 + 2;\n\n            this.textRoundAngle.map(function (val, key) {\n                var point = geometry.distanceAngleToPoint(_this3.textRoundRadius, val.angle);\n                val.point = geometry.pointPlus(point, _this3.cpoint);\n                val.point.y += _this3.offsetCy;\n            });\n\n            this.arcPartLineAr = [];\n            this.arcOutlinePartAr = [];\n            this.textAr = [];\n            for (var i = 0; i <= this.part; i++) {\n                var start = void 0,\n                    end = void 0,\n                    angle = void 0;\n                angle = i * this.partAngle + this.arcOffset;\n\n                if (i && i < this.part) {\n                    start = geometry.distanceAngleToPoint(this.arcInRadius, angle);\n                    end = geometry.distanceAngleToPoint(this.arcOutRadius, angle);\n\n                    this.arcPartLineAr.push('M');\n                    this.arcPartLineAr.push([start.x, start.y].join(','));\n                    this.arcPartLineAr.push('L');\n                    this.arcPartLineAr.push([end.x, end.y].join(','));\n                }\n\n                start = geometry.distanceAngleToPoint(this.arcLineRaidus, angle);\n                end = geometry.distanceAngleToPoint(this.arcLineRaidus + this.arcLabelLength, angle);\n\n                this.arcOutlinePartAr.push('M');\n                this.arcOutlinePartAr.push([start.x, start.y].join(','));\n                this.arcOutlinePartAr.push('L');\n                this.arcOutlinePartAr.push([end.x, end.y].join(','));\n\n                if (!(i * this.partNum % 100) || i === 0) {\n                    var angleOffset = 8,\n                        lengthOffset = 0;\n\n                    if (i === 0) {\n                        angleOffset = 1;\n                    }\n\n                    if (i >= 19) {\n                        angleOffset = 14;\n                    }\n                    if (i >= 21) {\n                        angleOffset = 18;\n                    }\n                    var text = {\n                        text: i * this.partNum,\n                        angle: angle - angleOffset,\n                        point: geometry.distanceAngleToPoint(this.arcLineRaidus + this.arcTextLength + lengthOffset, angle - angleOffset)\n                    };\n                    text.textPoint = new _pointat2.default(this.width, this.height, geometry.pointPlus(text.point, this.cpoint));\n\n                    this.textAr.push(text);\n                }\n            }\n        }\n    }, {\n        key: 'initRoundText',\n        value: function initRoundText() {\n            var _this4 = this;\n\n            this.textRoundAngle.map(function (val) {\n\n                if (!val.ins) {\n                    val.ins = new _roundstatetext2.default(_this4.box, _this4.width, _this4.height);\n                    val.ins.setOptions(Object.assign(val, {\n                        stage: _this4.stage,\n                        layer: _this4.layoutLayer,\n                        data: _this4.data,\n                        allData: _this4.allData\n                    }));\n                    val.ins.init();\n                }\n                val.ins.update(_this4.curRate);\n            });\n        }\n        /*\n        {\n        \"series\": [\n            {\n                \"type\": \"gauge\",\n                \"data\": [\n                    {\n                        \"value\": 200,\n                        \"total\": 134567,\n                        \"name\": \"完成率\"\n                    }\n                ]\n            }\n        ]\n        }\n        */\n\n    }, {\n        key: 'update',\n        value: function update(data, allData) {\n            var _this5 = this;\n\n            this.stage.removeChildren();\n            _get(Gauge.prototype.__proto__ || Object.getPrototypeOf(Gauge.prototype), 'update', this).call(this, data, allData);\n\n            //console.log( 123, data );\n\n            if (data && data.data && data.data.length) {\n                data.data.map(function (val) {\n                    _this5.curRate = val.value;\n                    _this5.totalNum = val.total;\n                });\n            }\n\n            /*\n            this.curRate = 600;\n            this.totalNum = 234567;\n            */\n\n            this.initDataLayout();\n\n            //console.log( 'gauge update', this.getAttackRateAngle() )\n            this.angle = this.arcOffset + this.arcOffsetPad;\n            this.animationAngle = this.getAttackRateAngle() + this.arcOffsetPad;\n            //console.log( this.angle, this.animationAngle );\n\n            this.updateWedge();\n\n            if (this.curRate) {\n                this.rateStep = Math.floor(this.curRate / (this.animationStep * 2));\n                !this.inited && this.animation();\n            }\n            if (this.totalNum) {\n                this.totalNumStep = Math.floor(this.totalNum / this.animationStep);\n                this.totalNumCount = 0;\n                this.animationText();\n            }\n\n            !this.inited && this.animationCircleLine();\n\n            this.inited = 1;\n        }\n    }, {\n        key: 'animationCircleLine',\n        value: function animationCircleLine() {\n            var _this6 = this;\n\n            //console.log( 'animationCircleLine' );\n            if (this.isDestroy) return;\n            if (!this.circleLine) return;\n\n            if (!this.isAnimation()) {\n                return;\n            }\n\n            this.circleLineRotation += this.circleLineRotationStep;\n\n            this.circleLine.rotation(this.circleLineRotation);\n            this.stage.add(this.layoutLayer);\n\n            window.requestAnimationFrame(function () {\n                _this6.animationCircleLine();\n            });\n        }\n    }, {\n        key: 'animationText',\n        value: function animationText() {\n            var _this7 = this;\n\n            if (this.isDestroy) return;\n\n            if (this.totalNumCount >= this.totalNum) return;\n            this.totalNumCount += this.totalNumStep;\n\n            if (this.totalNumCount >= this.totalNum || !this.isAnimation()) {\n                this.totalNumCount = this.totalNum;\n            };\n\n            this.totalText.text(this.totalNumCount);\n            this.totalTextPostfix.x(this.totalText.textWidth + 5);\n\n            this.totalTextGroup.x((this.width - this.totalTextPostfix.textWidth - this.totalText.textWidth - 5) / 2);\n\n            this.layoutLayer.add(this.totalTextGroup);\n\n            window.requestAnimationFrame(function () {\n                _this7.animationText();\n            });\n        }\n    }, {\n        key: 'drawText',\n        value: function drawText() {\n\n            this.totalTextGroup = new _konva2.default.Group();\n            this.addDestroy(this.totalTextGroup);\n\n            var params = {\n                text: 0 + ''\n                /*\n                , x: this.cx\n                , y: this.textY\n                */\n                , fontSize: 30 * this.sizeRate,\n                fontFamily: 'Agency FB',\n                fill: '#ffffff',\n                fontStyle: 'italic',\n                letterSpacing: 1.5\n            },\n                tmp = _jsonUtilsx2.default.clone(params);\n            tmp.text = this.totalNum;\n\n            this.totalText = new _konva2.default.Text(params);\n            this.addDestroy(this.totalText);\n\n            var params1 = {\n                text: this.totalPostfix,\n                x: this.totalText.textWidth + 5,\n                fontSize: 12 * this.sizeRate,\n                fontFamily: 'MicrosoftYaHei',\n                fill: '#ffffff',\n                fontStyle: 'italic',\n                letterSpacing: 1.5\n            };\n\n            this.totalTextPostfix = new _konva2.default.Text(params1);\n            this.totalTextPostfix.y(this.totalText.textHeight - this.totalTextPostfix.textHeight - 4);\n            this.addDestroy(this.totalTextPostfix);\n\n            this.totalTextGroup.add(this.totalText);\n            this.totalTextGroup.add(this.totalTextPostfix);\n\n            //console.log( this.totalTextGroup, this.totalTextGroup.getClipWidth(), this.totalTextGroup.width(), this.totalTextGroup.size()  );\n\n            //this.totalTextGroup.x( this.cx - this.totalTextGroup.width / 2 );\n            this.totalTextGroup.y(this.textY);\n            this.totalTextGroup.x((this.width - this.totalTextPostfix.textWidth - this.totalText.textWidth - 5) / 2);\n\n            this.tmpTotalText = new _konva2.default.Text(tmp);\n            this.addDestroy(this.tmpTotalText);\n        }\n    }, {\n        key: 'drawTextRect',\n        value: function drawTextRect() {\n\n            var textWidth = this.tmpTotalText.textWidth + 30 + this.totalTextPostfix.textWidth + 5,\n                textX = 0,\n                textY = 0;\n\n            if (textWidth < 170) {\n                textWidth = 170;\n            }\n            textX = this.cx - textWidth / 2 + 2;;\n\n            textY = this.textY - (this.textHeight - this.totalText.textHeight) / 2;\n\n            this.textRect = new _konva2.default.Rect({\n                fill: '#596ea7',\n                stroke: '#ffffff00',\n                strokeWidth: 0,\n                opacity: .3,\n                width: textWidth,\n                height: this.textHeight,\n                x: textX,\n                y: textY\n            });\n            this.addDestroy(this.textRect);\n\n            var points = [];\n            points.push('M', [textX, textY + this.textLineLength].join(','));\n            points.push('L', [textX, textY].join(','));\n            points.push('L', [textX + this.textLineLength, textY].join(','));\n\n            points.push('M', [textX + textWidth - this.textLineLength, textY].join(','));\n            points.push('L', [textX + textWidth, textY].join(','));\n            points.push('L', [textX + textWidth, textY + this.textLineLength].join(','));\n\n            points.push('M', [textX + textWidth, textY + this.textHeight - this.textLineLength].join(','));\n            points.push('L', [textX + textWidth, textY + this.textHeight].join(','));\n            points.push('L', [textX + textWidth - this.textLineLength, textY + this.textHeight].join(','));\n\n            points.push('M', [textX + this.textLineLength, textY + this.textHeight].join(','));\n            points.push('L', [textX, textY + this.textHeight].join(','));\n            points.push('L', [textX, textY + this.textHeight - this.textLineLength].join(','));\n\n            this.textLinePath = new _konva2.default.Path({\n                data: points.join(''),\n                stroke: this.lineColor,\n                strokeWidth: 1\n            });\n            this.addDestroy(this.textLinePath);\n\n            this.layoutLayer.add(this.textLinePath);\n            this.layoutLayer.add(this.textRect);\n            //this.layoutLayer.add( this.totalText );\n            this.layoutLayer.add(this.totalTextGroup);\n        }\n    }, {\n        key: 'drawArcText',\n        value: function drawArcText() {\n            var _this8 = this;\n\n            if (!(this.textAr && this.textAr.length)) return;\n\n            this.textAr.map(function (val) {\n                var text = new _konva2.default.Text({\n                    x: val.point.x + _this8.cx,\n                    y: val.point.y + _this8.cy,\n                    text: val.text + '',\n                    fontSize: 11 * _this8.sizeRate\n                    //, rotation: val.angle\n                    , fontFamily: 'MicrosoftYaHei',\n                    fill: _this8.lineColor\n                });\n                _this8.addDestroy(text);\n                text.rotation(val.angle + 90);\n\n                _this8.layoutLayer.add(text);\n            });\n        }\n    }, {\n        key: 'drawArcLine',\n        value: function drawArcLine() {\n\n            var points = [];\n            points.push('M');\n            for (var i = this.arcOffset; i <= this.arcOffset + this.arcAngle; i += 0.5) {\n                var tmp = geometry.distanceAngleToPoint(this.arcLineRaidus, i);\n                points.push([tmp.x, tmp.y].join(',') + ',');\n                if (i == 90) {\n                    points.push('L');\n                }\n            }\n\n            this.arcLine = new _konva2.default.Path({\n                data: points.join(''),\n                x: this.cx,\n                y: this.cy,\n                stroke: this.lineColor,\n                strokeWidth: 1,\n                fill: '#ffffff00'\n            });\n            this.addDestroy(this.arcLine);\n\n            this.arcPartLine = new _konva2.default.Path({\n                data: this.arcPartLineAr.join(''),\n                x: this.cx,\n                y: this.cy,\n                stroke: '#00000088',\n                strokeWidth: 1,\n                fill: '#ffffff00'\n            });\n            this.addDestroy(this.arcPartLine);\n\n            this.arcOutlinePart = new _konva2.default.Path({\n                data: this.arcOutlinePartAr.join(''),\n                x: this.cx,\n                y: this.cy,\n                stroke: this.lineColor,\n                strokeWidth: 1,\n                fill: '#ffffff00'\n            });\n            this.addDestroy(this.arcOutlinePart);\n\n            this.layoutLayer.add(this.arcLine);\n            this.layoutLayer.add(this.arcPartLine);\n            this.layoutLayer.add(this.arcOutlinePart);\n        }\n    }, {\n        key: 'drawArc',\n        value: function drawArc() {\n\n            var params = {\n                x: this.cx,\n                y: this.cy,\n                innerRadius: this.arcInRadius,\n                outerRadius: this.arcOutRadius,\n                angle: this.arcAngle\n                //, fill: 'red'\n                , stroke: '#ffffff00',\n                strokeWidth: 0,\n                rotation: this.arcOffset,\n                fillLinearGradientStartPoint: { x: -50, y: -50 },\n                fillLinearGradientEndPoint: { x: 50, y: 50 },\n                fillLinearGradientColorStops: [0, '#ff9000', .5, '#64b185', 1, '#5a78ca']\n            };\n            this.arc = new _konva2.default.Arc(params);\n            this.addDestroy(this.arc);\n\n            this.layoutLayer.add(this.arc);\n        }\n    }, {\n        key: 'initDataLayout',\n        value: function initDataLayout() {\n\n            if (!this.inited) {\n                this.layer = new _konva2.default.Layer();\n                this.addDestroy(this.layer);\n\n                this.layoutLayer = new _konva2.default.Layer();\n                this.addDestroy(this.layoutLayer);\n\n                this.roundLine = new _konva2.default.Circle({\n                    x: this.cx,\n                    y: this.cy,\n                    radius: this.roundRadius,\n                    stroke: this.lineColor,\n                    strokeWidth: 2.5,\n                    fill: 'rgba( 0, 0, 0, .5 )'\n                });\n                this.addDestroy(this.roundLine);\n            }\n\n            if (!this.inited) {\n                this.percentText = new _konva2.default.Text({\n                    x: this.cx,\n                    y: this.cy,\n                    text: this.getAttackText(),\n                    fontSize: 18 * this.sizeRate,\n                    fontFamily: 'HuXiaoBoKuHei',\n                    fill: '#ffffff',\n                    fontStyle: 'italic'\n                });\n                this.addDestroy(this.percentText);\n            }\n            this.percentText.text(this.getAttackText());\n            this.percentText.x(this.cx - this.percentText.textWidth / 2 + this.textOffsetX);\n            this.percentText.y(this.cy - this.percentText.textHeight / 2 + this.textOffsetY);\n\n            /*\n            this.percentSymbolText = new Konva.Text( {\n                x: this.cx\n                , y: this.cy\n                , text: '%'\n                , fontSize: 17\n                , fontFamily: 'Agency FB'\n                , fill: '#c7d6ff'\n                , fontStyle: 'italic'\n            });\n            this.addDestroy( this.percentSymbolText );\n            this.percentSymbolText.x( this.percentText.attrs.x  + this.percentText.textWidth );\n            this.percentSymbolText.y( this.percentText.attrs.y  + this.percentText.textHeight -  this.percentSymbolText.textHeight - 2 );\n            */\n\n            //console.log( this.percentText );\n\n            if (!this.inited) {\n                var wedge = new _konva2.default.Wedge({\n                    x: 0,\n                    y: -3,\n                    radius: 10,\n                    angle: 20,\n                    fill: '#ff5a00',\n                    stroke: '#ff5a00',\n                    strokeWidth: 1,\n                    rotation: 90\n                });\n                this.addDestroy(wedge);\n\n                var wedge1 = new _konva2.default.Wedge({\n                    x: 0,\n                    y: -3,\n                    radius: 10,\n                    angle: 20,\n                    fill: '#973500',\n                    stroke: '#973500',\n                    strokeWidth: 1,\n                    rotation: 65\n                });\n                this.addDestroy(wedge1);\n\n                var group = new _konva2.default.Group({\n                    x: this.cx,\n                    y: this.cy\n                });\n                this.addDestroy(group);\n\n                group.add(wedge1);\n                group.add(wedge);\n\n                this.group = group;\n            }\n\n            this.initRoundText();\n\n            if (!this.inited) {\n                this.angle = this.arcOffset - 2;\n\n                this.layer.add(this.group);\n                this.layer.add(this.roundLine);\n                this.layer.add(this.percentText);\n                //this.layer.add( this.percentSymbolText );\n\n\n                this.drawCircle();\n                this.drawCircleLine();\n                this.drawArc();\n                this.drawArcLine();\n                this.drawArcText();\n                this.drawText();\n                this.drawTextRect();\n            }\n\n            this.stage.add(this.layer);\n            this.stage.add(this.layoutLayer);\n        }\n    }, {\n        key: 'animation',\n        value: function animation() {\n            var _this9 = this;\n\n            //console.log( this.angle, this.animationAngle );\n            if (this.isDestroy) return;\n            if (this.angle > this.animationAngle) return;\n\n            this.angle += this.rateStep;\n\n            if (this.angle >= this.animationAngle || !this.isAnimation()) {\n                this.angle = this.animationAngle;\n            };\n\n            this.updateWedge();\n\n            this.stage.add(this.layer);\n\n            window.requestAnimationFrame(function () {\n                _this9.animation();\n            });\n        }\n    }, {\n        key: 'updateWedge',\n        value: function updateWedge() {\n            var point = geometry.distanceAngleToPoint(this.roundRadius + 6, this.angle);\n            this.group.x(this.cx + point.x);\n            this.group.y(this.cy + point.y);\n            this.group.rotation(this.angle + 90);\n            this.group.rotation(this.angle + 90);\n            this.stage.add(this.layer);\n        }\n    }, {\n        key: 'calcDataPosition',\n        value: function calcDataPosition() {}\n    }, {\n        key: 'animationLine',\n        value: function animationLine() {}\n    }, {\n        key: 'addIcon',\n        value: function addIcon(path, layer) {}\n    }, {\n        key: 'addText',\n        value: function addText(path, layer) {}\n    }, {\n        key: 'calcLayoutPosition',\n        value: function calcLayoutPosition() {}\n    }, {\n        key: 'drawCircle',\n        value: function drawCircle() {\n            this.circleRadius = Math.ceil(this.circlePercent * this.max / 2) * this.sizeRate;\n\n            this.circle = new _konva2.default.Circle({\n                x: this.cx,\n                y: this.cy,\n                radius: this.circleRadius,\n                stroke: this.lineColor,\n                strokeWidth: 1,\n                fill: '#ffffff00'\n            });\n            this.addDestroy(this.circle);\n            this.layoutLayer.add(this.circle);\n        }\n    }, {\n        key: 'drawCircleLine',\n        value: function drawCircleLine() {\n            this.circleLineRadius = Math.ceil(this.circleLinePercent * this.max / 2) * this.sizeRate;\n\n            var points = [];\n            points.push('M');\n            for (var i = 90; i <= 180; i++) {\n                var tmp = geometry.distanceAngleToPoint(this.circleLineRadius, i + 90);\n                points.push([tmp.x, tmp.y].join(',') + ',');\n                if (i == 90) {\n                    points.push('L');\n                }\n            }\n            points.push('M');\n            for (var _i = 270; _i <= 360; _i++) {\n                var _tmp = geometry.distanceAngleToPoint(this.circleLineRadius, _i + 90);\n                points.push([_tmp.x, _tmp.y].join(',') + ',');\n                if (_i == 270) {\n                    points.push('L');\n                }\n            }\n\n            this.circleLine = new _konva2.default.Path({\n                data: points.join(''),\n                x: this.cx,\n                y: this.cy,\n                stroke: this.lineColor,\n                strokeWidth: 1.5,\n                fill: '#ffffff00'\n            });\n            this.addDestroy(this.circleLine);\n\n            this.layoutLayer.add(this.circleLine);\n        }\n    }, {\n        key: 'reset',\n        value: function reset() {}\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            _get(Gauge.prototype.__proto__ || Object.getPrototypeOf(Gauge.prototype), 'destroy', this).call(this);\n            this.textRoundAngle.map(function (val) {\n                if (val.ins) val.ins.destroy();\n            });\n        }\n    }]);\n\n    return Gauge;\n}(_konvabase2.default);\n\nexports.default = Gauge;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _konvabase = require('../common/konvabase.js');\n\nvar _konvabase2 = _interopRequireDefault(_konvabase);\n\nvar _geometry = require('../../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _utils = require('../../common/utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar RoundStateText = function (_VisChartBase) {\n    _inherits(RoundStateText, _VisChartBase);\n\n    function RoundStateText(box, width, height) {\n        _classCallCheck(this, RoundStateText);\n\n        var _this = _possibleConstructorReturn(this, (RoundStateText.__proto__ || Object.getPrototypeOf(RoundStateText)).call(this, box, width, height));\n\n        _this.name = 'RoundStateText ' + Date.now();\n\n        _this.radius = 30;\n\n        _this.textOffsetX = -2;\n        _this.textOffsetY = -1;\n\n        _this.circleLineRotation = 0;\n        _this.circleLineRotationStep = 4;\n\n        _this.curColor = '#deaf5c';\n        return _this;\n    }\n\n    _createClass(RoundStateText, [{\n        key: 'animationCircleLine',\n        value: function animationCircleLine() {\n            var _this2 = this;\n\n            if (this.isDestroy) return;\n            if (!this.circleLine) return;\n\n            if (!this.isAnimation()) {\n                return;\n            }\n\n            this.circleLineRotation += this.circleLineRotationStep;\n\n            this.circleLine.rotation(this.circleLineRotation);\n            this.stage.add(this.layer);\n\n            window.requestAnimationFrame(function () {\n                _this2.animationCircleLine();\n            });\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            //console.log( 'RoundStateText init', this );\n            this.circleRaidus = this.radius - 5;\n            this.circleRaidus *= this.sizeRate;\n\n            //this.lineColor = this.curColor;\n\n            this.initDataLayout();\n\n            this.animationCircleLine();\n\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(rate) {\n            this.rate = rate;\n\n            var color = this.lineColor;\n\n            if (rate >= this.min && rate < this.max) {\n                color = this.curColor;\n            }\n\n            this.text.fill(color);\n            this.circle.stroke(color);\n            this.circleLine.stroke(color);\n\n            this.stage.add(this.layer);\n\n            //console.log( 'rate', rate );\n\n            return this;\n        }\n    }, {\n        key: 'initDataLayout',\n        value: function initDataLayout() {\n            this.drawText();\n            this.drawCircle();\n            this.drawCircleLine();\n        }\n    }, {\n        key: 'drawText',\n        value: function drawText() {\n            this.text = new _konva2.default.Text({\n                x: this.point.x,\n                y: this.point.y,\n                text: this.text,\n                fontSize: 32 * this.sizeRate,\n                fontFamily: 'HuXiaoBoKuHei',\n                fill: this.lineColor,\n                fontStyle: 'italic'\n            });\n            this.addDestroy(this.text);\n\n            this.text.x(this.point.x - this.text.textWidth / 2 + this.textOffsetX);\n            this.text.y(this.point.y - this.text.textHeight / 2 + this.textOffsetY);\n\n            this.layer.add(this.text);\n        }\n    }, {\n        key: 'drawCircle',\n        value: function drawCircle() {\n            this.circle = new _konva2.default.Circle({\n                x: this.point.x,\n                y: this.point.y,\n                radius: this.circleRaidus,\n                stroke: this.lineColor,\n                strokeWidth: 2,\n                fill: '#ffffff00'\n            });\n            this.addDestroy(this.circle);\n\n            this.layer.add(this.circle);\n        }\n    }, {\n        key: 'drawCircleLine',\n        value: function drawCircleLine() {\n            this.circleLineRadius = this.radius - 1;\n            this.circleLineRadius *= this.sizeRate;\n\n            var points = [];\n            points.push('M');\n            for (var i = 90; i <= 180; i++) {\n                var tmp = geometry.distanceAngleToPoint(this.circleLineRadius, i + 90);\n                points.push([tmp.x, tmp.y].join(',') + ',');\n                if (i == 90) {\n                    points.push('L');\n                }\n            }\n            points.push('M');\n            for (var _i = 270; _i <= 360; _i++) {\n                var _tmp = geometry.distanceAngleToPoint(this.circleLineRadius, _i + 90);\n                points.push([_tmp.x, _tmp.y].join(',') + ',');\n                if (_i == 270) {\n                    points.push('L');\n                }\n            }\n\n            this.circleLine = new _konva2.default.Path({\n                data: points.join(''),\n                x: this.point.x,\n                y: this.point.y,\n                stroke: this.lineColor,\n                strokeWidth: 2,\n                fill: '#ffffff00'\n            });\n            this.addDestroy(this.circleLine);\n\n            this.layer.add(this.circleLine);\n        }\n    }, {\n        key: 'reset',\n        value: function reset() {}\n    }, {\n        key: 'calcDataPosition',\n        value: function calcDataPosition() {}\n    }, {\n        key: 'animationLine',\n        value: function animationLine() {}\n    }, {\n        key: 'calcLayoutPosition',\n        value: function calcLayoutPosition() {}\n    }]);\n\n    return RoundStateText;\n}(_konvabase2.default);\n\nexports.default = RoundStateText;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar CHART_TYPE = exports.CHART_TYPE = {\n    dount: 'dount',\n    gauge: 'gauge'\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _vischartbase = require('../../common/vischartbase.js');\n\nvar _vischartbase2 = _interopRequireDefault(_vischartbase);\n\nvar _geometry = require('../../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _utils = require('../../common/utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Legend = function (_VisChartBase) {\n    _inherits(Legend, _VisChartBase);\n\n    function Legend(box, width, height) {\n        _classCallCheck(this, Legend);\n\n        var _this = _possibleConstructorReturn(this, (Legend.__proto__ || Object.getPrototypeOf(Legend)).call(this, box, width, height));\n\n        _this.name = 'Legend ' + Date.now();\n\n        _this.textColor = '#24a3ea';\n\n        _this.iconSpace = 5;\n\n        _this.text = [];\n        _this.icon = [];\n        _this.group = [];\n\n        _this.destroyList = [];\n        return _this;\n    }\n\n    _createClass(Legend, [{\n        key: 'setStage',\n        value: function setStage(stage) {\n            _get(Legend.prototype.__proto__ || Object.getPrototypeOf(Legend.prototype), 'setStage', this).call(this, stage);\n\n            this.layer = new _konva2.default.Layer({});\n            this.addDestroy(this.layer);\n\n            stage.add(this.layer);\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            var _this2 = this;\n\n            this.data.data.map(function (item, key) {\n                var x = 0,\n                    y = 0,\n                    count = key + 1,\n                    curRow = Math.floor(key / _this2.column());\n\n                switch (_this2.direction()) {\n                    case 'bottom':\n                        {\n                            x = _this2.space() + (_this2.space() + _this2.columnWidth()) * (key % _this2.column());\n                            y = _this2.height - (_this2.row() - curRow) * (_this2.spaceY() + _this2.rowHeight());\n                            //console.log( x, y, key, this.direction(), curRow );\n                            break;\n                        }\n                }\n\n                var label = item.name || key + '';\n\n                var color = _this2.colors[key % _this2.colors.length];\n\n                if (_jsonUtilsx2.default.jsonInData(item, 'textStyle.color')) {\n                    //path.fill( val.itemStyle.color );\n                    color = item.textStyle.color;\n                }\n\n                if (!_this2.inited) {\n                    var rect = new _konva2.default.Rect({\n                        x: x,\n                        y: y,\n                        width: _this2.itemWidth(),\n                        height: _this2.itemHeight(),\n                        fill: color\n                    });\n                    _this2.addDestroy(rect);\n\n                    var bg = new _konva2.default.Rect({\n                        x: x,\n                        y: y,\n                        width: _this2.columnWidth(),\n                        height: _this2.rowHeight(),\n                        fill: '#ffffff00'\n                    });\n                    _this2.addDestroy(bg);\n\n                    var text = new _konva2.default.Text({\n                        text: label,\n                        x: x + _this2.iconSpace + rect.width(),\n                        y: y,\n                        fill: _this2.textColor,\n                        fontFamily: 'MicrosoftYaHei',\n                        fontSize: 12\n                    });\n                    _this2.addDestroy(text);\n\n                    var group = new _konva2.default.Group();\n                    _this2.addDestroy(group);\n                    group.add(bg);\n                    group.add(rect);\n                    group.add(text);\n\n                    var data = {\n                        ele: group,\n                        item: item,\n                        disabled: false,\n                        rect: rect,\n                        bg: bg,\n                        text: text\n                    };\n\n                    _this2.group.push(data);\n                    group.on('click', function () {\n                        //console.log( 'click', key, data, group, item );\n                        data.disabled = !data.disabled;\n\n                        if (data.disabled) {\n                            group.opacity(.6);\n                        } else {\n                            group.opacity(1);\n                        }\n\n                        _this2.stage.add(_this2.layer);\n\n                        _this2.onChange && _this2.onChange(_this2.group);\n                    });\n\n                    _this2.layer.add(group);\n                } else {\n                    var curgroup = _this2.group[key];\n\n                    curgroup.rect.x(x);\n                    curgroup.rect.y(y);\n                    curgroup.rect.width(_this2.itemWidth());\n                    curgroup.rect.height(_this2.itemHeight());\n\n                    curgroup.bg.x(x);\n                    curgroup.bg.y(y);\n                    curgroup.bg.width(_this2.itemWidth());\n                    curgroup.bg.height(_this2.itemHeight());\n\n                    curgroup.text.x(x + _this2.iconSpace + curgroup.rect.width());\n                    curgroup.text.y(y);\n                }\n            });\n            this.stage.add(this.layer);\n\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(data) {\n            this.data = data || {};\n            if (!(this.data && this.data.data && this.data.data.length)) return;\n\n            /*\n            console.log( \n                this.column()\n                , this.row()\n                , this.direction() \n                , this.outerHeight()\n                , 'columnWidth:', this.columnWidth()\n            );\n            console.log( this.width, this.width - ( this.column() - 1  + 2 ) * this.space() );\n            */\n\n            this.init();\n\n            this.inited = 1;\n        }\n    }, {\n        key: 'outerHeight',\n        value: function outerHeight() {\n            return this.rowHeight() * this.row() + this.space();\n        }\n    }, {\n        key: 'total',\n        value: function total() {\n            var r = 0;\n\n            return r;\n        }\n    }, {\n        key: 'itemWidth',\n        value: function itemWidth() {\n            return this.data.itemWidth || 5;\n        }\n    }, {\n        key: 'itemHeight',\n        value: function itemHeight() {\n            return this.data.itemHeight || 5;\n        }\n    }, {\n        key: 'columnWidth',\n        value: function columnWidth() {\n            return (this.width - (this.column() - 1 + 2) * this.space()) / this.column();\n        }\n    }, {\n        key: 'column',\n        value: function column() {\n            return this.data.column || 1;\n        }\n    }, {\n        key: 'space',\n        value: function space() {\n            return this.data.space || 15;\n        }\n    }, {\n        key: 'spaceY',\n        value: function spaceY() {\n            return this.data.space || 0;\n        }\n    }, {\n        key: 'rowHeight',\n        value: function rowHeight() {\n            return this.data.rowHeight || 22;\n        }\n    }, {\n        key: 'row',\n        value: function row() {\n            return Math.ceil(this.data.data.length / this.column());\n        }\n    }, {\n        key: 'direction',\n        value: function direction() {\n            var r = 'top';\n\n            if (this.data.bottom) {\n                r = 'bottom';\n            } else if (this.data.left) {\n                r = 'left';\n            } else if (this.data.right) {\n                r = 'right';\n            }\n\n            return r;\n        }\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            _get(Legend.prototype.__proto__ || Object.getPrototypeOf(Legend.prototype), 'destroy', this).call(this);\n            //console.log( this.name, 'destroy' );\n\n            this.group && this.group.length && this.group.map(function (item) {\n                //if( !item.ele ) return;\n                item.ele.off('click');\n            });\n        }\n    }]);\n\n    return Legend;\n}(_vischartbase2.default);\n\nexports.default = Legend;","\n\nlet COLORS = [\n    '#da432e',\n    '#f3a42d',\n    '#b56be8',\n    '#207dd3',\n    '#50d275',\n    '#4aabd6',\n    '#f12575',\n    '#da432e',\n    '#19af89'\n];\n\n\nexport function setColor( data, colors ){\n    colors = colors || COLORS;\n\n\n    if( data && data.legend && data.legend.data ){\n        data.legend.data.map( ( item, key ) => {\n            if( !item.textStyle ) return;\n\n            item.textStyle.color = colors[ key % colors.length ];\n        });\n    }\n\n    if( data && data.series  ){\n        data.series.map( ( item, key ) => {\n            if( !item.data ) return;\n\n            item.data.map( ( sitem, skey ) => {\n                if( !sitem.itemStyle ) return;\n                sitem.itemStyle.color = colors[ skey % colors.length ];\n            });\n        });\n    }\n\n}\n","\n\nimport VisChart from 'vischart';\n\nimport fontfaceobserver from 'fontfaceobserver';\n\nimport * as base64img from './data/base64img.js';\n\nimport * as common from './common.js';\n\nlet background = [\n    { \n        //\"url\": \"./img/dount-in.png\"\n        \"url\": base64img.dountIn\n        , \"isbase64\": true\n        , 'base64prefix': 'data:image/png;base64,'\n        , \"width\": 120\n        , \"height\": 120\n        , \"offsetX\": 0\n        , \"offsetY\": 1\n    }\n    , { \n        //\"url\": \"./img/dount-big.png\"\n        \"url\": base64img.dountBig\n        , \"isbase64\": true\n        , 'base64prefix': 'data:image/png;base64,'\n        , \"width\": 250\n        , \"height\": 248\n        , \"offsetX\": 0\n        , \"offsetY\": 1\n        , \"rotation\": 1\n    }\n];\n\n//console.log( background );\n\nlet font = new fontfaceobserver( 'HuXiaoBoKuHei' );\nfont.load().then(function () {\n\n    //let data = require( './data/dount.json' );\n    let data = require( './data/dount-tight4.json' );\n    //let data = require( './data/dount-real1.json' );\n    //let data = require( './data/dount-disable-animation.json' );\n        data \n        && data.series \n        && data.series.map( item => {\n            item.background = background;\n        });\n    common.setColor( data );\n\n    let box = document.querySelector('#twoBox');\n        \n    let dmins = new VisChart( box );\n        dmins.update( data, true ); \n\n    window.addEventListener( 'resize', ()=>{\n\n        window.tmpTimeout && clearTimeout( window.tmpTimeout );\n\n        window.tmpTimeout = setTimeout( ()=>{\n            console.log( 'onresize', Date.now(), window.innerHeight );\n            let size = window.innerHeight / 2;\n\n            dmins.resize( size, size );\n        }, 1000 );\n    });\n    setInterval( ()=>{\n        //let data = require( './data/dount-tight8-1.json' );\n        let data = require( './data/dount-tight4-1.json' );\n        //let data = require( './data/dount-real1.json' );\n        data \n        && data.series \n        && data.series.map( item => {\n            item.background = background;\n        });\n\n        common.setColor( data );\n        //dmins.resize( 500, 500, data );\n        dmins.update( data, 1, 0 );\n\n    }, 2000 );\n\n/*\n*/\n\n    /*\n    setTimeout( ()=>{\n        //let data = require( './data/dount-tight8-1.json' );\n        let data = require( './data/dount-tight4-1.json' );\n        //let data = require( './data/dount-real1.json' );\n        data \n        && data.series \n        && data.series.map( item => {\n            item.background = background;\n        });\n\n        common.setColor( data );\n        dmins.resize( 500, 500 );\n\n    }, 3000 );\n\n    setTimeout( ()=>{\n        //let data = require( './data/dount-tight8-1.json' );\n        let data = require( './data/dount-tight4-1.json' );\n        //let data = require( './data/dount-real1.json' );\n        data \n        && data.series \n        && data.series.map( item => {\n            item.background = background;\n        });\n\n        common.setColor( data );\n        dmins.update( data, true, 0 ); \n\n    }, 4000 );*/\n\n\n\n}, function () {\n  console.log('Font is not available');\n});\n\n\n"],"sourceRoot":""}
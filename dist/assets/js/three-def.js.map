{"version":3,"sources":["webpack:///../vischart/dist/geometry/geometry.js","webpack:///../vischart/dist/common/utils.js","webpack:///./src/assets/js/utils/three.js","webpack:///../vischart/dist/2d/common/base.js","webpack:///../vischart/dist/common/vischartbase.js","webpack:///../vischart/dist/2d/common/pointat.js","webpack:///../vischart/dist/common/constant.js","webpack:///../vischart/dist/3d/common/base.js","webpack:///../vischart/dist/index.js","webpack:///./src/assets/js/data-3d/svg/dount-in.txt","webpack:///./src/assets/js/data-3d/svg/dount-big.txt","webpack:///../vischart/dist/2d/dount/index.js","webpack:///../vischart/dist/2d/icon/iconcircle.js","webpack:///../vischart/dist/2d/gauge/index.js","webpack:///../vischart/dist/2d/icon/roundstatetext.js","webpack:///../vischart/dist/2d/common/legend.js","webpack:///../vischart/dist/3d/index.js","webpack:///../vischart/dist/3d/dount/index.js","webpack:///../vischart/dist/3d/common/pointat.js","webpack:///./src/assets/js/data-3d/svg/dount-big-all.txt","webpack:///./src/assets/js/common.js","webpack:///./src/assets/js/three-def.js"],"names":["Object","defineProperty","exports","value","pointRectangleIntersection","p","r","x","x2","y","y2","pointDistance","_p1","_p2","_dx","_dy","Math","sqrt","pointAngle","angle","atan2","PI","distanceAngleToPoint","_distance","_angle","_radian","cos","sin","radians","degree","_radians","intersectRect","r1","r2","width","height","fixEndAngle","startAngle","endAngle","pointPlus","p1","p2","parseFinance","_i","_dot","parseFloat","toFixed","module","window","THREE","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_konva2","_interopRequireDefault","__webpack_require__","_vischartbase2","obj","__esModule","default","KonvaBase","_VisChartBase","box","instance","TypeError","_classCallCheck","this","self","call","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","subClass","superClass","create","constructor","setPrototypeOf","_inherits","_this2","images","iconLayer","remove","Layer","addDestroy","data","background","map","val","addImage","url","offsetX","offsetY","rotation","isbase64","rotationBg","item","img","Image","onload","icon","image","fixCx","fixCy","add","push","offset","animationBg","stage","src","base64prefix","_this3","isDestroy","isAnimation","rotationBgCount","rotationBgStep","requestAnimationFrame","VisChartBase","name","Date","now","colors","_setSize","destroyList","offsetWidth","offsetHeight","customWidth","customHeight","max","maxSize","min","minSize","cx","cy","cpoint","totalAngle","angleOffset","countAngle","rateWidth","rateHeight","sizeRate","standSize","allData","loadImage","num","legend","_this","imgUrl","arguments","undefined","opt","rateW","rateH","direction","outerHeight","options","layer","animation","seriesAnimation","setDestroy","destroy","_len","Array","_key","_jsonUtilsx2","geometry","newObj","hasOwnProperty","_interopRequireWildcard","PointAt","point","init","rects","params","clone","fill","rect","Rect","leftTop","rightTop","leftBottom","rightBottom","isLeftTop","isRightTop","isRightBottom","isLeftBottom","DIRE_NAME","topCenter","rightMid","bottomCenter","leftMid","DIRE_NUM","1","2","4","8","3","6","9","12","CHART_TYPE","dount","gauge","ThreeBase","renderer","scene","camera","render","Konva","_images","issvgstring","svgLoader","initSVGBackground","parse","_svgloader","SVGLoader","paths","group","Group","scale","path","material","MeshBasicMaterial","color","side","DoubleSide","depthWrite","shapes","toShapes","j","shape","ShapeBufferGeometry","mesh","Mesh","Box3","setFromObject","getSize","Vector3","position","pivot","Object3D","set","ele","animate","_this4","getRotationAttr","getRotationStep","jsonInData","rotationAttr","rotationStep","toString","indexOf","parseInt","replace","_get","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","parent","getter","_index2","_index4","constant","_legend2","_index6","VisChart","ins","resize","update","tmpredraw","redraw","ignoreLegend","Stage","container","style","realIndex","series","sitem","clearUpdate","emptyblock","setStage","setOptions","onChange","initChart","type","setLegend","getLegendData","tmp","disabled","three","_base2","_pointat2","utils","_iconcircle2","Dount","outPercent","inPercent","circleLinePercent","circlePercent","circleLineRotation","circleLineRotationStep","animationStep","angleStep","textHeight","lineOffset","line","textOffset","lineColor","lineRange","lineWidth","lineSpace","lineAngle","lineHeight","lineCurveLength","loopSort","clearList","calcLayoutPosition","isDone","lineLengthCount","clearItems","calcDataPosition","initDataLayout","inited","animationCircleLine","pathData","circleLine","layoutLayer","isSeriesAnimation","reset","tmpAngle","itemData","arc","arcLayer","animationLine","circleRadius","ceil","circle","Circle","radius","stroke","strokeWidth","circleLineRadius","points","join","_tmp","Path","drawCircle","drawCircleLine","ii","itemStyle","innerRadius","inRadius","outerRadius","outRadius","Arc","Line","lineLength","lineLengthStep","lineEnd","lineExpend","lineStart","addText","addIcon","lineicon","fixWidth","fixHeight","text","Text","percent","fontFamily","fontSize","fontStyle","textPoint","angleDirect","pointDirection","autoAngle","textWidth","textX","textY","auto","lineLeft","lineRight","_this5","total","_percent","_totalPercent","midAngle","tmpPoint","_tmpAngle","_tmpPoint","pre","cur","abs","tmpY","_i2","_pre","_cur","_tmpY","_i3","_pre2","_cur2","_tmpY2","_i4","_pre3","_cur3","_tmpY3","_i5","_pre4","_cur4","IconCircle","step","isplus","opacity","outcircle","plus","_roundstatetext2","Gauge","offsetCy","curRate","totalNum","totalNumStep","roundRadiusPercent","arcLinePercent","arcOutPercent","arcInPercent","arcLabelLength","arcTextLength","arcAngle","part","arcTotal","arcOffset","arcOffsetPad","partLabel","partAngle","partNum","textOffsetX","textOffsetY","textLineLength","textRectWidthPercent","textRectHeightPercent","textRoundPercent","textRoundOffsetAngle","textRoundPlusAngle","textRoundMaxAngle","roundStatusRaidus","textRoundAngle","pow","getAttackRatePercent","textRoundRadius","roundRadius","arcInRadius","arcOutRadius","arcLineRaidus","arcPartLineAr","arcOutlinePartAr","textAr","start","end","assign","removeChildren","animationAngle","getAttackRateAngle","updateWedge","rateStep","floor","totalNumCount","animationText","_this6","totalText","tmpTotalText","textRect","textLinePath","_this7","arcLine","arcPartLine","arcOutlinePart","fillLinearGradientStartPoint","fillLinearGradientEndPoint","fillLinearGradientColorStops","roundLine","percentText","getAttackText","wedge","Wedge","wedge1","initRoundText","drawArc","drawArcLine","drawArcText","drawText","drawTextRect","_this8","_this9","RoundStateText","curColor","circleRaidus","rate","Legend","textColor","iconSpace","curRow","column","space","columnWidth","row","spaceY","rowHeight","label","textStyle","curgroup","itemWidth","itemHeight","bg","on","bottom","left","right","off","_lodash2","VisThree","config","fov","near","far","cameraPosition","z","Scene","PerspectiveCamera","nera","WebGLRenderer","antialias","alpha","setPixelRatio","devicePixelRatio","sortObjects","innerHTML","appendChild","domElement","setSize","merge","setThreeConfig","updateProjectionMatrix","_three4","_three5","_toConsumableArray","arr","isArray","arr2","from","geometryx","RingGeometry","dispose","MeshLine","curve","EllipseCurve","getPoints","geometryy","Geometry","setFromPoints","concat","setGeometry","MeshLineMaterial","Color","renderOrder","depthTest","geometryItem","CircleGeometry","vertices","shift","parseColor","_geometryx","_material","mline","meshline","sprite","textSize","redrawInterval","texture","COLORS","fontjson","droid_serif_regular_typeface","dount_in_default","a","dount_big_default","fontfaceobserver_standalone_default","load","then","skey","setColor","document","querySelector","dmins","dist_default","updateThreeConfig"],"mappings":"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","file":"assets/js/three-def.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.pointRectangleIntersection = pointRectangleIntersection;\nexports.pointDistance = pointDistance;\nexports.pointAngle = pointAngle;\nexports.distanceAngleToPoint = distanceAngleToPoint;\nexports.radians = radians;\nexports.degree = degree;\nexports.intersectRect = intersectRect;\nexports.fixEndAngle = fixEndAngle;\nexports.pointPlus = pointPlus;\n\n/**\n * 判断一个点是否在矩形里面\n * @method  pointRectangleIntersection\n * @param   {point} _p\n * @param   {rect}  _r\n * @return  Boolean\n * @static\n */\nfunction pointRectangleIntersection(p, r) {\n    return p.x >= r.x && p.x <= r.x2 && p.y >= r.y && p.y <= r.y2;\n}\n/**\n * 计算两个坐标点之间的距离\n * @method pointDistance\n * @param   {point} _p1\n * @param   {point} _p2\n * @return  Boolean\n * @static\n */\nfunction pointDistance(_p1, _p2) {\n    var _dx = _p2.x - _p1.x,\n        _dy = _p2.y - _p1.y,\n        _dist = Math.sqrt(_dx * _dx + _dy * _dy);\n    ;\n    return _dist;\n}\n/**\n * 计算两个坐标点之间的角度\n * @method pointAngle\n * @param   {point} _p1\n * @param   {point} _p2\n * @return  Boolean\n * @static\n */\nfunction pointAngle(_p1, _p2) {\n    var angle = Math.atan2(_p2.y - _p1.y, _p2.x - _p1.x) * 180 / Math.PI;\n    if (angle < 0) {\n        angle = 360 + angle;\n    }\n\n    return angle;\n}\n\n/**\n * 从长度和角度求坐标点\n * @method  distanceAngleToPoint\n * @param  {Number} _distance\n * @param  {Number} _angle\n * @return Point\n * @static\n */\nfunction distanceAngleToPoint(_distance, _angle) {\n    var _radian = _angle * Math.PI / 180;\n    return {\n        x: Math.cos(_radian) * _distance,\n        y: Math.sin(_radian) * _distance\n    };\n}\n/**\n * 从角度获取弧度\n * @method  radians\n * @param   {Number} _angle\n * @return  {Number}\n * @static\n */\nfunction radians(_angle) {\n    return _angle * Math.PI / 180;\n}\n/**\n * 从弧度获取角度\n * @method  degree\n * @param   {Number} _radians\n * @return  {Number}\n * @static\n */\nfunction degree(_radians) {\n    return _radians / Math.PI * 180;\n}\n/**\n * 判断两个矩形是否有交集\n * @method intersectRect\n * @param   {rect_Object}   r1\n * @param   {rect_Object}   r2\n * @return  {Boolean}\n */\nfunction intersectRect(r1, r2) {\n    return !(r2.x > r1.x + r1.width || r2.x + r2.width < r1.x || r2.y > r1.y + r1.height || r2.y + r2.height < r1.y);\n}\n\nfunction fixEndAngle(startAngle, endAngle) {\n    if (endAngle < startAngle) {\n        endAngle += 360;\n    }\n    return endAngle;\n}\n\nfunction pointPlus(p1, p2) {\n    return {\n        x: p1.x + p2.x,\n        y: p1.y + p2.y\n    };\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseFinance = parseFinance;\n\n\n/**\n * 取小数点的N位\n * <br />JS 解析 浮点数的时候，经常出现各种不可预知情况，这个函数就是为了解决这个问题\n * @method  parseFinance\n * @static\n * @param   {number}    _i\n * @param   {int}       _dot  default = 2\n * @return  number\n */\nfunction parseFinance(_i, _dot) {\n  _i = parseFloat(_i) || 0;\n  typeof _dot == 'undefined' && (_dot = 2);\n  _i && (_i = parseFloat(_i.toFixed(_dot)));\n  return _i;\n}","\nmodule.exports = window.THREE;\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _vischartbase = require('../../common/vischartbase.js');\n\nvar _vischartbase2 = _interopRequireDefault(_vischartbase);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar KonvaBase = function (_VisChartBase) {\n    _inherits(KonvaBase, _VisChartBase);\n\n    function KonvaBase(box, width, height) {\n        _classCallCheck(this, KonvaBase);\n\n        return _possibleConstructorReturn(this, (KonvaBase.__proto__ || Object.getPrototypeOf(KonvaBase)).call(this, box, width, height));\n    }\n\n    _createClass(KonvaBase, [{\n        key: 'loadImage',\n        value: function loadImage() {\n            var _this2 = this;\n\n            if (this.images.length) return;\n\n            if (this.iconLayer) this.iconLayer.remove();\n            this.iconLayer = new _konva2.default.Layer();\n            this.addDestroy(this.iconLayer);\n\n            this.images = [];\n\n            if (this.data && this.data.background && this.data.background.length) {\n                this.data.background.map(function (val) {\n                    _this2.addImage(val.url, val.width, val.height, val.offsetX || 0, val.offsetY || 0, val.rotation || 0, val.isbase64);\n                });\n            }\n\n            this.rotationBg = [];\n\n            this.images.map(function (item) {\n                //console.log( 'item', item );\n\n                var img = new Image();\n                img.onload = function () {\n                    var width = item.width || img.width,\n                        height = item.height || img.height;\n\n                    var icon = new _konva2.default.Image({\n                        image: img,\n                        x: _this2.fixCx() - width / 2 + item.offsetX,\n                        y: _this2.fixCy() - height / 2 + item.offsetY,\n                        width: width,\n                        height: height\n                    });\n                    _this2.addDestroy(icon);\n\n                    _this2.iconLayer.add(icon);\n\n                    if (item.rotation) {\n                        _this2.rotationBg.push(icon);\n                        icon.x(_this2.fixCx() - width / 2 + item.offsetX + width / 2);\n                        icon.y(_this2.fixCy() - height / 2 + item.offsetY + height / 2);\n                        icon.offset({ x: width / 2, y: height / 2 });\n                        if (_this2.rotationBg.length === 1) _this2.animationBg();\n                    }\n                    _this2.stage.add(_this2.iconLayer);\n                };\n                if (item.isbase64) {\n                    img.src = (item.base64prefix || 'data:image/png;base64,') + item.url;\n                } else {\n                    img.src = item.url;\n                }\n            });\n\n            return this;\n        }\n    }, {\n        key: 'animationBg',\n        value: function animationBg() {\n            var _this3 = this;\n\n            //console.log( 'animationBg', Date.now(), this.isDestroy, this.rotationBg.length, this.rotationBgCount );\n            if (this.isDestroy) return;\n            if (!this.rotationBg.length) return;\n            if (!this.isAnimation()) return;\n\n            this.rotationBg.map(function (item) {\n                _this3.rotationBgCount = (_this3.rotationBgCount - _this3.rotationBgStep) % 360;\n                item.rotation(_this3.rotationBgCount);\n            });\n\n            this.stage.add(this.iconLayer);\n\n            window.requestAnimationFrame(function () {\n                _this3.animationBg();\n            });\n        }\n    }]);\n\n    return KonvaBase;\n}(_vischartbase2.default);\n\nexports.default = KonvaBase;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar VisChartBase = function () {\n    function VisChartBase(box, width, height) {\n        _classCallCheck(this, VisChartBase);\n\n        this.box = box;\n\n        this.name = 'VisChartBase_' + Date.now();\n\n        this.colors = ['#f12575', '#da432e', '#f3a42d', '#19af89', '#24a3ea', '#b56be8'];\n\n        this._setSize(width, height);\n    }\n\n    _createClass(VisChartBase, [{\n        key: '_setSize',\n        value: function _setSize(width, height) {\n\n            this.destroyList = [];\n\n            width = width || this.box.offsetWidth;\n            height = height || this.box.offsetHeight;\n\n            this.width = width || this.box.offsetWidth;\n            this.height = height || this.box.offsetHeight;\n\n            this.customWidth = width || this.width;\n            this.customHeight = height || this.height;\n\n            //console.log( this.width, this.height );\n\n            this.max = this.maxSize = Math.max(this.width, this.height);\n            this.min = this.minSize = Math.min(this.width, this.height);\n\n            this.cx = this.width / 2;\n            this.cy = this.height / 2;\n            this.cpoint = { x: this.cx, y: this.cy };\n\n            this.totalAngle = 360;\n            this.angleOffset = 0;\n            this.countAngle = 0;\n\n            this.images = [];\n\n            this.rateWidth = 330;\n            this.rateHeight = 330;\n\n            this.rotationBg = [];\n\n            this.rotationBgCount = 0;\n            this.rotationBgStep = 1;\n\n            this.sizeRate = 1;\n\n            this.standSize = 330;\n\n            if (this.min < this.standSize) {\n                this.sizeRate = this.min / this.standSize;\n            }\n        }\n    }, {\n        key: 'update',\n        value: function update(data, allData) {\n            //console.log( 'update', this.name, Date.now(), this.width, this.height );\n\n            this.data = data;\n            this.allData = allData;\n\n            this.loadImage();\n\n            return this;\n        }\n    }, {\n        key: 'opacity',\n        value: function opacity(num) {}\n    }, {\n        key: 'setLegend',\n        value: function setLegend(legend) {\n            this.legend = legend;\n        }\n    }, {\n        key: 'animation',\n        value: function animation() {}\n    }, {\n        key: 'animationBg',\n        value: function animationBg() {\n            var _this = this;\n\n            if (this.isDestroy) return;\n            if (!this.rotationBg.length) return;\n            if (!this.isAnimation()) return;\n\n            //logic\n\n            window.requestAnimationFrame(function () {\n                _this.animationBg();\n            });\n        }\n    }, {\n        key: 'addImage',\n        value: function addImage(imgUrl, width, height) {\n            var offsetX = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n            var offsetY = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n            var rotation = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n            var isbase64 = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;\n            var opt = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : {};\n\n            var rateW = this.min / this.rateWidth,\n                rateH = this.min / this.rateHeight;\n            this.images.push({\n                url: imgUrl,\n                width: width * rateW,\n                height: height * rateH,\n                offsetX: offsetX,\n                offsetY: offsetY,\n                rotation: rotation,\n                isbase64: isbase64,\n                opt: opt\n            });\n\n            return this;\n        }\n\n        /*\n            \"background\": [\n                { \n                    \"url\": \"./img/dount-in.png\"\n                    , \"width\": 120\n                    , \"height\": 120\n                    , \"offsetX\": 0\n                    , \"offsetY\": 1\n                }\n                , { \n                    \"url\": \"./img/dount-big.png\"\n                    , \"width\": 250\n                    , \"height\": 248\n                    , \"offsetX\": 0\n                    , \"offsetY\": 1\n                }\n            ],\n        */\n\n    }, {\n        key: 'loadImage',\n        value: function loadImage() {\n            return this;\n        }\n    }, {\n        key: 'hasLegend',\n        value: function hasLegend() {\n            var r = void 0;\n\n            if (this.data && this.data.legend && this.data.legend.data && this.data.legend.data.length) {\n                r = true;\n            }\n\n            return r;\n        }\n    }, {\n        key: 'fixCx',\n        value: function fixCx() {\n            var r = this.cx;\n            return r;\n        }\n    }, {\n        key: 'fixCy',\n        value: function fixCy() {\n            var r = this.cy;\n\n            if (this.legend) {\n                switch (this.legend.direction()) {\n                    case 'bottom':\n                        {\n                            r = (this.height - this.legend.outerHeight() / 2) / 2 - 5;\n                            break;\n                        }\n                }\n            }\n\n            return r;\n        }\n    }, {\n        key: 'fixWidth',\n        value: function fixWidth() {\n            var r = this.width;\n            return r;\n        }\n    }, {\n        key: 'fixHeight',\n        value: function fixHeight() {\n            var r = this.height;\n            return r;\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            return this;\n        }\n    }, {\n        key: 'setOptions',\n        value: function setOptions(options) {\n\n            for (var key in options) {\n                this[key] = options[key];\n            }\n\n            this.options = options;\n        }\n    }, {\n        key: 'calcLayoutPosition',\n        value: function calcLayoutPosition() {\n            return this;\n        }\n    }, {\n        key: 'calcDataPosition',\n        value: function calcDataPosition() {\n            return this;\n        }\n    }, {\n        key: 'initDataLayout',\n        value: function initDataLayout() {\n            return this;\n        }\n    }, {\n        key: 'draw',\n        value: function draw() {\n            return this;\n        }\n    }, {\n        key: 'reset',\n        value: function reset() {}\n    }, {\n        key: 'getData',\n        value: function getData() {\n            return this.data || {};\n        }\n    }, {\n        key: 'layer',\n        value: function layer() {\n            return this.layer;\n        }\n    }, {\n        key: 'isAnimation',\n        value: function isAnimation() {\n            var r = true;\n\n            if (this.allData && 'animation' in this.allData) {\n                r = this.allData.animation;\n            }\n\n            if (this.data && 'animation' in this.data) {\n                r = this.data.animation;\n            }\n\n            return r;\n        }\n    }, {\n        key: 'isSeriesAnimation',\n        value: function isSeriesAnimation() {\n            var r = true;\n\n            if (this.data && 'seriesAnimation' in this.data) {\n                r = this.data.seriesAnimation;\n            }\n\n            return r;\n        }\n    }, {\n        key: 'setLayer',\n        value: function setLayer(layer) {\n            this.layer = layer;\n            return this;\n        }\n    }, {\n        key: 'setStage',\n        value: function setStage(stage) {\n            this.stage = stage;\n        }\n    }, {\n        key: 'resize',\n        value: function resize(width, height) {\n            var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n            var allData = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n\n            this.customWidth = width || this.width;\n            this.customHeight = height || this.height;\n\n            this.data = data || this.data;\n            this.allData = allData || this.allData;\n\n            this.width = width || this.box.offsetWidth || this.width;\n            this.height = height || this.box.offsetHeight || this.height;\n\n            this._setSize(this.width, this.height);\n        }\n    }, {\n        key: 'remove',\n        value: function remove() {}\n    }, {\n        key: 'setDestroy',\n        value: function setDestroy() {\n            this.isDestroy = 1;\n        }\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            this.setDestroy();\n\n            this.destroyList.map(function (item) {\n                if (item) {\n                    //console.log( 'item', item );\n                    item.remove();\n                    item.destroy();\n                }\n            });\n        }\n    }, {\n        key: 'addDestroy',\n        value: function addDestroy() {\n            var _this2 = this;\n\n            for (var _len = arguments.length, item = Array(_len), _key = 0; _key < _len; _key++) {\n                item[_key] = arguments[_key];\n            }\n\n            item && item.length && item.map(function (val) {\n                _this2.destroyList.push(val);\n            });\n        }\n    }]);\n\n    return VisChartBase;\n}();\n\nexports.default = VisChartBase;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _geometry = require('../../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar PointAt = function () {\n    function PointAt(width, height, point) {\n        _classCallCheck(this, PointAt);\n\n        this.width = width;\n        this.height = height;\n        this.point = point;\n\n        this.cx = this.width / 2;\n        this.cy = this.height / 2;\n\n        this.cpoint = { x: this.cx, y: this.cy };\n\n        this.offsetX = 20;\n        this.offsetY = 20;\n\n        this.colors = ['#f12575', '#da432e', '#f3a42d', '#19af89', '#24a3ea', '#b56be8'];\n\n        this.init();\n    }\n\n    _createClass(PointAt, [{\n        key: 'setDebug',\n        value: function setDebug(stage) {\n            this.stage = stage;\n\n            this.layer = new _konva2.default.Layer();\n\n            var i = 0;\n\n            for (var key in this.rects) {\n\n                var item = this.rects[key];\n                var params = _jsonUtilsx2.default.clone(item);\n                params.fill = this.colors[i % this.colors.length];\n\n                var rect = new _konva2.default.Rect(params);\n\n                this.layer.add(rect);\n\n                i++;\n            }\n\n            this.stage.add(this.layer);\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            this.leftTop = {\n                x: 0,\n                y: 0,\n                width: this.cx + this.offsetX,\n                height: this.cy + this.offsetY\n            };\n            this.leftTop.x2 = this.leftTop.x + this.leftTop.width;\n            this.leftTop.y2 = this.leftTop.y + this.leftTop.height;\n\n            this.rightTop = {\n                x: this.cx - this.offsetX,\n                y: 0,\n                width: this.cx + this.offsetX,\n                height: this.cy + this.offsetY\n            };\n            this.rightTop.x2 = this.rightTop.x + this.rightTop.width;\n            this.rightTop.y2 = this.rightTop.y + this.rightTop.height;\n\n            this.leftBottom = {\n                x: 0,\n                y: this.cy - this.offsetY,\n                width: this.cx + this.offsetX,\n                height: this.cy + this.offsetY\n            };\n            this.leftBottom.x2 = this.leftBottom.x + this.leftBottom.width;\n            this.leftBottom.y2 = this.leftBottom.y + this.leftBottom.height;\n\n            this.rightBottom = {\n                x: this.cx - this.offsetX,\n                y: this.cy - this.offsetY,\n                width: this.cx + this.offsetX,\n                height: this.cy + this.offsetY\n            };\n            this.rightBottom.x2 = this.rightBottom.x + this.rightBottom.width;\n            this.rightBottom.y2 = this.rightBottom.y + this.rightBottom.height;\n\n            this.rects = {\n                leftTop: this.leftTop,\n                rightTop: this.rightTop,\n                leftBottom: this.leftBottom,\n                rightBottom: this.rightBottom\n            };\n        }\n    }, {\n        key: 'isLeftTop',\n        value: function isLeftTop() {\n            return geometry.pointRectangleIntersection(this.point, this.leftTop) ? 1 : 0;\n        }\n    }, {\n        key: 'isRightTop',\n        value: function isRightTop() {\n            return geometry.pointRectangleIntersection(this.point, this.rightTop) ? 2 : 0;\n        }\n    }, {\n        key: 'isRightBottom',\n        value: function isRightBottom() {\n            return geometry.pointRectangleIntersection(this.point, this.rightBottom) ? 4 : 0;\n        }\n    }, {\n        key: 'isLeftBottom',\n        value: function isLeftBottom() {\n            return geometry.pointRectangleIntersection(this.point, this.leftBottom) ? 8 : 0;\n        }\n    }, {\n        key: 'auto',\n        value: function auto() {\n            var r = this.isLeftTop() + this.isRightTop() + this.isRightBottom() + this.isLeftBottom();\n            return r;\n        }\n    }, {\n        key: 'autoAngle',\n        value: function autoAngle() {\n            var angle = geometry.pointAngle(this.cpoint, this.point),\n                r = '';\n\n            if (angle >= 0 && angle <= 90) {\n                r = PointAt.DIRE_NAME.rightBottom;\n            } else if (angle > 90 && angle <= 180) {\n                r = PointAt.DIRE_NAME.leftBottom;\n            } else if (angle > 180 && angle <= 270) {\n                r = PointAt.DIRE_NAME.leftTop;\n            } else {\n                r = PointAt.DIRE_NAME.rightTop;\n            }\n\n            return r;\n        }\n    }]);\n\n    return PointAt;\n}();\n\nexports.default = PointAt;\n\n\nPointAt.DIRE_NAME = {\n    leftTop: 1,\n    rightTop: 2,\n    rightBottom: 4,\n    leftBottom: 8,\n\n    topCenter: 3,\n    rightMid: 6,\n    bottomCenter: 12,\n    leftMid: 9\n};\n\nPointAt.DIRE_NUM = {\n    '1': 'leftTop',\n    '2': 'rightTop',\n    '4': 'rightBottom',\n    '8': 'leftBottom',\n\n    '3': 'topCenter',\n    '6': 'rightMid',\n    '9': 'leftMid',\n    '12': 'bottomCenter'\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar CHART_TYPE = exports.CHART_TYPE = {\n    dount: 'dount',\n    gauge: 'gauge'\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _vischartbase = require('../../common/vischartbase.js');\n\nvar _vischartbase2 = _interopRequireDefault(_vischartbase);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar THREE = require('three');\n\nvar ThreeBase = function (_VisChartBase) {\n    _inherits(ThreeBase, _VisChartBase);\n\n    function ThreeBase(box, width, height) {\n        _classCallCheck(this, ThreeBase);\n\n        return _possibleConstructorReturn(this, (ThreeBase.__proto__ || Object.getPrototypeOf(ThreeBase)).call(this, box, width, height));\n    }\n\n    _createClass(ThreeBase, [{\n        key: 'render',\n        value: function render() {\n            this.renderer && this.scene && this.camera && this.renderer.render(this.scene, this.camera);\n\n            return this;\n        }\n    }, {\n        key: 'loadImage',\n        value: function loadImage() {\n            var _this2 = this;\n\n            if (this.images.length) return;\n\n            if (this.iconLayer) this.iconLayer.remove();\n            this.iconLayer = new Konva.Layer();\n            this.addDestroy(this.iconLayer);\n\n            this.images = [];\n            this._images = [];\n            this.rotationBg = [];\n\n            if (this.data && this.data.background && this.data.background.length) {\n\n                this.data.background.map(function (val) {\n                    _this2.addImage(val.url, val.width, val.height, val.offsetX || 0, val.offsetY || 0, val.rotation || 0, val.isbase64, val);\n                });\n            }\n\n            this.images.map(function (item, key) {\n                item.opt = item.opt || {};\n                if (item.opt.issvgstring) {\n                    if (!_this2.svgLoader()) return;\n                    _this2.initSVGBackground(_this2.svgLoader().parse(item.url), item, key);\n                    return;\n                }\n            });\n\n            return this;\n        }\n    }, {\n        key: 'svgLoader',\n        value: function svgLoader() {\n            if (!this._svgloader && THREE.SVGLoader) {\n                this._svgloader = new THREE.SVGLoader();\n            }\n\n            return this._svgloader;\n        }\n    }, {\n        key: 'initSVGBackground',\n        value: function initSVGBackground(paths, item, key) {\n            if (!(paths && paths.length)) return;\n\n            var group = new THREE.Group();\n            group.scale.y *= -1;\n            for (var i = 0; i < paths.length; i++) {\n                var path = paths[i];\n                var material = new THREE.MeshBasicMaterial({\n                    color: path.color,\n                    side: THREE.DoubleSide,\n                    depthWrite: false\n                });\n                var shapes = path.toShapes(true);\n                for (var j = 0; j < shapes.length; j++) {\n                    var shape = shapes[j];\n                    var geometry = new THREE.ShapeBufferGeometry(shape);\n                    var mesh = new THREE.Mesh(geometry, material);\n                    group.add(mesh);\n\n                    /*\n                    mesh.renderOrder = 10 + key;\n                    mesh.material.depthTest=false;\n                    */\n                }\n            }\n\n            var box = new THREE.Box3().setFromObject(group);\n            var size = box.getSize(new THREE.Vector3());\n\n            var x = -box.max.x / 2 - box.min.x / 2,\n                y = -box.max.y / 2 - box.min.y / 2;\n\n            group.position.x = x;\n            group.position.y = y;\n\n            var pivot = new THREE.Object3D();\n            pivot.add(group);\n\n            pivot.scale.set(this.sizeRate, this.sizeRate, this.sizeRate);\n\n            this.addDestroy(pivot);\n\n            this.scene.add(pivot);\n\n            var data = { ele: pivot, item: item };\n\n            this._images.push(data);\n\n            item.rotation && this.rotationBg.push(data);\n\n            this.render();\n            this.animationBg();\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {\n            var _this3 = this;\n\n            if (this.isDestroy) return;\n            if (!this.rotationBg.length) return;\n            if (!this.isAnimation()) return;\n\n            requestAnimationFrame(function () {\n                _this3.animate();\n            });\n        }\n    }, {\n        key: 'animationBg',\n        value: function animationBg() {\n            var _this4 = this;\n\n            if (this.isDestroy) return;\n            if (!this.rotationBg.length) return;\n            if (!this.isAnimation()) return;\n            //return;\n            if (this._images && this._images.length) {\n                this._images.map(function (item) {\n                    item.ele.rotation[_this4.getRotationAttr(item)] += _this4.getRotationStep(item);\n                });\n\n                this.render();\n            };\n\n            window.requestAnimationFrame(function () {\n                _this4.animationBg();\n            });\n        }\n    }, {\n        key: 'getRotationAttr',\n        value: function getRotationAttr(item) {\n            var r = 'y';\n            if (_jsonUtilsx2.default.jsonInData(item, 'item.opt.rotationAttr')) {\n                r = item.item.opt.rotationAttr;\n            }\n            return r;\n        }\n    }, {\n        key: 'getRotationStep',\n        value: function getRotationStep(item) {\n            var r = 0.03;\n            if (_jsonUtilsx2.default.jsonInData(item, 'item.opt.rotationStep')) {\n                r = item.item.opt.rotationStep;\n            }\n            return r;\n        }\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            this.setDestroy();\n\n            this.destroyList.map(function (item) {\n                if (item) {\n                    /*\n                    item.remove();\n                    item.destroy();\n                    */\n                }\n            });\n        }\n    }, {\n        key: 'parseColor',\n        value: function parseColor(color) {\n            if (color.toString().indexOf('#') > -1) {\n                color = parseInt(color.replace('#', ''), 16);\n            }\n\n            return color;\n        }\n    }]);\n\n    return ThreeBase;\n}(_vischartbase2.default);\n\nexports.default = ThreeBase;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _vischartbase = require('./common/vischartbase.js');\n\nvar _vischartbase2 = _interopRequireDefault(_vischartbase);\n\nvar _index = require('./2d/dount/index.js');\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _index3 = require('./2d/gauge/index.js');\n\nvar _index4 = _interopRequireDefault(_index3);\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _constant = require('./common/constant.js');\n\nvar constant = _interopRequireWildcard(_constant);\n\nvar _legend = require('./2d/common/legend.js');\n\nvar _legend2 = _interopRequireDefault(_legend);\n\nvar _index5 = require('./3d/index.js');\n\nvar _index6 = _interopRequireDefault(_index5);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar VisChart = function (_VisChartBase) {\n    _inherits(VisChart, _VisChartBase);\n\n    function VisChart(box, width, height) {\n        _classCallCheck(this, VisChart);\n\n        var _this = _possibleConstructorReturn(this, (VisChart.__proto__ || Object.getPrototypeOf(VisChart)).call(this, box, width, height));\n\n        _this.ins = [];\n        _this.legend = null;\n\n        _this._setSize(width, height);\n        return _this;\n    }\n\n    _createClass(VisChart, [{\n        key: '_setSize',\n        value: function _setSize(width, height) {\n\n            _get(VisChart.prototype.__proto__ || Object.getPrototypeOf(VisChart.prototype), '_setSize', this).call(this, width, height);\n\n            this.init();\n\n            if (this.legend && this.data && this.data.legend) {\n                this.legend.resize(this.width, this.height);\n                this.legend.update(this.data.legend);\n            }\n\n            if (this.data) {\n                var tmpredraw = this.redraw;\n                this.update(this.data, this.ignoreLegend);\n                this.redraw = tmpredraw;\n            }\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            //console.log( 'VisChartBase init', Date.now(), this.width, this.height, this.canvas );\n\n            if (!this.box) return;\n\n            if (!this.stage) {\n                this.stage = new _konva2.default.Stage({\n                    container: this.box,\n                    width: this.width,\n                    height: this.height\n                });\n            } else {\n                this.stage.width(this.width);\n                this.stage.height(this.height);\n            }\n\n            //console.log( this.width, this.height, this.box.offsetWidth, this.box.offsetHeight );\n            //console.log( this );\n\n            this.customWidth && (this.box.style.width = this.customWidth + 'px');\n            this.customHeight && (this.box.style.height = this.customHeight + 'px');\n\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(data, ignoreLegend) {\n            var _this2 = this;\n\n            var redraw = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            this.data = data;\n            this.ignoreLegend = ignoreLegend;\n            this.redraw = redraw;\n\n            if (!_jsonUtilsx2.default.jsonInData(this.data, 'series')) return;\n\n            this.data && this.data.legend && this.data.legend.data && this.data.legend.data.legend && this.data.legend.data.map(function (item, key) {\n                item.realIndex = key;\n            });\n\n            this.data && this.data.series && this.data.series.length && this.data.series.map(function (sitem) {\n                sitem.data && sitem.data.length && sitem.data.map(function (item, key) {\n                    item.realIndex = key;\n                });\n            });\n\n            this.clearUpdate();\n\n            //console.log( ju );\n\n            //this.stage.removeChildren();\n\n            //console.log( 'update data', data );\n\n            if (_jsonUtilsx2.default.jsonInData(this.data, 'legend.data') && this.data.legend.data.length) {\n                if (this.legend && ignoreLegend) {\n                    this.emptyblock = 'kao';\n                } else {\n                    this.legend = new _legend2.default(this.box, this.width, this.height);\n                    this.legend.setStage(this.stage);\n                    this.legend.setOptions({\n                        onChange: function onChange(group) {\n                            //console.log( 'legend onchange', group );\n                            _this2.initChart();\n                        }\n                    });\n                    this.legend.update(this.data.legend);\n                }\n            }\n            this.initChart();\n            return this;\n        }\n    }, {\n        key: 'initChart',\n        value: function initChart() {\n            var _this3 = this;\n\n            if (this.ins && this.ins.length && !this.redraw) {\n                this.emptyblock = 'kao';\n            } else {\n                this.ins.map(function (item) {\n                    item.destroy();\n                });\n                this.ins = [];\n            }\n\n            this.data.series.map(function (val, key) {\n                //console.log( val, constant );\n                var ins = void 0;\n\n                if (_this3.ins && _this3.ins.length && _this3.ins[key] && !_this3.redraw) {\n                    ins = _this3.ins[key];\n                    ins.width = _this3.width;\n                    ins.height = _this3.height;\n                } else {\n                    switch (val.type) {\n                        case constant.CHART_TYPE.dount:\n                            {\n                                ins = new _index2.default(_this3.box, _this3.width, _this3.height);\n                                break;\n                            }\n                        case constant.CHART_TYPE.gauge:\n                            {\n                                ins = new _index4.default(_this3.box, _this3.width, _this3.height);\n                                break;\n                            }\n                    }\n                    if (ins) {\n                        _this3.legend && ins.setLegend(_this3.legend);\n                        ins.setStage(_this3.stage);\n                    }\n                }\n\n                if (ins) {\n                    _this3.options && ins.setOptions(_this3.options);\n                    ins.update(_this3.getLegendData(val), _jsonUtilsx2.default.clone(_this3.data));\n\n                    if (!_this3.ins[key]) {\n                        _this3.ins[key] = ins;\n                    }\n                }\n            });\n        }\n    }, {\n        key: 'getLegendData',\n        value: function getLegendData(data) {\n            data = _jsonUtilsx2.default.clone(data);\n\n            var tmp = [];\n\n            if (this.legend && this.legend.group && this.legend.group.length) {\n                //console.log( 'getLegendData', this.legend.group, 111111111 );\n                this.legend.group.map(function (item, key) {\n                    if (!item.disabled) {\n                        tmp.push(data.data[key]);\n                    }\n                });\n                data.data = tmp;\n            }\n\n            return data;\n        }\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            _get(VisChart.prototype.__proto__ || Object.getPrototypeOf(VisChart.prototype), 'destroy', this).call(this);\n\n            //this.clearUpdate();\n            this.ins.map(function (item) {\n                item.destroy();\n            });\n            this.legend && this.legend.destroy();\n\n            this.stage && this.stage.destroy();\n            this.stage = null;\n        }\n    }, {\n        key: 'clearUpdate',\n        value: function clearUpdate() {\n            this.legend && !this.ignoreLegend && this.legend.destroy();\n        }\n    }]);\n\n    return VisChart;\n}(_vischartbase2.default);\n\nexports.default = VisChart;\n\n\nVisChart.three = _index6.default;","module.exports = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" ?>\\r\\n<!DOCTYPE svg PUBLIC \\\"-//W3C//DTD SVG 1.1//EN\\\" \\\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\\\">\\r\\n<svg width=\\\"118pt\\\" height=\\\"117pt\\\" viewBox=\\\"0 0 118 117\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\r\\n<g id=\\\"#24a3eaff\\\">\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 29.73 41.56 C 29.80 36.62 33.97 33.42 38.18 31.78 C 37.89 36.44 35.22 42.02 29.73 41.56 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 81.81 31.73 C 86.01 33.24 90.14 36.40 90.24 41.27 C 84.74 42.06 82.18 36.26 81.81 31.73 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 26.03 46.26 C 23.20 42.61 24.59 37.59 26.99 34.11 C 28.14 36.26 29.36 38.51 29.23 41.02 C 29.32 43.13 28.59 46.16 26.03 46.26 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 59.54 34.34 C 67.98 36.22 77.69 38.40 82.86 45.98 C 85.03 62.07 74.96 78.49 59.97 84.42 L 59.58 83.86 C 59.95 76.38 59.51 68.89 59.88 61.41 C 65.39 61.49 70.90 61.46 76.41 61.49 L 76.31 59.74 C 71.90 59.73 67.49 59.73 63.09 59.73 C 63.64 57.12 63.56 54.17 64.96 51.87 C 69.09 51.32 73.33 52.23 77.42 51.46 C 77.76 51.14 78.43 50.51 78.76 50.19 C 73.01 49.83 67.25 50.05 61.50 50.00 C 61.03 52.68 60.52 55.36 59.94 58.02 C 59.87 55.36 59.86 52.70 59.81 50.04 C 59.58 44.81 59.64 39.57 59.54 34.34 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 93.92 46.49 C 88.84 44.22 90.78 37.38 93.12 33.72 C 95.41 37.55 96.69 42.53 93.92 46.49 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 83.69 40.88 C 88.03 42.03 92.61 44.91 92.70 49.94 C 87.67 50.19 83.87 45.64 83.69 40.88 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 27.26 49.86 C 27.56 44.94 32.02 42.10 36.35 41.02 C 36.07 45.70 32.40 50.53 27.26 49.86 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 21.54 44.25 C 22.83 43.18 23.36 45.24 24.08 45.99 C 25.89 48.65 26.95 53.25 24.09 55.52 C 20.07 53.42 20.39 47.97 21.54 44.25 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 95.17 55.03 C 92.79 51.00 94.98 46.10 98.19 43.26 C 99.11 46.46 99.93 50.08 98.20 53.17 C 97.57 54.13 96.53 55.70 95.17 55.03 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 24.73 59.86 C 24.67 55.16 27.72 50.96 32.10 49.37 C 32.05 53.79 30.34 60.21 24.73 59.86 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 87.90 49.29 C 92.14 50.83 95.48 54.87 95.09 59.55 C 89.48 59.92 88.02 53.65 87.90 49.29 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 17.87 53.65 C 22.26 55.21 25.92 59.33 25.05 64.26 C 19.78 63.92 18.17 58.02 17.87 53.65 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 95.08 64.30 C 93.90 59.34 97.67 55.07 102.12 53.56 C 101.87 57.99 100.23 63.60 95.08 64.30 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 88.41 57.19 C 92.21 59.83 94.66 65.04 92.25 69.42 C 87.70 67.12 87.06 61.62 88.41 57.19 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 27.41 68.72 C 25.40 64.51 28.22 59.87 31.49 57.23 C 32.33 60.55 32.81 64.55 30.42 67.38 C 29.63 68.00 28.49 69.71 27.41 68.72 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 16.80 63.80 C 21.46 63.31 26.97 65.94 27.26 71.14 C 22.35 71.65 18.76 67.84 16.80 63.80 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 92.94 71.00 C 92.82 65.64 98.66 63.37 103.19 63.52 C 101.45 67.70 97.77 71.36 92.94 71.00 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 30.66 78.39 C 27.77 74.07 30.14 69.02 33.11 65.51 C 35.02 69.79 35.23 75.72 30.66 78.39 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 89.12 77.66 C 84.44 75.57 85.21 69.34 86.85 65.46 C 89.62 68.58 92.65 74.04 89.12 77.66 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 18.27 70.95 C 22.74 70.63 28.71 72.06 29.36 77.35 C 24.55 78.44 20.31 75.03 18.27 70.95 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 36.06 82.86 C 33.12 79.21 34.80 74.28 36.81 70.63 C 38.47 73.68 40.13 77.26 38.86 80.77 C 38.39 81.89 37.62 83.67 36.06 82.86 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 90.70 77.25 C 91.15 71.92 97.28 70.50 101.69 70.96 C 99.70 75.08 95.41 78.09 90.70 77.25 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 83.71 83.44 C 78.97 80.73 80.65 74.26 83.20 70.56 C 85.60 74.43 86.55 79.51 83.71 83.44 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 40.78 75.57 C 43.36 77.72 46.02 80.46 46.03 84.06 C 45.83 85.31 45.87 87.10 44.20 87.25 C 40.00 85.03 40.16 79.63 40.78 75.57 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 74.97 87.12 C 72.28 82.90 75.76 77.99 79.19 75.45 C 79.86 79.44 80.04 86.17 74.97 87.12 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 85.45 82.27 C 87.17 77.54 93.13 77.81 97.20 78.46 C 94.95 82.02 88.90 85.53 85.45 82.27 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 22.77 78.85 C 26.97 78.37 33.72 77.62 34.65 83.27 C 30.15 84.73 25.59 82.31 22.77 78.85 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 46.62 81.81 C 51.13 82.19 56.56 84.92 56.20 90.20 C 51.37 90.30 47.74 86.19 46.62 81.81 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 63.81 89.92 C 63.53 84.72 68.88 82.02 73.37 81.80 C 72.13 86.07 68.69 90.31 63.81 89.92 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 28.66 85.63 C 32.62 83.82 39.84 82.45 41.35 87.98 C 37.02 90.05 32.25 88.37 28.66 85.63 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 78.35 87.17 C 81.22 82.72 87.12 83.71 91.32 85.37 C 87.78 88.26 82.37 90.37 78.35 87.17 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 57.27 90.27 C 58.30 89.80 59.19 89.12 59.93 88.27 C 60.73 89.01 61.52 89.74 62.33 90.46 C 61.98 91.34 61.64 92.23 61.32 93.13 C 60.63 93.09 59.25 93.00 58.56 92.96 C 58.16 92.05 57.73 91.15 57.27 90.27 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 73.52 88.33 C 77.18 87.13 80.67 89.45 83.55 91.45 C 79.79 93.44 74.58 93.85 71.35 90.63 C 70.54 89.05 72.45 88.79 73.52 88.33 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 36.45 91.85 C 39.54 88.58 44.60 87.59 48.71 89.40 C 48.95 90.45 48.56 91.20 47.55 91.66 C 44.28 93.97 39.98 93.01 36.45 91.85 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 44.73 95.44 C 47.80 91.87 52.97 89.59 57.40 92.15 C 55.18 97.06 49.06 96.30 44.73 95.44 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 62.56 91.98 C 67.07 89.57 72.03 91.83 75.36 95.12 C 71.05 96.45 64.75 96.88 62.56 91.98 Z\\\" />\\r\\n</g>\\r\\n<g id=\\\"#1d8bc9ff\\\">\\r\\n<path fill=\\\"#1d8bc9\\\" opacity=\\\"1.00\\\" d=\\\" M 36.50 45.40 C 42.01 38.43 51.06 36.17 59.33 34.42 C 59.37 39.63 59.36 44.84 59.55 50.04 C 54.18 49.98 48.81 49.98 43.44 50.03 C 42.83 53.88 42.16 57.71 41.48 61.54 C 42.32 61.49 44.01 61.39 44.85 61.34 C 45.10 59.80 45.36 58.27 45.62 56.73 C 49.64 56.78 53.65 56.77 57.66 56.53 C 58.35 57.07 59.04 57.63 59.72 58.19 C 58.97 66.67 59.33 75.17 59.26 83.67 C 58.85 83.73 58.02 83.85 57.61 83.91 C 49.23 79.46 41.74 72.57 38.51 63.44 C 36.53 57.73 35.06 51.36 36.50 45.40 Z\\\" />\\r\\n<path fill=\\\"#1d8bc9\\\" opacity=\\\"1.00\\\" d=\\\" M 46.36 51.85 C 50.74 51.67 55.12 51.70 59.49 51.79 C 59.52 52.70 59.59 54.52 59.63 55.43 C 55.10 54.76 50.52 55.02 45.97 55.01 C 46.07 54.22 46.27 52.64 46.36 51.85 Z\\\" />\\r\\n</g>\\r\\n<g id=\\\"#1b2132ff\\\">\\r\\n<path fill=\\\"#1b2132\\\" opacity=\\\"1.00\\\" d=\\\" M 43.44 50.03 C 48.81 49.98 54.18 49.98 59.55 50.04 L 59.81 50.04 C 59.86 52.70 59.87 55.36 59.94 58.02 C 60.52 55.36 61.03 52.68 61.50 50.00 C 67.25 50.05 73.01 49.83 78.76 50.19 C 78.43 50.51 77.76 51.14 77.42 51.46 C 73.33 52.23 69.09 51.32 64.96 51.87 C 63.56 54.17 63.64 57.12 63.09 59.73 C 67.49 59.73 71.90 59.73 76.31 59.74 L 76.41 61.49 C 70.90 61.46 65.39 61.49 59.88 61.41 C 59.51 68.89 59.95 76.38 59.58 83.86 L 59.26 83.67 C 59.33 75.17 58.97 66.67 59.72 58.19 C 59.04 57.63 58.35 57.07 57.66 56.53 C 53.65 56.77 49.64 56.78 45.62 56.73 C 45.36 58.27 45.10 59.80 44.85 61.34 C 44.01 61.39 42.32 61.49 41.48 61.54 C 42.16 57.71 42.83 53.88 43.44 50.03 M 46.36 51.85 C 46.27 52.64 46.07 54.22 45.97 55.01 C 50.52 55.02 55.10 54.76 59.63 55.43 C 59.59 54.52 59.52 52.70 59.49 51.79 C 55.12 51.70 50.74 51.67 46.36 51.85 Z\\\" />\\r\\n</g>\\r\\n</svg>\\r\\n\"","module.exports = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" ?>\\r\\n<!DOCTYPE svg PUBLIC \\\"-//W3C//DTD SVG 1.1//EN\\\" \\\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\\\">\\r\\n<svg width=\\\"250pt\\\" height=\\\"248pt\\\" viewBox=\\\"0 0 250 248\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\r\\n<g id=\\\"#12162235\\\">\\r\\n<path fill=\\\"#121622\\\" opacity=\\\"0.21\\\" d=\\\" M 124.99 0.99 C 150.84 0.57 176.62 9.21 197.45 24.41 C 228.84 47.04 248.69 85.20 248.01 124.00 C 247.51 124.01 246.52 124.01 246.02 124.01 C 245.68 94.72 234.95 65.53 215.21 43.76 C 196.05 22.03 168.81 7.60 140.03 4.13 C 135.03 3.57 130.02 3.07 125.00 2.98 C 125.00 2.48 124.99 1.49 124.99 0.99 Z\\\" />\\r\\n<path fill=\\\"#121622\\\" opacity=\\\"0.21\\\" d=\\\" M 87.75 14.85 C 100.31 10.31 113.66 8.04 127.01 8.03 C 127.01 8.50 127.00 9.43 127.00 9.90 C 101.63 10.02 76.36 18.65 56.49 34.48 C 34.52 51.72 19.17 77.25 14.61 104.84 C 10.40 129.25 14.42 155.03 26.05 176.93 C 38.57 200.90 59.92 220.10 85.08 230.01 C 98.38 235.37 112.70 237.88 127.00 238.11 C 127.00 238.57 127.01 239.51 127.01 239.97 C 100.41 240.06 73.91 230.60 53.43 213.63 C 32.40 196.49 17.75 171.72 12.94 145.02 C 7.92 118.05 12.84 89.33 26.76 65.67 C 40.31 42.28 62.30 23.95 87.75 14.85 Z\\\" />\\r\\n<path fill=\\\"#121622\\\" opacity=\\\"0.21\\\" d=\\\" M 127.00 18.02 C 152.65 17.95 178.15 27.61 197.28 44.69 C 214.39 59.84 226.48 80.61 230.88 103.06 C 235.76 127.08 232.01 152.78 220.27 174.31 C 208.30 196.63 188.04 214.36 164.30 223.21 C 152.42 227.73 139.70 229.94 127.00 229.98 C 127.00 229.51 127.00 228.57 127.00 228.10 C 150.94 228.00 174.77 219.55 193.18 204.19 C 210.94 189.53 223.70 168.90 228.58 146.37 C 233.77 123.02 230.59 97.88 219.57 76.62 C 206.84 51.62 183.60 32.23 156.67 24.31 C 147.07 21.32 137.02 20.15 127.00 19.89 C 127.00 19.42 127.00 18.48 127.00 18.02 Z\\\" />\\r\\n<path fill=\\\"#121622\\\" opacity=\\\"0.21\\\" d=\\\" M 1.99 123.99 C 2.49 123.99 3.49 124.00 3.98 124.00 C 4.31 153.04 14.87 181.98 34.30 203.70 C 53.50 225.70 80.92 240.40 109.94 243.87 C 114.94 244.43 119.96 244.94 125.01 245.02 C 125.01 245.51 125.01 246.51 125.01 247.01 C 99.60 247.46 74.27 239.05 53.62 224.36 C 21.62 201.82 1.29 163.26 1.99 123.99 Z\\\" />\\r\\n</g>\\r\\n</svg>\\r\\n\"","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _base = require('../common/base.js');\n\nvar _base2 = _interopRequireDefault(_base);\n\nvar _geometry = require('../../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _pointat = require('../common/pointat.js');\n\nvar _pointat2 = _interopRequireDefault(_pointat);\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _utils = require('../../common/utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nvar _iconcircle = require('../icon/iconcircle.js');\n\nvar _iconcircle2 = _interopRequireDefault(_iconcircle);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Dount = function (_VisChartBase) {\n    _inherits(Dount, _VisChartBase);\n\n    function Dount(box, width, height) {\n        _classCallCheck(this, Dount);\n\n        var _this = _possibleConstructorReturn(this, (Dount.__proto__ || Object.getPrototypeOf(Dount)).call(this, box, width, height));\n\n        _this.name = 'Dount_' + Date.now();\n\n        _this._setSize(width, height);\n        return _this;\n    }\n\n    _createClass(Dount, [{\n        key: '_setSize',\n        value: function _setSize(width, height) {\n            _get(Dount.prototype.__proto__ || Object.getPrototypeOf(Dount.prototype), '_setSize', this).call(this, width, height);\n\n            this.outPercent = .53;\n            this.inPercent = .37;\n\n            this.circleLinePercent = .34;\n            this.circlePercent = .31;\n            this.circleLineRotation = 0;\n            this.circleLineRotationStep = 4;\n\n            this.animationStep = 8;\n            this.angleStep = 5;\n\n            this.textHeight = 26;\n            this.lineOffset = 50;\n\n            this.path = [];\n            this.line = [];\n\n            this.textOffset = 4;\n\n            this.lineColor = '#24a3ea';\n\n            this.lineRange = {\n                \"1\": [],\n                \"2\": [],\n                \"4\": [],\n                \"8\": []\n            };\n\n            this.lineWidth = 40;\n            this.lineSpace = 10;\n            this.lineAngle = 35;\n            this.lineHeight = 21;\n            this.lineCurveLength = 30;\n\n            this.loopSort = [4, 8, 1, 2];\n\n            this.clearList = [];\n\n            this.init();\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            this.calcLayoutPosition();\n\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(data, allData) {\n            _get(Dount.prototype.__proto__ || Object.getPrototypeOf(Dount.prototype), 'update', this).call(this, data, allData);\n\n            this.data = data;\n            this.allData = allData;\n\n            this.countAngle = 0;\n            this.isDone = 0;\n            this.lineLengthCount = 0;\n\n            if (!_jsonUtilsx2.default.jsonInData(this.data, 'data')) return;\n\n            this.clearItems();\n            this.calcDataPosition();\n            this.initDataLayout();\n\n            //console.log( 'dount update', this.data, this, utils );\n\n            this.animation();\n            !this.inited && this.animationCircleLine();\n\n            this.inited = 1;\n\n            return this;\n        }\n    }, {\n        key: 'reset',\n        value: function reset() {\n            this.path.map(function (val) {\n                val.pathData = [];\n            });\n        }\n    }, {\n        key: 'animationCircleLine',\n        value: function animationCircleLine() {\n            var _this2 = this;\n\n            if (this.isDestroy) return;\n            if (!this.circleLine) return;\n\n            if (!this.isAnimation()) {\n                return;\n            }\n\n            this.circleLineRotation += this.circleLineRotationStep;\n\n            this.circleLine.rotation(this.circleLineRotation);\n            this.stage.add(this.layoutLayer);\n\n            window.requestAnimationFrame(function () {\n                _this2.animationCircleLine();\n            });\n        }\n    }, {\n        key: 'animation',\n        value: function animation() {\n            var _this3 = this;\n\n            if (this.isDestroy) return;\n            if (this.isDone) return;\n\n            var tmp = void 0,\n                tmppoint = void 0,\n                step = this.angleStep;\n\n            this.countAngle += this.animationStep;\n\n            if (!this.isSeriesAnimation()) {\n                this.countAngle = this.totalAngle;\n            }\n\n            if (this.countAngle >= this.totalAngle || !this.isAnimation()) {\n                this.countAngle = this.totalAngle;\n                this.isDone = 1;\n            }\n\n            this.reset();\n\n            for (var i = this.path.length - 1; i >= 0; i--) {\n                //for( let i = 0; i < this.path.length; i++ ){\n                //let i = 2;\n                var item = this.path[i];\n\n                //console.log( i, item, item.itemData.endAngle, item.itemData.value );\n\n                var tmpAngle = this.countAngle;\n\n                if (tmpAngle >= item.itemData.endAngle) {\n                    tmpAngle = item.itemData.endAngle;\n                }\n\n                if (tmpAngle < item.itemData.startAngle) continue;\n\n                item.arc.angle(tmpAngle);\n            }\n            this.stage.add(this.arcLayer);\n\n            window.requestAnimationFrame(function () {\n                _this3.animation();\n            });\n\n            if (this.isDone) {\n                window.requestAnimationFrame(function () {\n                    _this3.animationLine();\n                });\n            }\n        }\n    }, {\n        key: 'drawCircle',\n        value: function drawCircle() {\n            this.circleRadius = Math.ceil(this.circlePercent * this.min / 2);\n\n            this.circle = new _konva2.default.Circle({\n                x: this.fixCx(),\n                y: this.fixCy(),\n                radius: this.circleRadius,\n                stroke: this.lineColor,\n                strokeWidth: 2.5,\n                fill: '#ffffff00'\n            });\n            this.addDestroy(this.circle);\n            this.layoutLayer.add(this.circle);\n        }\n    }, {\n        key: 'drawCircleLine',\n        value: function drawCircleLine() {\n            this.circleLineRadius = Math.ceil(this.circleLinePercent * this.min / 2);\n\n            var points = [];\n            points.push('M');\n            for (var i = 90; i <= 180; i++) {\n                var tmp = geometry.distanceAngleToPoint(this.circleLineRadius, i);\n                points.push([tmp.x, tmp.y].join(',') + ',');\n                if (i == 90) {\n                    points.push('L');\n                }\n            }\n            points.push('M');\n            for (var _i = 270; _i <= 360; _i++) {\n                var _tmp = geometry.distanceAngleToPoint(this.circleLineRadius, _i);\n                points.push([_tmp.x, _tmp.y].join(',') + ',');\n                if (_i == 270) {\n                    points.push('L');\n                }\n            }\n\n            this.circleLine = new _konva2.default.Path({\n                data: points.join(''),\n                x: this.fixCx(),\n                y: this.fixCy(),\n                stroke: this.lineColor,\n                strokeWidth: 2.5,\n                fill: '#ffffff00'\n            });\n            this.addDestroy(this.circleLine);\n\n            this.layoutLayer.add(this.circleLine);\n        }\n    }, {\n        key: 'initDataLayout',\n        value: function initDataLayout() {\n\n            if (!this.inited) {\n                this.layoutLayer = new _konva2.default.Layer();\n                this.addDestroy(this.layoutLayer);\n\n                this.drawCircle();\n                this.drawCircleLine();\n\n                this.stage.add(this.layoutLayer);\n\n                this.arcLayer = new _konva2.default.Layer();\n                this.addDestroy(this.arcLayer);\n            }\n\n            this.path = [];\n            this.line = [];\n\n            for (var ii = this.data.data.length - 1; ii >= 0; ii--) {\n                var val = this.data.data[ii],\n                    key = ii;\n                var pathindex = this.data.data.length - 1 - ii;\n\n                var color = this.colors[key % this.colors.length];\n\n                if (_jsonUtilsx2.default.jsonInData(val, 'itemStyle.color')) {\n                    //path.fill( val.itemStyle.color );\n                    color = val.itemStyle.color;\n                }\n                //console.log(  ii, pathindex );\n\n                //console.log( this.path[pathindex], pathindex, this.path );\n\n                var params = {\n                    x: this.fixCx(),\n                    y: this.fixCy(),\n                    innerRadius: this.inRadius,\n                    outerRadius: this.outRadius,\n                    angle: this.countAngle,\n                    fill: color,\n                    stroke: color,\n                    strokeWidth: 0\n                    //, rotation: this.arcOffset\n                };\n                var arc = new _konva2.default.Arc(params);\n                this.clearList.push(arc);\n\n                var line = new _konva2.default.Line({\n                    x: this.fixCx(),\n                    y: this.fixCy(),\n                    points: [0, 0, 0, 0],\n                    stroke: '#ffffff',\n                    strokeWidth: 2\n                });\n                this.line.push(line);\n                this.clearList.push(line);\n\n                var tmp = {\n                    arc: arc,\n                    pathData: [],\n                    itemData: val,\n                    line: line\n                };\n\n                this.path.push(tmp);\n\n                this.arcLayer.add(arc);\n                this.arcLayer.add(line);\n            };\n\n            this.stage.add(this.arcLayer);\n\n            return this;\n        }\n    }, {\n        key: 'animationLine',\n        value: function animationLine() {\n            var _this4 = this;\n\n            if (this.lineLengthCount >= this.lineLength) {\n                return;\n            }\n            this.lineLengthCount = this.lineLength;\n\n            this.lineLengthCount += this.lineLengthStep;\n\n            if (this.lineLengthCount >= this.lineLength || !this.isAnimation()) {\n                this.lineLengthCount = this.lineLength;\n            }\n            for (var i = 0; i < this.path.length; i++) {\n                var path = this.path[i];\n                var layer = this.arcLayer;\n\n                var lineEnd = path.itemData.lineEnd;\n                var lineExpend = path.itemData.lineExpend;\n\n                var line = this.line[i];\n                line.points([path.itemData.lineStart.x, path.itemData.lineStart.y, lineEnd.x, lineEnd.y, lineExpend.x, lineExpend.y]);\n\n                if (this.lineLengthCount >= this.lineLength) {\n                    this.addText(path, layer);\n                    this.addIcon(path, layer);\n                } else {\n                    window.requestAnimationFrame(function () {\n                        _this4.animationLine();\n                    });\n                }\n\n                this.stage.add(layer);\n            }\n        }\n    }, {\n        key: 'addIcon',\n        value: function addIcon(path, layer) {\n            if (!path.lineicon) {\n                path.lineicon = new _iconcircle2.default(this.box, this.fixWidth(), this.fixHeight());\n                this.clearList.push(path.lineicon);\n            }\n            //console.log( path );\n            var icon = path.lineicon;\n            icon.setOptions({\n                stage: this.stage,\n                layer: layer,\n                cx: this.fixCx(),\n                cy: this.fixCy()\n            });\n            icon.update(path.itemData.lineExpend);\n        }\n    }, {\n        key: 'addText',\n        value: function addText(path, layer) {\n            if (!path.text) {\n                var tmp = path.text = new _konva2.default.Text({\n                    x: 0,\n                    y: 0,\n                    text: path.itemData.percent + '%',\n                    fill: '#a3a7f3',\n                    fontFamily: 'MicrosoftYaHei',\n                    fontSize: 16,\n                    fontStyle: 'italic'\n                });\n                this.clearList.push(tmp);\n            }\n            var text = path.text;\n\n            var textPoint = path.itemData.textPoint,\n                angleDirect = path.itemData.pointDirection.autoAngle();\n\n            textPoint = _jsonUtilsx2.default.clone(path.itemData.lineEnd);\n            textPoint.y -= text.textHeight + 1;\n\n            switch (angleDirect) {\n                case 1:\n                    {\n                        textPoint.x -= text.textWidth;\n                        break;\n                    }\n                case 2:\n                    {\n                        break;\n                    }\n                case 4:\n                    {\n                        break;\n                    }\n                case 8:\n                    {\n                        textPoint.x -= text.textWidth;\n                        break;\n                    }\n            }\n\n            var textX = this.fixCx() + textPoint.x,\n                textY = this.fixCy() + textPoint.y,\n                direct = path.itemData.pointDirection.auto();\n\n            text.x(textX);\n            text.y(textY);\n            layer.add(text);\n        }\n    }, {\n        key: 'calcLayoutPosition',\n        value: function calcLayoutPosition() {\n            //console.log( 'calcLayoutPosition', Date.now() );\n\n            this.outRadius = Math.ceil(this.outPercent * this.min / 2);\n            this.inRadius = Math.ceil(this.inPercent * this.min / 2);\n\n            this.lineLength = (Math.min(this.fixWidth(), this.fixHeight()) - this.outRadius * 2) / 2 - this.lineOffset;\n            this.lineLengthCount = 1;\n            this.lineLengthStep = .5;\n\n            this.lineLeft = this.fixCx() - this.outRadius - this.lineSpace;\n            this.lineRight = this.fixCx() + this.outRadius + this.lineSpace;\n\n            return this;\n        }\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            this.clearItems();\n            _get(Dount.prototype.__proto__ || Object.getPrototypeOf(Dount.prototype), 'destroy', this).call(this);\n        }\n    }, {\n        key: 'clearItems',\n        value: function clearItems() {\n            this.clearList.map(function (item) {\n                item.remove();\n                item.destroy();\n            });\n            this.clearList = [];\n        }\n    }, {\n        key: 'calcDataPosition',\n        value: function calcDataPosition() {\n            var _this5 = this;\n\n            if (!this.data) return;\n\n            var total = 0,\n                tmp = 0;\n\n            this.data.data.map(function (val) {\n                //console.log( val );\n                total += val.value;\n            });\n            this.total = total;\n\n            this.data.data.map(function (val) {\n                val._percent = utils.parseFinance(val.value / total);\n                tmp = utils.parseFinance(tmp + val._percent);\n                val._totalPercent = tmp;\n\n                val.percent = parseInt(val._percent * 100);\n\n                val.endAngle = _this5.totalAngle * val._totalPercent;\n            });\n\n            //修正浮点数精确度\n            if (this.data.data.length) {\n                var item = this.data.data[this.data.data.length - 1];\n                tmp = tmp - item._percent;\n\n                item._percent = 1 - tmp;\n                item.percent = parseInt(item._percent * 100);\n                item._totalPercent = 1;\n                item.endAngle = this.totalAngle;\n            }\n\n            this.lineRange = {\n                \"1\": [],\n                \"2\": [],\n                \"4\": [],\n                \"8\": []\n                //计算开始角度, 计算指示线的2端\n            };this.data.data.map(function (val, key) {\n                if (!key) {\n                    val.startAngle = 0;\n                } else {\n                    val.startAngle = _this5.data.data[key - 1].endAngle;\n                }\n\n                val.midAngle = val.startAngle + (val.endAngle - val.startAngle) / 2;\n\n                val.lineStart = geometry.distanceAngleToPoint(_this5.outRadius, val.midAngle);\n                val.lineEnd = geometry.distanceAngleToPoint(_this5.outRadius + _this5.lineLength, val.midAngle);\n\n                val.textPoint = geometry.distanceAngleToPoint(_this5.outRadius + _this5.lineLength, val.midAngle);\n\n                val.pointDirection = new _pointat2.default(_this5.fixWidth(), _this5.fixHeight(), geometry.pointPlus(val.textPoint, _this5.cpoint));\n                var lineAngle = val.pointDirection.autoAngle();\n                val.lineExpend = _jsonUtilsx2.default.clone(val.lineEnd);\n\n                switch (lineAngle) {\n                    case 1:\n                    case 8:\n                        {\n                            //val.lineEnd.x = this.lineLeft;\n                            val.lineEnd.x = -(_this5.outRadius + _this5.lineSpace);\n\n                            var _tmp2 = geometry.pointDistance(val.lineStart, val.lineEnd);\n                            if (_tmp2 > _this5.lineCurveLength) {\n                                var tmpAngle = geometry.pointAngle(val.lineStart, val.lineEnd),\n                                    tmpPoint = geometry.distanceAngleToPoint(_this5.lineCurveLength, tmpAngle);\n                                tmpPoint = geometry.pointPlus(tmpPoint, val.lineStart);\n\n                                val.lineEnd.x = tmpPoint.x;\n                            }\n\n                            val.lineExpend.x = val.lineEnd.x - _this5.lineWidth;\n\n                            break;\n                        }\n                    default:\n                        {\n                            val.lineEnd.x = _this5.outRadius + _this5.lineSpace;\n                            var _tmp3 = geometry.pointDistance(val.lineStart, val.lineEnd);\n                            if (_tmp3 > _this5.lineCurveLength) {\n                                var _tmpAngle = geometry.pointAngle(val.lineStart, val.lineEnd),\n                                    _tmpPoint = geometry.distanceAngleToPoint(_this5.lineCurveLength, _tmpAngle);\n                                _tmpPoint = geometry.pointPlus(_tmpPoint, val.lineStart);\n\n                                val.lineEnd.x = _tmpPoint.x;\n                            }\n\n                            val.lineExpend.x = val.lineEnd.x + _this5.lineWidth;\n                            break;\n                        }\n                }\n\n                _this5.lineRange[lineAngle].push(val);\n            });\n\n            this.loopSort.map(function (key) {\n                var item = _this5.lineRange[key];\n                if (!(item && item.length && item.length > 1)) return;\n                var needFix = void 0;\n                for (var i = 1; i < item.length; i++) {\n                    var pre = item[i - 1],\n                        cur = item[i];\n                    if (Math.abs(cur.lineEnd.y - pre.lineEnd.y) < _this5.lineHeight) {\n                        needFix = 1;\n                        break;\n                    }\n                }\n                switch (key) {\n                    case 1:\n                        {\n                            var tmpY = item[0].lineEnd.y;\n                            //console.log( item );\n                            for (var _i2 = item.length - 2; _i2 >= 0; _i2--) {\n                                var _pre = item[_i2 + 1],\n                                    _cur = item[_i2];\n                                if (Math.abs(_pre.lineEnd.y - _cur.lineEnd.y) < _this5.lineHeight || _cur.lineEnd.y <= _pre.lineEnd.y) {\n                                    tmpY = _pre.lineEnd.y + _this5.lineHeight;\n                                    _cur.lineEnd.y = tmpY;\n\n                                    /*\n                                    if( cur.lineEnd.y < cur.lineStart.y ){\n                                        //tmpY = cur.lineStart.y + this.lineHeight;\n                                        //cur.lineEnd.y = tmpY;\n                                    }\n                                    */\n                                    _cur.lineExpend.y = tmpY;\n                                }\n                            }\n                            break;\n                        }\n                    case 2:\n                        {\n                            var _tmpY = item[0].lineEnd.y;\n                            for (var _i3 = 1; _i3 < item.length; _i3++) {\n                                var _pre2 = item[_i3 - 1],\n                                    _cur2 = item[_i3],\n                                    zero = item[0];\n\n                                if (Math.abs(_pre2.lineEnd.y + _this5.fixCy()) < _this5.lineHeight) {\n                                    _pre2.lineExpend.y = _pre2.lineEnd.y = _pre2.lineExpend.y + _this5.lineHeight;\n                                }\n                                if (Math.abs(_pre2.lineEnd.y - _cur2.lineEnd.y) < _this5.lineHeight || _cur2.lineEnd.y <= _pre2.lineEnd.y) {\n\n                                    _tmpY = _pre2.lineEnd.y + _this5.lineHeight;\n                                    _cur2.lineEnd.y = _tmpY;\n\n                                    /*\n                                    if( cur.lineEnd.y < cur.lineStart.y ){\n                                        //tmpY = cur.lineStart.y + this.lineHeight;\n                                        //cur.lineEnd.y = tmpY;\n                                    }\n                                    */\n                                    _cur2.lineExpend.y = _tmpY;\n                                }\n                            }\n\n                            break;\n                        }\n                    case 4:\n                        {\n                            var _tmpY2 = 0;\n                            for (var _i4 = item.length - 2; _i4 >= 0; _i4--) {\n                                var _pre3 = item[_i4 + 1],\n                                    _cur3 = item[_i4];\n                                if (Math.abs(_pre3.lineEnd.y - _cur3.lineEnd.y) < _this5.lineHeight || _cur3.lineEnd.y >= _pre3.lineEnd.y) {\n                                    //console.log( pre.lineEnd.y, cur.lineEnd.y );\n                                    _tmpY2 = _pre3.lineEnd.y - _this5.lineHeight;\n                                    _cur3.lineEnd.y = _tmpY2;\n                                    _cur3.lineExpend.y = _tmpY2;\n                                }\n                            }\n                            break;\n                        }\n                    case 8:\n                        {\n                            var _tmpY3 = 0;\n                            for (var _i5 = 1; _i5 < item.length; _i5++) {\n                                var _pre4 = item[_i5 - 1],\n                                    _cur4 = item[_i5];\n                                if (Math.abs(_pre4.lineEnd.y - _cur4.lineEnd.y) < _this5.lineHeight || _cur4.lineEnd.y >= _pre4.lineEnd.y) {\n                                    _tmpY3 = _pre4.lineEnd.y - _this5.lineHeight;\n                                    _cur4.lineEnd.y = _tmpY3;\n\n                                    /*\n                                    if( cur.lineEnd.y < cur.lineStart.y ){\n                                        //cur.lineEnd.y = cur.lineStart.y + this.lineHeight;\n                                    }\n                                    */\n                                    _cur4.lineExpend.y = _cur4.lineEnd.y;\n                                }\n                            }\n\n                            break;\n                        }\n                }\n            });\n        }\n    }]);\n\n    return Dount;\n}(_base2.default);\n\nexports.default = Dount;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _base = require('../common/base.js');\n\nvar _base2 = _interopRequireDefault(_base);\n\nvar _geometry = require('../../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _utils = require('../../common/utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar IconCircle = function (_VisChartBase) {\n    _inherits(IconCircle, _VisChartBase);\n\n    function IconCircle(box, width, height) {\n        _classCallCheck(this, IconCircle);\n\n        var _this = _possibleConstructorReturn(this, (IconCircle.__proto__ || Object.getPrototypeOf(IconCircle)).call(this, box, width, height));\n\n        _this.name = 'IconRound ' + Date.now();\n\n        _this.outRadius = 6;\n        _this.inRadius = 2.5;\n\n        _this.color = '#ffffff';\n\n        _this.max = 1.1;\n        _this.min = 0.8;\n\n        _this.step = .006;\n        _this.cur = 1;\n\n        _this.isplus = 1;\n\n        _this.init();\n        return _this;\n    }\n\n    _createClass(IconCircle, [{\n        key: 'init',\n        value: function init() {\n            return this;\n        }\n    }, {\n        key: 'opacity',\n        value: function opacity(num) {\n            this.group && this.group.opacity(num);\n\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(point) {\n            this.point = point;\n\n            if (!this.inited) {\n                this.group = new _konva2.default.Group({\n                    x: this.point.x + this.cx,\n                    y: this.point.y + this.cy,\n                    width: this.outRadius * 2,\n                    height: this.outRadius * 2\n                });\n                this.addDestroy(this.group);\n\n                this.circle = new _konva2.default.Circle({\n                    radius: this.inRadius,\n                    fill: this.color,\n                    stroke: this.color,\n                    x: 0,\n                    y: 0\n                });\n                this.addDestroy(this.circle);\n\n                this.outcircle = new _konva2.default.Circle({\n                    radius: this.outRadius,\n                    fill: '#ffffff00',\n                    stroke: this.color,\n                    strokeWidth: 1,\n                    x: 0,\n                    y: 0\n                });\n                this.addDestroy(this.outcircle);\n            } else {\n                this.group.x(this.point.x + this.cx);\n                this.group.y(this.point.y + this.cy);\n            }\n\n            this.group.add(this.circle);\n            this.group.scale({ x: this.cur, y: this.cur });\n            this.layer.add(this.group);\n\n            this.inited = 1;\n            //window.requestAnimationFrame( ()=>{ this.animation() } );\n        }\n    }, {\n        key: 'reset',\n        value: function reset() {}\n    }, {\n        key: 'animation',\n        value: function animation() {\n            var _this2 = this;\n\n            if (this.plus) {\n                this.cur = this.cur + this.step;\n\n                if (this.cur > this.max) {\n                    this.cur = this.max;\n                    this.plus = 0;\n                }\n            } else {\n                this.cur = this.cur - this.step;\n                if (this.cur < this.min) {\n                    this.cur = this.min;\n                    this.plus = 1;\n                }\n            }\n\n            this.group.scale({ x: this.cur, y: this.cur });\n\n            this.stage.add(this.layer);\n\n            window.requestAnimationFrame(function () {\n                _this2.animation();\n            });\n        }\n    }, {\n        key: 'initDataLayout',\n        value: function initDataLayout() {}\n    }, {\n        key: 'calcDataPosition',\n        value: function calcDataPosition() {}\n    }, {\n        key: 'animationLine',\n        value: function animationLine() {}\n    }, {\n        key: 'calcLayoutPosition',\n        value: function calcLayoutPosition() {}\n    }]);\n\n    return IconCircle;\n}(_base2.default);\n\nexports.default = IconCircle;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _base = require('../common/base.js');\n\nvar _base2 = _interopRequireDefault(_base);\n\nvar _geometry = require('../../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _pointat = require('../common/pointat.js');\n\nvar _pointat2 = _interopRequireDefault(_pointat);\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _utils = require('../../common/utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nvar _roundstatetext = require('../icon/roundstatetext.js');\n\nvar _roundstatetext2 = _interopRequireDefault(_roundstatetext);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Gauge = function (_VisChartBase) {\n    _inherits(Gauge, _VisChartBase);\n\n    function Gauge(box, width, height) {\n        _classCallCheck(this, Gauge);\n\n        var _this = _possibleConstructorReturn(this, (Gauge.__proto__ || Object.getPrototypeOf(Gauge)).call(this, box, width, height));\n\n        _this.name = 'Gauge' + Date.now();\n\n        _this._setSize(width, height);\n        return _this;\n    }\n\n    _createClass(Gauge, [{\n        key: '_setSize',\n        value: function _setSize(width, height) {\n            _get(Gauge.prototype.__proto__ || Object.getPrototypeOf(Gauge.prototype), '_setSize', this).call(this, width, height);\n\n            this.offsetCy = 15;\n\n            this.cy += this.offsetCy;\n\n            this.curRate = 0;\n            this.totalNum = 0;\n            this.totalNumStep = 5;\n\n            this.animationStep = 40 * 1;\n\n            this.roundRadiusPercent = .085;\n\n            this.lineColor = '#596ea7';\n\n            this.circleLinePercent = .26;\n            this.circlePercent = .28;\n\n            this.circleLineRotation = 0;\n            this.circleLineRotationStep = 4;\n\n            this.arcLinePercent = .39 / 2;\n\n            this.arcOutPercent = .38 / 2;\n            this.arcInPercent = .305 / 2;\n\n            this.arcLabelLength = 6;\n            this.arcTextLength = 20;\n\n            this.arcAngle = 280;\n            this.part = 22;\n            this.arcTotal = 1100;\n\n            this.textOffset = 0;\n\n            this.arcOffset = 90 + (360 - this.arcAngle) / 2;\n            this.arcOffsetPad = -5;\n            this.partLabel = this.part / 2;\n            this.partAngle = this.arcAngle / this.part;\n            this.partNum = this.arcTotal / this.part;\n\n            this.textOffsetX = -1;\n            this.textOffsetY = -8;\n            this.textLineLength = 6;\n\n            this.textRectWidthPercent = .5;\n            this.textRectHeightPercent = .11;\n\n            this.textRoundPercent = .38;\n            this.textRoundOffsetAngle = 160;\n            this.textRoundPlusAngle = 110;\n            this.textRoundMaxAngle = this.textRoundOffsetAngle + this.textRoundPlusAngle * 2;\n            this.roundStatusRaidus = 30;\n            this.textRoundAngle = [{\n                angle: this.textRoundOffsetAngle,\n                text: '低',\n                point: {},\n                min: 0,\n                max: 100,\n                radius: this.roundStatusRaidus,\n                lineColor: this.lineColor\n            }, {\n                angle: this.textRoundOffsetAngle + this.textRoundPlusAngle,\n                text: '中',\n                point: {},\n                min: 101,\n                max: 500,\n                radius: this.roundStatusRaidus,\n                lineColor: this.lineColor\n            }, {\n                angle: this.textRoundOffsetAngle + this.textRoundPlusAngle * 2,\n                text: '高',\n                point: {},\n                min: 501,\n                max: Math.pow(10, 10),\n                radius: this.roundStatusRaidus,\n                lineColor: this.lineColor\n            }];\n\n            this.init();\n        }\n    }, {\n        key: 'getAttackRateAngle',\n        value: function getAttackRateAngle() {\n            var r = 0;\n\n            r = this.arcOffset + this.arcAngle * this.getAttackRatePercent();\n\n            return r;\n        }\n    }, {\n        key: 'getAttackRatePercent',\n        value: function getAttackRatePercent() {\n            var r = 0,\n                tmp = void 0;\n            if (this.curRate) {\n                tmp = this.curRate;\n                if (tmp > this.arcTotal) {\n                    tmp = this.arcTotal;\n                }\n\n                r = tmp / this.arcTotal;\n            }\n            return r;\n        }\n    }, {\n        key: 'getAttackText',\n        value: function getAttackText() {\n            var _this2 = this;\n\n            var text = '低';\n\n            if (this.curRate) {\n                this.textRoundAngle.map(function (val) {\n                    if (_this2.curRate >= val.min && _this2.curRate <= val.max) {\n                        text = val.text;\n                    }\n                });\n            }\n\n            return text + '\\u9891\\n\\u653B\\u51FB';\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            var _this3 = this;\n\n            this.textRoundRadius = this.width * this.textRoundPercent * this.sizeRate;\n\n            this.roundRadius = this.width * this.roundRadiusPercent * this.sizeRate;\n\n            this.arcInRadius = this.width * this.arcInPercent * this.sizeRate;\n            this.arcOutRadius = this.width * this.arcOutPercent * this.sizeRate;\n\n            this.arcLineRaidus = Math.ceil(this.arcLinePercent * this.max) * this.sizeRate;\n\n            this.textWidth = this.textRectWidthPercent * this.width;\n            this.textHeight = 38 * this.sizeRate;\n            this.textX = this.cx - this.textWidth / 2;\n            this.textY = this.cy + this.arcLineRaidus + this.arcTextLength / 2 + 2;\n\n            this.textRoundAngle.map(function (val, key) {\n                var point = geometry.distanceAngleToPoint(_this3.textRoundRadius, val.angle);\n                val.point = geometry.pointPlus(point, _this3.cpoint);\n                val.point.y += _this3.offsetCy;\n            });\n\n            this.arcPartLineAr = [];\n            this.arcOutlinePartAr = [];\n            this.textAr = [];\n            for (var i = 0; i <= this.part; i++) {\n                var start = void 0,\n                    end = void 0,\n                    angle = void 0;\n                angle = i * this.partAngle + this.arcOffset;\n\n                if (i && i < this.part) {\n                    start = geometry.distanceAngleToPoint(this.arcInRadius, angle);\n                    end = geometry.distanceAngleToPoint(this.arcOutRadius, angle);\n\n                    this.arcPartLineAr.push('M');\n                    this.arcPartLineAr.push([start.x, start.y].join(','));\n                    this.arcPartLineAr.push('L');\n                    this.arcPartLineAr.push([end.x, end.y].join(','));\n                }\n\n                start = geometry.distanceAngleToPoint(this.arcLineRaidus, angle);\n                end = geometry.distanceAngleToPoint(this.arcLineRaidus + this.arcLabelLength, angle);\n\n                this.arcOutlinePartAr.push('M');\n                this.arcOutlinePartAr.push([start.x, start.y].join(','));\n                this.arcOutlinePartAr.push('L');\n                this.arcOutlinePartAr.push([end.x, end.y].join(','));\n\n                if (!(i * this.partNum % 100) || i === 0) {\n                    var angleOffset = 8,\n                        lengthOffset = 0;\n\n                    if (i === 0) {\n                        angleOffset = 1;\n                    }\n\n                    if (i >= 19) {\n                        angleOffset = 14;\n                    }\n                    if (i >= 21) {\n                        angleOffset = 18;\n                    }\n                    var text = {\n                        text: i * this.partNum,\n                        angle: angle - angleOffset,\n                        point: geometry.distanceAngleToPoint(this.arcLineRaidus + this.arcTextLength + lengthOffset, angle - angleOffset)\n                    };\n                    text.textPoint = new _pointat2.default(this.width, this.height, geometry.pointPlus(text.point, this.cpoint));\n\n                    this.textAr.push(text);\n                }\n            }\n        }\n    }, {\n        key: 'initRoundText',\n        value: function initRoundText() {\n            var _this4 = this;\n\n            this.textRoundAngle.map(function (val) {\n\n                if (!val.ins) {\n                    val.ins = new _roundstatetext2.default(_this4.box, _this4.width, _this4.height);\n                    val.ins.setOptions(Object.assign(val, {\n                        stage: _this4.stage,\n                        layer: _this4.layoutLayer,\n                        data: _this4.data,\n                        allData: _this4.allData\n                    }));\n                    val.ins.init();\n                }\n                val.ins.update(_this4.curRate);\n            });\n        }\n        /*\n        {\n        \"series\": [\n            {\n                \"type\": \"gauge\",\n                \"data\": [\n                    {\n                        \"value\": 200,\n                        \"total\": 134567,\n                        \"name\": \"完成率\"\n                    }\n                ]\n            }\n        ]\n        }\n        */\n\n    }, {\n        key: 'update',\n        value: function update(data, allData) {\n            var _this5 = this;\n\n            this.stage.removeChildren();\n            _get(Gauge.prototype.__proto__ || Object.getPrototypeOf(Gauge.prototype), 'update', this).call(this, data, allData);\n\n            //console.log( 123, data );\n\n            if (data && data.data && data.data.length) {\n                data.data.map(function (val) {\n                    _this5.curRate = val.value;\n                    _this5.totalNum = val.total;\n                });\n            }\n\n            /*\n            this.curRate = 600;\n            this.totalNum = 234567;\n            */\n\n            this.initDataLayout();\n\n            //console.log( 'gauge update', this.getAttackRateAngle() )\n            this.angle = this.arcOffset + this.arcOffsetPad;\n            this.animationAngle = this.getAttackRateAngle() + this.arcOffsetPad;\n            //console.log( this.angle, this.animationAngle );\n\n            this.updateWedge();\n\n            if (this.curRate) {\n                this.rateStep = Math.floor(this.curRate / (this.animationStep * 2));\n                !this.inited && this.animation();\n            }\n            if (this.totalNum) {\n                this.totalNumStep = Math.floor(this.totalNum / this.animationStep);\n                this.totalNumCount = 0;\n                this.animationText();\n            }\n\n            !this.inited && this.animationCircleLine();\n\n            this.inited = 1;\n        }\n    }, {\n        key: 'animationCircleLine',\n        value: function animationCircleLine() {\n            var _this6 = this;\n\n            //console.log( 'animationCircleLine' );\n            if (this.isDestroy) return;\n            if (!this.circleLine) return;\n\n            if (!this.isAnimation()) {\n                return;\n            }\n\n            this.circleLineRotation += this.circleLineRotationStep;\n\n            this.circleLine.rotation(this.circleLineRotation);\n            this.stage.add(this.layoutLayer);\n\n            window.requestAnimationFrame(function () {\n                _this6.animationCircleLine();\n            });\n        }\n    }, {\n        key: 'drawText',\n        value: function drawText() {\n\n            var params = {\n                text: 0 + '',\n                x: this.cx,\n                y: this.textY,\n                fontSize: 26 * this.sizeRate,\n                fontFamily: 'HuXiaoBoKuHei',\n                fill: '#ffffff',\n                fontStyle: 'italic'\n            },\n                tmp = _jsonUtilsx2.default.clone(params);\n            tmp.text = this.totalNum;\n\n            this.totalText = new _konva2.default.Text(params);\n            this.addDestroy(this.totalText);\n\n            this.totalText.x(this.cx - this.totalText.textWidth / 2);\n            this.totalText.y(this.textY + 5);\n\n            this.tmpTotalText = new _konva2.default.Text(tmp);\n            this.addDestroy(this.tmpTotalText);\n        }\n    }, {\n        key: 'drawTextRect',\n        value: function drawTextRect() {\n\n            var textWidth = this.tmpTotalText.textWidth + 30,\n                textX = 0;\n            if (textWidth < 170) {\n                textWidth = 170;\n            }\n            textX = this.cx - textWidth / 2 + 2;\n\n            this.textRect = new _konva2.default.Rect({\n                fill: '#596ea7',\n                stroke: '#ffffff00',\n                strokeWidth: 0,\n                opacity: .3,\n                width: textWidth,\n                height: this.textHeight,\n                x: textX,\n                y: this.textY\n            });\n            this.addDestroy(this.textRect);\n\n            var points = [];\n            points.push('M', [textX, this.textY + this.textLineLength].join(','));\n            points.push('L', [textX, this.textY].join(','));\n            points.push('L', [textX + this.textLineLength, this.textY].join(','));\n\n            points.push('M', [textX + textWidth - this.textLineLength, this.textY].join(','));\n            points.push('L', [textX + textWidth, this.textY].join(','));\n            points.push('L', [textX + textWidth, this.textY + this.textLineLength].join(','));\n\n            points.push('M', [textX + textWidth, this.textY + this.textHeight - this.textLineLength].join(','));\n            points.push('L', [textX + textWidth, this.textY + this.textHeight].join(','));\n            points.push('L', [textX + textWidth - this.textLineLength, this.textY + this.textHeight].join(','));\n\n            points.push('M', [textX + this.textLineLength, this.textY + this.textHeight].join(','));\n            points.push('L', [textX, this.textY + this.textHeight].join(','));\n            points.push('L', [textX, this.textY + this.textHeight - this.textLineLength].join(','));\n\n            this.textLinePath = new _konva2.default.Path({\n                data: points.join(''),\n                stroke: this.lineColor,\n                strokeWidth: 1\n            });\n            this.addDestroy(this.textLinePath);\n\n            this.layoutLayer.add(this.textLinePath);\n            this.layoutLayer.add(this.textRect);\n            this.layoutLayer.add(this.totalText);\n        }\n    }, {\n        key: 'drawArcText',\n        value: function drawArcText() {\n            var _this7 = this;\n\n            if (!(this.textAr && this.textAr.length)) return;\n\n            this.textAr.map(function (val) {\n                var text = new _konva2.default.Text({\n                    x: val.point.x + _this7.cx,\n                    y: val.point.y + _this7.cy,\n                    text: val.text + '',\n                    fontSize: 11 * _this7.sizeRate\n                    //, rotation: val.angle\n                    , fontFamily: 'MicrosoftYaHei',\n                    fill: _this7.lineColor\n                });\n                _this7.addDestroy(text);\n                text.rotation(val.angle + 90);\n\n                _this7.layoutLayer.add(text);\n            });\n        }\n    }, {\n        key: 'drawArcLine',\n        value: function drawArcLine() {\n\n            var points = [];\n            points.push('M');\n            for (var i = this.arcOffset; i <= this.arcOffset + this.arcAngle; i += 0.5) {\n                var tmp = geometry.distanceAngleToPoint(this.arcLineRaidus, i);\n                points.push([tmp.x, tmp.y].join(',') + ',');\n                if (i == 90) {\n                    points.push('L');\n                }\n            }\n\n            this.arcLine = new _konva2.default.Path({\n                data: points.join(''),\n                x: this.cx,\n                y: this.cy,\n                stroke: this.lineColor,\n                strokeWidth: 1,\n                fill: '#ffffff00'\n            });\n            this.addDestroy(this.arcLine);\n\n            this.arcPartLine = new _konva2.default.Path({\n                data: this.arcPartLineAr.join(''),\n                x: this.cx,\n                y: this.cy,\n                stroke: '#00000088',\n                strokeWidth: 1,\n                fill: '#ffffff00'\n            });\n            this.addDestroy(this.arcPartLine);\n\n            this.arcOutlinePart = new _konva2.default.Path({\n                data: this.arcOutlinePartAr.join(''),\n                x: this.cx,\n                y: this.cy,\n                stroke: this.lineColor,\n                strokeWidth: 1,\n                fill: '#ffffff00'\n            });\n            this.addDestroy(this.arcOutlinePart);\n\n            this.layoutLayer.add(this.arcLine);\n            this.layoutLayer.add(this.arcPartLine);\n            this.layoutLayer.add(this.arcOutlinePart);\n        }\n    }, {\n        key: 'drawArc',\n        value: function drawArc() {\n\n            var params = {\n                x: this.cx,\n                y: this.cy,\n                innerRadius: this.arcInRadius,\n                outerRadius: this.arcOutRadius,\n                angle: this.arcAngle\n                //, fill: 'red'\n                , stroke: '#ffffff00',\n                strokeWidth: 0,\n                rotation: this.arcOffset,\n                fillLinearGradientStartPoint: { x: -50, y: -50 },\n                fillLinearGradientEndPoint: { x: 50, y: 50 },\n                fillLinearGradientColorStops: [0, '#ff9000', .5, '#64b185', 1, '#5a78ca']\n            };\n            this.arc = new _konva2.default.Arc(params);\n            this.addDestroy(this.arc);\n\n            this.layoutLayer.add(this.arc);\n        }\n    }, {\n        key: 'initDataLayout',\n        value: function initDataLayout() {\n\n            if (!this.inited) {\n                this.layer = new _konva2.default.Layer();\n                this.addDestroy(this.layer);\n\n                this.layoutLayer = new _konva2.default.Layer();\n                this.addDestroy(this.layoutLayer);\n\n                this.roundLine = new _konva2.default.Circle({\n                    x: this.cx,\n                    y: this.cy,\n                    radius: this.roundRadius,\n                    stroke: this.lineColor,\n                    strokeWidth: 2.5,\n                    fill: 'rgba( 0, 0, 0, .5 )'\n                });\n                this.addDestroy(this.roundLine);\n            }\n\n            if (!this.inited) {\n                this.percentText = new _konva2.default.Text({\n                    x: this.cx,\n                    y: this.cy,\n                    text: this.getAttackText(),\n                    fontSize: 18 * this.sizeRate,\n                    fontFamily: 'HuXiaoBoKuHei',\n                    fill: '#ffffff',\n                    fontStyle: 'italic'\n                });\n                this.addDestroy(this.percentText);\n            }\n            this.percentText.text(this.getAttackText());\n            this.percentText.x(this.cx - this.percentText.textWidth / 2 + this.textOffsetX);\n            this.percentText.y(this.cy - this.percentText.textHeight / 2 + this.textOffsetY);\n\n            /*\n            this.percentSymbolText = new Konva.Text( {\n                x: this.cx\n                , y: this.cy\n                , text: '%'\n                , fontSize: 17\n                , fontFamily: 'Agency FB'\n                , fill: '#c7d6ff'\n                , fontStyle: 'italic'\n            });\n            this.addDestroy( this.percentSymbolText );\n            this.percentSymbolText.x( this.percentText.attrs.x  + this.percentText.textWidth );\n            this.percentSymbolText.y( this.percentText.attrs.y  + this.percentText.textHeight -  this.percentSymbolText.textHeight - 2 );\n            */\n\n            //console.log( this.percentText );\n\n            if (!this.inited) {\n                var wedge = new _konva2.default.Wedge({\n                    x: 0,\n                    y: -3,\n                    radius: 10,\n                    angle: 20,\n                    fill: '#ff5a00',\n                    stroke: '#ff5a00',\n                    strokeWidth: 1,\n                    rotation: 90\n                });\n                this.addDestroy(wedge);\n\n                var wedge1 = new _konva2.default.Wedge({\n                    x: 0,\n                    y: -3,\n                    radius: 10,\n                    angle: 20,\n                    fill: '#973500',\n                    stroke: '#973500',\n                    strokeWidth: 1,\n                    rotation: 65\n                });\n                this.addDestroy(wedge1);\n\n                var group = new _konva2.default.Group({\n                    x: this.cx,\n                    y: this.cy\n                });\n                this.addDestroy(group);\n\n                group.add(wedge1);\n                group.add(wedge);\n\n                this.group = group;\n            }\n\n            this.initRoundText();\n\n            if (!this.inited) {\n                this.angle = this.arcOffset - 2;\n\n                this.layer.add(this.group);\n                this.layer.add(this.roundLine);\n                this.layer.add(this.percentText);\n                //this.layer.add( this.percentSymbolText );\n\n\n                this.drawCircle();\n                this.drawCircleLine();\n                this.drawArc();\n                this.drawArcLine();\n                this.drawArcText();\n                this.drawText();\n                this.drawTextRect();\n            }\n\n            this.stage.add(this.layer);\n            this.stage.add(this.layoutLayer);\n        }\n    }, {\n        key: 'animation',\n        value: function animation() {\n            var _this8 = this;\n\n            //console.log( this.angle, this.animationAngle );\n            if (this.isDestroy) return;\n            if (this.angle > this.animationAngle) return;\n\n            this.angle += this.rateStep;\n\n            if (this.angle >= this.animationAngle || !this.isAnimation()) {\n                this.angle = this.animationAngle;\n            };\n\n            this.updateWedge();\n\n            this.stage.add(this.layer);\n\n            window.requestAnimationFrame(function () {\n                _this8.animation();\n            });\n        }\n    }, {\n        key: 'updateWedge',\n        value: function updateWedge() {\n            var point = geometry.distanceAngleToPoint(this.roundRadius + 6, this.angle);\n            this.group.x(this.cx + point.x);\n            this.group.y(this.cy + point.y);\n            this.group.rotation(this.angle + 90);\n            this.group.rotation(this.angle + 90);\n            this.stage.add(this.layer);\n        }\n    }, {\n        key: 'animationText',\n        value: function animationText() {\n            var _this9 = this;\n\n            if (this.isDestroy) return;\n\n            if (this.totalNumCount >= this.totalNum) return;\n            this.totalNumCount += this.totalNumStep;\n\n            if (this.totalNumCount >= this.totalNum || !this.isAnimation()) {\n                this.totalNumCount = this.totalNum;\n            };\n\n            this.totalText.text(this.totalNumCount);\n            this.totalText.x(this.cx - this.totalText.textWidth / 2);\n            this.stage.add(this.layoutLayer);\n\n            window.requestAnimationFrame(function () {\n                _this9.animationText();\n            });\n        }\n    }, {\n        key: 'calcDataPosition',\n        value: function calcDataPosition() {}\n    }, {\n        key: 'animationLine',\n        value: function animationLine() {}\n    }, {\n        key: 'addIcon',\n        value: function addIcon(path, layer) {}\n    }, {\n        key: 'addText',\n        value: function addText(path, layer) {}\n    }, {\n        key: 'calcLayoutPosition',\n        value: function calcLayoutPosition() {}\n    }, {\n        key: 'drawCircle',\n        value: function drawCircle() {\n            this.circleRadius = Math.ceil(this.circlePercent * this.max / 2) * this.sizeRate;\n\n            this.circle = new _konva2.default.Circle({\n                x: this.cx,\n                y: this.cy,\n                radius: this.circleRadius,\n                stroke: this.lineColor,\n                strokeWidth: 1,\n                fill: '#ffffff00'\n            });\n            this.addDestroy(this.circle);\n            this.layoutLayer.add(this.circle);\n        }\n    }, {\n        key: 'drawCircleLine',\n        value: function drawCircleLine() {\n            this.circleLineRadius = Math.ceil(this.circleLinePercent * this.max / 2) * this.sizeRate;\n\n            var points = [];\n            points.push('M');\n            for (var i = 90; i <= 180; i++) {\n                var tmp = geometry.distanceAngleToPoint(this.circleLineRadius, i + 90);\n                points.push([tmp.x, tmp.y].join(',') + ',');\n                if (i == 90) {\n                    points.push('L');\n                }\n            }\n            points.push('M');\n            for (var _i = 270; _i <= 360; _i++) {\n                var _tmp = geometry.distanceAngleToPoint(this.circleLineRadius, _i + 90);\n                points.push([_tmp.x, _tmp.y].join(',') + ',');\n                if (_i == 270) {\n                    points.push('L');\n                }\n            }\n\n            this.circleLine = new _konva2.default.Path({\n                data: points.join(''),\n                x: this.cx,\n                y: this.cy,\n                stroke: this.lineColor,\n                strokeWidth: 1.5,\n                fill: '#ffffff00'\n            });\n            this.addDestroy(this.circleLine);\n\n            this.layoutLayer.add(this.circleLine);\n        }\n    }, {\n        key: 'reset',\n        value: function reset() {}\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            _get(Gauge.prototype.__proto__ || Object.getPrototypeOf(Gauge.prototype), 'destroy', this).call(this);\n            this.textRoundAngle.map(function (val) {\n                if (val.ins) val.ins.destroy();\n            });\n        }\n    }]);\n\n    return Gauge;\n}(_base2.default);\n\nexports.default = Gauge;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _base = require('../common/base.js');\n\nvar _base2 = _interopRequireDefault(_base);\n\nvar _geometry = require('../../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _utils = require('../../common/utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar RoundStateText = function (_VisChartBase) {\n    _inherits(RoundStateText, _VisChartBase);\n\n    function RoundStateText(box, width, height) {\n        _classCallCheck(this, RoundStateText);\n\n        var _this = _possibleConstructorReturn(this, (RoundStateText.__proto__ || Object.getPrototypeOf(RoundStateText)).call(this, box, width, height));\n\n        _this.name = 'RoundStateText ' + Date.now();\n\n        _this.radius = 30;\n\n        _this.textOffsetX = -2;\n        _this.textOffsetY = -1;\n\n        _this.circleLineRotation = 0;\n        _this.circleLineRotationStep = 4;\n\n        _this.curColor = '#deaf5c';\n        return _this;\n    }\n\n    _createClass(RoundStateText, [{\n        key: 'animationCircleLine',\n        value: function animationCircleLine() {\n            var _this2 = this;\n\n            if (this.isDestroy) return;\n            if (!this.circleLine) return;\n\n            if (!this.isAnimation()) {\n                return;\n            }\n\n            this.circleLineRotation += this.circleLineRotationStep;\n\n            this.circleLine.rotation(this.circleLineRotation);\n            this.stage.add(this.layer);\n\n            window.requestAnimationFrame(function () {\n                _this2.animationCircleLine();\n            });\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            //console.log( 'RoundStateText init', this );\n            this.circleRaidus = this.radius - 5;\n            this.circleRaidus *= this.sizeRate;\n\n            //this.lineColor = this.curColor;\n\n            this.initDataLayout();\n\n            this.animationCircleLine();\n\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(rate) {\n            this.rate = rate;\n\n            var color = this.lineColor;\n\n            if (rate >= this.min && rate < this.max) {\n                color = this.curColor;\n            }\n\n            this.text.fill(color);\n            this.circle.stroke(color);\n            this.circleLine.stroke(color);\n\n            this.stage.add(this.layer);\n\n            //console.log( 'rate', rate );\n\n            return this;\n        }\n    }, {\n        key: 'initDataLayout',\n        value: function initDataLayout() {\n            this.drawText();\n            this.drawCircle();\n            this.drawCircleLine();\n        }\n    }, {\n        key: 'drawText',\n        value: function drawText() {\n            this.text = new _konva2.default.Text({\n                x: this.point.x,\n                y: this.point.y,\n                text: this.text,\n                fontSize: 32 * this.sizeRate,\n                fontFamily: 'HuXiaoBoKuHei',\n                fill: this.lineColor,\n                fontStyle: 'italic'\n            });\n            this.addDestroy(this.text);\n\n            this.text.x(this.point.x - this.text.textWidth / 2 + this.textOffsetX);\n            this.text.y(this.point.y - this.text.textHeight / 2 + this.textOffsetY);\n\n            this.layer.add(this.text);\n        }\n    }, {\n        key: 'drawCircle',\n        value: function drawCircle() {\n            this.circle = new _konva2.default.Circle({\n                x: this.point.x,\n                y: this.point.y,\n                radius: this.circleRaidus,\n                stroke: this.lineColor,\n                strokeWidth: 2,\n                fill: '#ffffff00'\n            });\n            this.addDestroy(this.circle);\n\n            this.layer.add(this.circle);\n        }\n    }, {\n        key: 'drawCircleLine',\n        value: function drawCircleLine() {\n            this.circleLineRadius = this.radius - 1;\n            this.circleLineRadius *= this.sizeRate;\n\n            var points = [];\n            points.push('M');\n            for (var i = 90; i <= 180; i++) {\n                var tmp = geometry.distanceAngleToPoint(this.circleLineRadius, i + 90);\n                points.push([tmp.x, tmp.y].join(',') + ',');\n                if (i == 90) {\n                    points.push('L');\n                }\n            }\n            points.push('M');\n            for (var _i = 270; _i <= 360; _i++) {\n                var _tmp = geometry.distanceAngleToPoint(this.circleLineRadius, _i + 90);\n                points.push([_tmp.x, _tmp.y].join(',') + ',');\n                if (_i == 270) {\n                    points.push('L');\n                }\n            }\n\n            this.circleLine = new _konva2.default.Path({\n                data: points.join(''),\n                x: this.point.x,\n                y: this.point.y,\n                stroke: this.lineColor,\n                strokeWidth: 2,\n                fill: '#ffffff00'\n            });\n            this.addDestroy(this.circleLine);\n\n            this.layer.add(this.circleLine);\n        }\n    }, {\n        key: 'reset',\n        value: function reset() {}\n    }, {\n        key: 'calcDataPosition',\n        value: function calcDataPosition() {}\n    }, {\n        key: 'animationLine',\n        value: function animationLine() {}\n    }, {\n        key: 'calcLayoutPosition',\n        value: function calcLayoutPosition() {}\n    }]);\n\n    return RoundStateText;\n}(_base2.default);\n\nexports.default = RoundStateText;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _base = require('../common/base.js');\n\nvar _base2 = _interopRequireDefault(_base);\n\nvar _geometry = require('../../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _utils = require('../../common/utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Legend = function (_VisChartBase) {\n    _inherits(Legend, _VisChartBase);\n\n    function Legend(box, width, height) {\n        _classCallCheck(this, Legend);\n\n        var _this = _possibleConstructorReturn(this, (Legend.__proto__ || Object.getPrototypeOf(Legend)).call(this, box, width, height));\n\n        _this.name = 'Legend ' + Date.now();\n\n        _this.textColor = '#24a3ea';\n\n        _this.iconSpace = 5;\n\n        _this.text = [];\n        _this.icon = [];\n        _this.group = [];\n\n        _this.destroyList = [];\n        return _this;\n    }\n\n    _createClass(Legend, [{\n        key: 'setStage',\n        value: function setStage(stage) {\n            _get(Legend.prototype.__proto__ || Object.getPrototypeOf(Legend.prototype), 'setStage', this).call(this, stage);\n\n            this.layer = new _konva2.default.Layer({});\n            this.addDestroy(this.layer);\n\n            stage.add(this.layer);\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            var _this2 = this;\n\n            this.data.data.map(function (item, key) {\n                var x = 0,\n                    y = 0,\n                    count = key + 1,\n                    curRow = Math.floor(key / _this2.column());\n\n                switch (_this2.direction()) {\n                    case 'bottom':\n                        {\n                            x = _this2.space() + (_this2.space() + _this2.columnWidth()) * (key % _this2.column());\n                            y = _this2.height - (_this2.row() - curRow) * (_this2.spaceY() + _this2.rowHeight());\n                            //console.log( x, y, key, this.direction(), curRow );\n                            break;\n                        }\n                }\n\n                var label = item.name || key + '';\n\n                var color = _this2.colors[key % _this2.colors.length];\n\n                if (_jsonUtilsx2.default.jsonInData(item, 'textStyle.color')) {\n                    //path.fill( val.itemStyle.color );\n                    color = item.textStyle.color;\n                }\n\n                if (!_this2.inited) {\n                    var rect = new _konva2.default.Rect({\n                        x: x,\n                        y: y,\n                        width: _this2.itemWidth(),\n                        height: _this2.itemHeight(),\n                        fill: color\n                    });\n                    _this2.addDestroy(rect);\n\n                    var bg = new _konva2.default.Rect({\n                        x: x,\n                        y: y,\n                        width: _this2.columnWidth(),\n                        height: _this2.rowHeight(),\n                        fill: '#ffffff00'\n                    });\n                    _this2.addDestroy(bg);\n\n                    var text = new _konva2.default.Text({\n                        text: label,\n                        x: x + _this2.iconSpace + rect.width(),\n                        y: y,\n                        fill: _this2.textColor,\n                        fontFamily: 'MicrosoftYaHei',\n                        fontSize: 12\n                    });\n                    _this2.addDestroy(text);\n\n                    var group = new _konva2.default.Group();\n                    _this2.addDestroy(group);\n                    group.add(bg);\n                    group.add(rect);\n                    group.add(text);\n\n                    var data = {\n                        ele: group,\n                        item: item,\n                        disabled: false,\n                        rect: rect,\n                        bg: bg,\n                        text: text\n                    };\n\n                    _this2.group.push(data);\n                    group.on('click', function () {\n                        //console.log( 'click', key, data, group, item );\n                        data.disabled = !data.disabled;\n\n                        if (data.disabled) {\n                            group.opacity(.6);\n                        } else {\n                            group.opacity(1);\n                        }\n\n                        _this2.stage.add(_this2.layer);\n\n                        _this2.onChange && _this2.onChange(_this2.group);\n                    });\n\n                    _this2.layer.add(group);\n                } else {\n                    var curgroup = _this2.group[key];\n\n                    curgroup.rect.x(x);\n                    curgroup.rect.y(y);\n                    curgroup.rect.width(_this2.itemWidth());\n                    curgroup.rect.height(_this2.itemHeight());\n\n                    curgroup.bg.x(x);\n                    curgroup.bg.y(y);\n                    curgroup.bg.width(_this2.itemWidth());\n                    curgroup.bg.height(_this2.itemHeight());\n\n                    curgroup.text.x(x + _this2.iconSpace + curgroup.rect.width());\n                    curgroup.text.y(y);\n                }\n            });\n            this.stage.add(this.layer);\n\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(data) {\n            this.data = data || {};\n            if (!(this.data && this.data.data && this.data.data.length)) return;\n\n            /*\n            console.log( \n                this.column()\n                , this.row()\n                , this.direction() \n                , this.outerHeight()\n                , 'columnWidth:', this.columnWidth()\n            );\n            console.log( this.width, this.width - ( this.column() - 1  + 2 ) * this.space() );\n            */\n\n            this.init();\n\n            this.inited = 1;\n        }\n    }, {\n        key: 'outerHeight',\n        value: function outerHeight() {\n            return this.rowHeight() * this.row() + this.space();\n        }\n    }, {\n        key: 'total',\n        value: function total() {\n            var r = 0;\n\n            return r;\n        }\n    }, {\n        key: 'itemWidth',\n        value: function itemWidth() {\n            return this.data.itemWidth || 5;\n        }\n    }, {\n        key: 'itemHeight',\n        value: function itemHeight() {\n            return this.data.itemHeight || 5;\n        }\n    }, {\n        key: 'columnWidth',\n        value: function columnWidth() {\n            return (this.width - (this.column() - 1 + 2) * this.space()) / this.column();\n        }\n    }, {\n        key: 'column',\n        value: function column() {\n            return this.data.column || 1;\n        }\n    }, {\n        key: 'space',\n        value: function space() {\n            return this.data.space || 15;\n        }\n    }, {\n        key: 'spaceY',\n        value: function spaceY() {\n            return this.data.space || 0;\n        }\n    }, {\n        key: 'rowHeight',\n        value: function rowHeight() {\n            return this.data.rowHeight || 22;\n        }\n    }, {\n        key: 'row',\n        value: function row() {\n            return Math.ceil(this.data.data.length / this.column());\n        }\n    }, {\n        key: 'direction',\n        value: function direction() {\n            var r = 'top';\n\n            if (this.data.bottom) {\n                r = 'bottom';\n            } else if (this.data.left) {\n                r = 'left';\n            } else if (this.data.right) {\n                r = 'right';\n            }\n\n            return r;\n        }\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            _get(Legend.prototype.__proto__ || Object.getPrototypeOf(Legend.prototype), 'destroy', this).call(this);\n            //console.log( this.name, 'destroy' );\n\n            this.group && this.group.length && this.group.map(function (item) {\n                //if( !item.ele ) return;\n                item.ele.off('click');\n            });\n        }\n    }]);\n\n    return Legend;\n}(_base2.default);\n\nexports.default = Legend;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _base = require('./common/base.js');\n\nvar _base2 = _interopRequireDefault(_base);\n\nvar _index = require('./dount/index.js');\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _constant = require('../common/constant.js');\n\nvar constant = _interopRequireWildcard(_constant);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar THREE = require('three');\n\nvar VisThree = function (_VisChartBase) {\n    _inherits(VisThree, _VisChartBase);\n\n    function VisThree(box, width, height) {\n        _classCallCheck(this, VisThree);\n\n        var _this = _possibleConstructorReturn(this, (VisThree.__proto__ || Object.getPrototypeOf(VisThree)).call(this, box, width, height));\n\n        _this.ins = [];\n        _this.legend = null;\n        return _this;\n    }\n\n    _createClass(VisThree, [{\n        key: '_setSize',\n        value: function _setSize(width, height) {\n\n            this.config = this.config || {\n                camera: {\n                    fov: 40,\n                    near: 1,\n                    far: 1000\n                },\n\n                cameraPosition: { x: 0, y: 0, z: 350 }\n            };\n\n            _get(VisThree.prototype.__proto__ || Object.getPrototypeOf(VisThree.prototype), '_setSize', this).call(this, width, height);\n\n            this.init();\n\n            if (this.legend && this.data && this.data.legend) {\n                this.legend.resize(this.width, this.height);\n                this.legend.update(this.data.legend);\n            }\n\n            if (this.data) {\n                var tmpredraw = this.redraw;\n                this.update(this.data, this.ignoreLegend);\n                this.redraw = tmpredraw;\n            }\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            if (!this.box) return;\n\n            if (!this.stage) {\n                this.stage = this.scene = new THREE.Scene();\n\n                //console.log( this, this.config );\n\n                this.camera = new THREE.PerspectiveCamera(this.config.camera.fov, this.width / this.height, this.config.camera.nera, this.config.camera.far);\n                this.camera.position.set(this.config.cameraPosition.x, this.config.cameraPosition.y, this.config.cameraPosition.z);\n                this.renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\n                this.renderer.setPixelRatio(window.devicePixelRatio);\n                //this.renderer.setClearColor( 0xffffff, .2 );\n                this.renderer.sortObjects = true;\n                this.box.innerHTML = '';\n                this.box.appendChild(this.renderer.domElement);\n            }\n            this.renderer.setSize(this.width, this.height);\n\n            this.customWidth && (this.box.style.width = this.customWidth + 'px');\n            this.customHeight && (this.box.style.height = this.customHeight + 'px');\n\n            this.render();\n\n            return this;\n        }\n    }, {\n        key: 'setThreeConfig',\n        value: function setThreeConfig(config) {\n            config = config || {};\n\n            this.config = _lodash2.default.merge(this.config, config);\n\n            return this;\n        }\n    }, {\n        key: 'updateThreeConfig',\n        value: function updateThreeConfig(config) {\n            this.setThreeConfig(config);\n\n            this.camera.position.x = this.config.cameraPosition.x;\n            this.camera.position.y = this.config.cameraPosition.y;\n            this.camera.position.z = this.config.cameraPosition.z;\n\n            this.camera.fov = this.config.camera.fov;\n            this.camera.near = this.config.camera.near;\n            this.camera.far = this.config.camera.far;\n\n            this.camera.updateProjectionMatrix();\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(data, ignoreLegend) {\n            var redraw = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            this.data = data;\n            this.ignoreLegend = ignoreLegend;\n            this.redraw = redraw;\n\n            if (!_jsonUtilsx2.default.jsonInData(this.data, 'series')) return;\n\n            this.data && this.data.legend && this.data.legend.data && this.data.legend.data.legend && this.data.legend.data.map(function (item, key) {\n                item.realIndex = key;\n            });\n\n            this.data && this.data.series && this.data.series.length && this.data.series.map(function (sitem) {\n                sitem.data && sitem.data.length && sitem.data.map(function (item, key) {\n                    item.realIndex = key;\n                });\n            });\n\n            this.clearUpdate();\n\n            //console.log( ju );\n\n            //this.stage.removeChildren();\n\n            //console.log( 'update data', data );\n\n            /*if( ju.jsonInData( this.data, 'legend.data' ) &&  this.data.legend.data.length ){\n                if( this.legend && ignoreLegend ){\n                    this.emptyblock = 'kao';\n                }else{\n                    this.legend = new Legend( this.box, this.width, this.height );\n                    this.legend.setStage( this.stage );\n                    this.legend.setOptions( {\n                        onChange: ( group ) => {\n                            //console.log( 'legend onchange', group );\n                            this.initChart();\n                        }\n                    });\n                    this.legend.update( this.data.legend );\n                }\n            }*/\n            this.initChart();\n            return this;\n        }\n    }, {\n        key: 'initChart',\n        value: function initChart() {\n            var _this2 = this;\n\n            if (this.ins && this.ins.length && !this.redraw) {\n                this.emptyblock = 'kao';\n            } else {\n                this.ins.map(function (item) {\n                    item.destroy();\n                });\n                this.ins = [];\n            }\n\n            this.data.series.map(function (val, key) {\n                //console.log( val, constant );\n                var ins = void 0;\n\n                if (_this2.ins && _this2.ins.length && _this2.ins[key] && !_this2.redraw) {\n                    ins = _this2.ins[key];\n                    ins.width = _this2.width;\n                    ins.height = _this2.height;\n                } else {\n                    switch (val.type) {\n                        case constant.CHART_TYPE.dount:\n                            {\n                                ins = new _index2.default(_this2.box, _this2.width, _this2.height);\n                                break;\n                            }\n                        /*case constant.CHART_TYPE.gauge: {\n                            ins = new Gauge( this.box, this.width, this.height );\n                            break;\n                        }*/\n                    }\n                    if (ins) {\n                        _this2.legend && ins.setLegend(_this2.legend);\n                        ins.setOptions({\n                            renderer: _this2.renderer,\n                            scene: _this2.scene,\n                            camera: _this2.camera,\n                            stage: _this2.stage,\n                            config: _this2.config\n                        });\n                    }\n                }\n\n                if (ins) {\n                    _this2.options && ins.setOptions(_this2.options);\n                    ins.update(_this2.getLegendData(val), _jsonUtilsx2.default.clone(_this2.data));\n\n                    if (!_this2.ins[key]) {\n                        _this2.ins[key] = ins;\n                    }\n                }\n            });\n        }\n    }, {\n        key: 'getLegendData',\n        value: function getLegendData(data) {\n            data = _jsonUtilsx2.default.clone(data);\n\n            var tmp = [];\n\n            if (this.legend && this.legend.group && this.legend.group.length) {\n                //console.log( 'getLegendData', this.legend.group, 111111111 );\n                this.legend.group.map(function (item, key) {\n                    if (!item.disabled) {\n                        tmp.push(data.data[key]);\n                    }\n                });\n                data.data = tmp;\n            }\n\n            return data;\n        }\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            _get(VisThree.prototype.__proto__ || Object.getPrototypeOf(VisThree.prototype), 'destroy', this).call(this);\n\n            //this.clearUpdate();\n            this.ins.map(function (item) {\n                item.destroy();\n            });\n            this.legend && this.legend.destroy();\n\n            this.stage && this.stage.destroy();\n            this.stage = null;\n        }\n    }, {\n        key: 'clearUpdate',\n        value: function clearUpdate() {\n            this.legend && !this.ignoreLegend && this.legend.destroy();\n        }\n\n        //update( data, ignoreLegend, redraw = true ){\n\n        //this.scene = new THREE.Scene();\n\n        //this.camera = new THREE.PerspectiveCamera( 40, this.width / this.height, 1, 1000 );\n        //this.camera.position.set( 0, 0, 20 )\n\n\n        //let renderer = this.renderer = new THREE.WebGLRenderer( { antialias: true, alpha: true } );\n        ////let renderer = this.renderer = new THREE.SVGRenderer( );\n        ////renderer.setPixelRatio( window.devicePixelRatio );\n        //renderer.setSize( this.width - 2, this.height - 2 );\n\n\n        //var loader = new THREE.SVGLoader();\n\n        //var options = {\n        //depth: 1\n        //, bevelThickness: 1\n        //, bevelSize: .5\n        //, bevelSegments: 1\n        //, bevelEnabled: true\n        //, curveSegments: 12\n        //, steps: 1\n        //};\n\n        ////loader.load( './img/dount-in.svg', ( paths ) => {\n        ////loader.load( './img/dount-big-all.svg', ( paths ) => {\n        ////loader.load( './img/dount-mid.svg', ( paths ) => {\n        ////loader.load( './img/tiger.svg', ( paths ) => {\n        //var paths = loader.parse( data.background[0].url );\n        //console.log( 'paths', paths );\n\n        //var group = new THREE.Group();\n        //group.scale.multiplyScalar( 0.1 );\n        //group.scale.y *= -1;\n        //for ( var i = 0; i < paths.length; i ++ ) {\n        //var path = paths[ i ];\n        //var material = new THREE.MeshBasicMaterial( {\n        //color: path.color,\n        //side: THREE.DoubleSide,\n        //depthWrite: false\n        //} );\n        //var shapes = path.toShapes( true );\n        //for ( var j = 0; j < shapes.length; j ++ ) {\n        //var shape = shapes[ j ];\n        //var geometry = new THREE.ShapeBufferGeometry( shape );\n        ////var geometry = new THREE.ExtrudeGeometry( shape, options);\n        //var mesh = new THREE.Mesh( geometry, material );\n\n        ////viewbox 118, 117 - dount-in.svg\n        //mesh.position.x = -118/2;\n        //mesh.position.y = -117/2;\n\n        //[>\n        ////viewbox 250 248 - dount-big-all.svg\n        //mesh.position.x = -250/2;\n        //mesh.position.y = -248/2;\n        //*/\n\n        //[>\n        ////viewbox 107, 106 - dount-mid.svg\n        //mesh.position.x = -107/2;\n        //mesh.position.y = -106/2;\n        //*/\n\n        //[>\n        ////viewbox tiger.svg\n        //mesh.position.x = -46.5;\n        //mesh.position.y = -( 54.5 + 55 / 2 );\n        //*/\n\n        //group.add( mesh );\n        //}\n        //}\n        //this.group = group;\n        //this.scene.add( group );\n\n        //console.log( 'group', this.group  );\n\n        //this.render();\n        ////} );\n\n\n        //[>\n        //var geometry = new THREE.SphereGeometry( 30, 32, 32 );\n        //var material = new THREE.MeshBasicMaterial( {color: 0xffff00} );\n        //material.wireframe = true;\n        //this.sphere = new THREE.Mesh( geometry, material );\n        //console.log( this.sphere, material, geometry );\n        //this.scene.add( this.sphere );\n        //*/\n\n        //this.render();\n\n        //this.box.appendChild( renderer.domElement );\n\n        //this.animate();\n        //}\n\n        //animate() {\n\n        //this.group && ( this.group.rotation.y += 0.03 );\n        //this.sphere && ( this.sphere.rotation.y += 0.01 );\n\n        //this.render();\n\n        //requestAnimationFrame( ()=>{ this.animate() } );\n        //}\n\n        //render() {\n        //this.renderer.render( this.scene, this.camera );\n        /*}*/\n\n    }]);\n\n    return VisThree;\n}(_base2.default);\n\nexports.default = VisThree;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _base = require('../common/base.js');\n\nvar _base2 = _interopRequireDefault(_base);\n\nvar _geometry = require('../../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _pointat = require('../common/pointat.js');\n\nvar _pointat2 = _interopRequireDefault(_pointat);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _utils = require('../../common/utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nvar _three = require('three.texttexture');\n\nvar _three2 = _interopRequireDefault(_three);\n\nvar _three3 = require('three.textsprite');\n\nvar _three4 = _interopRequireDefault(_three3);\n\nvar _three5 = require('three.meshline');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar THREE = require('three');\n\nvar Dount = function (_VisChartBase) {\n    _inherits(Dount, _VisChartBase);\n\n    function Dount(box, width, height) {\n        _classCallCheck(this, Dount);\n\n        var _this = _possibleConstructorReturn(this, (Dount.__proto__ || Object.getPrototypeOf(Dount)).call(this, box, width, height));\n\n        _this.name = 'Dount_' + Date.now();\n\n        _this._setSize(width, height);\n\n        return _this;\n    }\n\n    _createClass(Dount, [{\n        key: '_setSize',\n        value: function _setSize(width, height) {\n            _get(Dount.prototype.__proto__ || Object.getPrototypeOf(Dount.prototype), '_setSize', this).call(this, width, height);\n\n            this.outPercent = .53;\n            this.inPercent = .37;\n\n            this.circleLinePercent = .34;\n            this.circlePercent = .31;\n            this.circleLineRotation = 0;\n            this.circleLineRotationStep = 4;\n\n            this.animationStep = 8;\n            this.angleStep = 5;\n\n            this.textHeight = 26;\n            this.lineOffset = 50;\n\n            this.path = [];\n            this.line = [];\n\n            this.textOffset = 4;\n\n            this.lineColor = 0x24a3ea;\n\n            this.lineRange = {\n                \"1\": [],\n                \"2\": [],\n                \"4\": [],\n                \"8\": []\n            };\n\n            this.lineWidth = 22;\n            this.lineSpace = 10;\n            this.lineAngle = 35;\n            this.lineHeight = 15;\n            this.lineCurveLength = 30;\n\n            this.loopSort = [4, 8, 1, 2];\n\n            this.clearList = [];\n\n            this.init();\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            this.calcLayoutPosition();\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(data, allData) {\n            _get(Dount.prototype.__proto__ || Object.getPrototypeOf(Dount.prototype), 'update', this).call(this, data, allData);\n            //console.log( THREE );\n\n            this.data = data;\n            this.allData = allData;\n\n            this.countAngle = 0;\n            this.isDone = 0;\n            this.lineLengthCount = 0;\n\n            if (!_jsonUtilsx2.default.jsonInData(this.data, 'data')) return;\n\n            this.clearItems();\n            this.calcDataPosition();\n            this.initDataLayout();\n\n            //console.log( 'dount update', this.data, this, utils );\n\n            this.animation();\n            !this.inited && this.animationCircleLine();\n\n            this.inited = 1;\n\n            return this;\n        }\n    }, {\n        key: 'reset',\n        value: function reset() {\n            this.path.map(function (val) {\n                val.pathData = [];\n            });\n        }\n    }, {\n        key: 'animationCircleLine',\n        value: function animationCircleLine() {\n            var _this2 = this;\n\n            if (this.isDestroy) return;\n            if (!this.circleLine) return;\n\n            if (!this.isAnimation()) {\n                return;\n            }\n\n            this.circleLine.rotation.z -= .03;\n\n            window.requestAnimationFrame(function () {\n                _this2.animationCircleLine();\n            });\n        }\n    }, {\n        key: 'animation',\n        value: function animation() {\n            var _this3 = this;\n\n            if (this.isDestroy) return;\n            if (this.isDone) return;\n\n            var tmp = void 0,\n                tmppoint = void 0,\n                step = this.angleStep;\n\n            this.countAngle -= this.animationStep;\n\n            if (!this.isSeriesAnimation()) {\n                this.countAngle = -this.totalAngle;\n            }\n\n            if (this.countAngle <= -360 || !this.isAnimation()) {\n                this.countAngle = -360;\n                this.isDone = 1;\n            }\n\n            this.reset();\n\n            for (var i = this.path.length - 1; i >= 0; i--) {\n                //for( let i = 0; i < this.path.length; i++ ){\n                //let i = 2;\n                var item = this.path[i];\n\n                var tmpAngle = this.countAngle;\n\n                if (tmpAngle <= item.itemData.endAngle) {\n                    tmpAngle = item.itemData.endAngle;\n                }\n\n                if (tmpAngle > item.itemData.startAngle) continue;\n\n                var geometryx = new THREE.RingGeometry(this.inRadius, this.outRadius, 256, 1, geometry.radians(0), geometry.radians(tmpAngle));\n\n                item.arc.geometry.dispose();\n                item.arc.geometry = geometryx;\n            }\n\n            window.requestAnimationFrame(function () {\n                _this3.animation();\n            });\n\n            if (this.isDone) {\n\n                /*\n                let sprite = new TextSprite({\n                  textSize: 12,\n                  redrawInterval: 250,\n                  texture: {\n                    text: '50%',\n                    fontFamily: 'MicrosoftYaHei, Arial, Helvetica, sans-serif'\n                  },\n                  material: {\n                    color: 0xffffff\n                  }\n                });\n                this.scene.add(sprite);\n                */\n\n                /*\n                let texture = new TextTexture({\n                  text: '50%',\n                  fontFamily: 'MicrosoftYaHei',\n                  fontSize: 28,\n                  fontStyle: 'normal',\n                });\n                let material = new THREE.SpriteMaterial({map: texture, color: 0xffffff });\n                let sprite = new THREE.Sprite(material);\n                sprite.scale.setX(texture.imageAspect).multiplyScalar(12);\n                //sprite.position.x = -50;\n                this.scene.add(sprite);\n                */\n\n                /*\n                let font = new THREE.Font( window.fontjson );\n                var textShapes = font.generateShapes( 'hello中文', 8 );\n                var text = new THREE.ShapeGeometry( textShapes );\n                var textMesh = new THREE.Mesh( text, new THREE.MeshBasicMaterial( { color: 0xffffff } ) ) ;\n                textMesh.geometry = text;\n                textMesh.geometry.needsUpdate = true;\n                var box= new THREE.Box3().setFromObject( textMesh );\n                console.log( textMesh, box.min, box.max, box.getSize( new THREE.Vector3() ) );\n                textMesh.position.x = -box.max.x / 2;\n                this.scene.add( textMesh );\n                */\n\n                window.requestAnimationFrame(function () {\n                    _this3.animationLine();\n                });\n            }\n        }\n    }, {\n        key: 'drawCircle',\n        value: function drawCircle() {\n\n            var line = new _three5.MeshLine();\n\n            var curve = new THREE.EllipseCurve(0, 0, // ax, aY\n            47, 47, // xRadius, yRadius\n            0, 2 * Math.PI, // aStartAngle, aEndAngle\n            false, // aClockwise\n            0 // aRotation\n            );\n\n            var points = curve.getPoints(200);\n            var geometryy = new THREE.Geometry().setFromPoints(points);\n\n            curve = new THREE.EllipseCurve(0, 0, // ax, aY\n            47, 47, // xRadius, yRadius\n            0, geometry.radians(10), // aStartAngle, aEndAngle\n            false, // aClockwise\n            geometry.radians(.5) // aRotation\n            );\n\n            points = [].concat(_toConsumableArray(points), _toConsumableArray(curve.getPoints(50)));\n\n            geometryy = new THREE.Geometry().setFromPoints(points);\n\n            line.setGeometry(geometryy);\n            var material = new _three5.MeshLineMaterial({\n                color: new THREE.Color(this.lineColor),\n                lineWidth: 2\n            });\n\n            var circle = new THREE.Mesh(line.geometry, material);\n\n            circle.renderOrder = -1;\n            circle.material.depthTest = false;\n\n            this.scene.add(circle);\n        }\n    }, {\n        key: 'drawCircleLine',\n        value: function drawCircleLine() {\n            var material = void 0,\n                geometryItem = void 0,\n                circle = void 0,\n                group = void 0,\n                line = void 0;\n\n            group = new THREE.Group();\n\n            line = new _three5.MeshLine();\n            material = new _three5.MeshLineMaterial({\n                color: new THREE.Color(this.lineColor),\n                lineWidth: 2\n            });\n            geometryItem = new THREE.CircleGeometry(50, 128, geometry.radians(90), geometry.radians(90));\n            geometryItem.vertices.shift();\n            line.setGeometry(geometryItem);\n            circle = new THREE.Line(line.geometry, material);\n            circle.renderOrder = -1;\n            circle.material.depthTest = false;\n            group.add(circle);\n\n            line = new _three5.MeshLine();\n            material = new _three5.MeshLineMaterial({\n                color: new THREE.Color(this.lineColor),\n                lineWidth: 2\n            });\n            geometryItem = new THREE.CircleGeometry(50, 128, geometry.radians(0), geometry.radians(-90));\n            geometryItem.vertices.shift();\n            line.setGeometry(geometryItem);\n            circle = new THREE.Line(line.geometry, material);\n            circle.renderOrder = -1;\n            circle.material.depthTest = false;\n            group.add(circle);\n\n            this.circleLine = group;\n\n            this.scene.add(group);\n            this.addDestroy(group);\n        }\n    }, {\n        key: 'initDataLayout',\n        value: function initDataLayout() {\n\n            this.drawCircle();\n            this.drawCircleLine();\n\n            this.path = [];\n            this.line = [];\n\n            for (var ii = this.data.data.length - 1; ii >= 0; ii--) {\n                var val = this.data.data[ii],\n                    key = ii;\n                var pathindex = this.data.data.length - 1 - ii;\n\n                var color = this.colors[key % this.colors.length];\n\n                if (_jsonUtilsx2.default.jsonInData(val, 'itemStyle.color')) {\n                    //path.fill( val.itemStyle.color );\n                    color = val.itemStyle.color;\n                }\n                color = this.parseColor(color);\n\n                var _geometryx = new THREE.RingGeometry(this.inRadius, this.outRadius, 256, 1, geometry.radians(0), geometry.radians(-0.1));\n                var _material = new THREE.MeshBasicMaterial({ color: color, side: THREE.DoubleSide });\n                var arc = new THREE.Mesh(_geometryx, _material);\n\n                this.scene.add(arc);\n\n                var line = new _three5.MeshLine();\n                var _material = new _three5.MeshLineMaterial({\n                    color: new THREE.Color(0xffffff),\n                    lineWidth: 2\n                });\n\n                var _geometryx = new THREE.Geometry();\n                line.setGeometry(_geometryx);\n\n                var mesh = new THREE.Mesh(line.geometry, _material);\n                this.scene.add(mesh);\n\n                this.line.push(mesh);\n\n                var tmp = {\n                    arc: arc,\n                    pathData: [],\n                    itemData: val,\n                    line: mesh,\n                    mline: line\n                };\n\n                this.path.push(tmp);\n            };\n\n            return this;\n        }\n    }, {\n        key: 'animationLine',\n        value: function animationLine() {\n            var _this4 = this;\n\n            if (this.lineLengthCount >= this.lineLength) {\n                return;\n            }\n            this.lineLengthCount = this.lineLength;\n\n            this.lineLengthCount += this.lineLengthStep;\n\n            if (this.lineLengthCount >= this.lineLength || !this.isAnimation()) {\n                this.lineLengthCount = this.lineLength;\n            }\n            for (var i = 0; i < this.path.length; i++) {\n                var path = this.path[i];\n                var layer = this.arcLayer;\n\n                var lineEnd = path.itemData.lineEnd;\n                var lineExpend = path.itemData.lineExpend;\n\n                var line = this.line[i];\n\n                var meshline = new _three5.MeshLine();\n                var geometryx = new THREE.Geometry();\n                geometryx.vertices.push(new THREE.Vector3(path.itemData.lineStart.x, path.itemData.lineStart.y, 0), new THREE.Vector3(lineEnd.x, lineEnd.y, 0), new THREE.Vector3(lineExpend.x, lineExpend.y, 0));\n                meshline.setGeometry(geometryx);\n                line.geometry = meshline.geometry;\n\n                /*\n                line.points( [ \n                    path.itemData.lineStart.x, path.itemData.lineStart.y\n                    , lineEnd.x, lineEnd.y \n                    , lineExpend.x,lineExpend.y \n                ] );\n                */\n                //console.log( i, line );\n\n\n                if (this.lineLengthCount >= this.lineLength) {\n                    this.addIcon(path, layer);\n                    this.addText(path, layer);\n                    /*\n                    */\n                    //console.log( 'line done' );\n                } else {\n                    window.requestAnimationFrame(function () {\n                        _this4.animationLine();\n                    });\n                }\n            }\n        }\n    }, {\n        key: 'addIcon',\n        value: function addIcon(path, layer) {\n            if (!path.lineicon) {\n                var geometry = new THREE.CircleGeometry(3, 32);\n                var material = new THREE.MeshBasicMaterial({ color: 0xffffff });\n                var circle = new THREE.Mesh(geometry, material);\n                path.lineicon = circle;\n                this.scene.add(circle);\n            }\n\n            path.lineicon.position.x = path.itemData.lineExpend.x;\n            path.lineicon.position.y = path.itemData.lineExpend.y;\n        }\n    }, {\n        key: 'addText',\n        value: function addText(path, layer) {\n            if (!path.text) {\n                var sprite = path.text = new _three4.default({\n                    textSize: 12,\n                    redrawInterval: 250,\n                    texture: {\n                        text: path.itemData.percent + '%',\n                        fontFamily: 'MicrosoftYaHei, Arial, Helvetica, sans-serif'\n                    },\n                    material: {\n                        color: 0xffffff\n                    }\n                });\n                this.scene.add(sprite);\n                this.clearList.push(sprite);\n            }\n            var text = path.text;\n\n            var textPoint = path.itemData.textPoint,\n                angleDirect = path.itemData.pointDirection.autoAngle();\n\n            textPoint = _jsonUtilsx2.default.clone(path.itemData.lineEnd);\n            //console.log( 'addText', text );\n            /*\n             switch( angleDirect ){\n                case 1: {\n                    textPoint.x -= text.textWidth\n                    break;\n                }\n                case 2: {\n                    break;\n                }\n                case 4: {\n                    break;\n                }\n                case 8: {\n                    textPoint.x -= text.textWidth\n                    break;\n                }\n            }\n            */\n\n            var textX = textPoint.x,\n                textY = textPoint.y,\n                direct = path.itemData.pointDirection.auto();\n            text.position.x = textX;\n            text.position.y = textY;\n        }\n    }, {\n        key: 'calcLayoutPosition',\n        value: function calcLayoutPosition() {\n            //console.log( 'calcLayoutPosition', Date.now() );\n\n            this.outRadius = 73;\n            this.inRadius = 53;\n\n            this.lineLength = 25;\n            this.lineLengthCount = 1;\n            this.lineLengthStep = .5;\n\n            this.lineLeft = this.fixCx() - this.outRadius - this.lineSpace;\n            this.lineRight = this.fixCx() + this.outRadius + this.lineSpace;\n\n            return this;\n        }\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            this.clearItems();\n            _get(Dount.prototype.__proto__ || Object.getPrototypeOf(Dount.prototype), 'destroy', this).call(this);\n        }\n    }, {\n        key: 'clearItems',\n        value: function clearItems() {\n            this.clearList.map(function (item) {\n                item.remove();\n                item.destroy();\n            });\n            this.clearList = [];\n        }\n    }, {\n        key: 'calcDataPosition',\n        value: function calcDataPosition() {\n            var _this5 = this;\n\n            if (!this.data) return;\n\n            var total = 0,\n                tmp = 0;\n\n            this.data.data.map(function (val) {\n                //console.log( val );\n                total += val.value;\n            });\n            this.total = total;\n\n            this.data.data.map(function (val) {\n                val._percent = utils.parseFinance(val.value / total);\n                tmp = utils.parseFinance(tmp + val._percent);\n                val._totalPercent = tmp;\n\n                val.percent = parseInt(val._percent * 100);\n\n                val.endAngle = -_this5.totalAngle * val._totalPercent;\n            });\n\n            //修正浮点数精确度\n            if (this.data.data.length) {\n                var item = this.data.data[this.data.data.length - 1];\n                tmp = tmp - item._percent;\n\n                item._percent = 1 - tmp;\n                item.percent = parseInt(item._percent * 100);\n                item._totalPercent = 1;\n                item.endAngle = -this.totalAngle;\n            }\n\n            this.lineRange = {\n                \"1\": [],\n                \"2\": [],\n                \"4\": [],\n                \"8\": []\n                //计算开始角度, 计算指示线的2端\n            };this.data.data.map(function (val, key) {\n                if (!key) {\n                    val.startAngle = 0;\n                } else {\n                    val.startAngle = _this5.data.data[key - 1].endAngle;\n                }\n\n                val.midAngle = val.startAngle + (val.endAngle - val.startAngle) / 2;\n\n                val.lineStart = geometry.distanceAngleToPoint(_this5.outRadius, val.midAngle);\n                val.lineEnd = geometry.distanceAngleToPoint(_this5.outRadius + _this5.lineLength, val.midAngle);\n\n                val.textPoint = geometry.distanceAngleToPoint(_this5.outRadius + _this5.lineLength, val.midAngle);\n\n                val.pointDirection = new _pointat2.default(_this5.fixWidth(), _this5.fixHeight(), geometry.pointPlus(val.textPoint, _this5.cpoint));\n                var lineAngle = val.pointDirection.autoAngle();\n                val.lineExpend = _jsonUtilsx2.default.clone(val.lineEnd);\n\n                //console.log( 'lineAngle', lineAngle,  val.midAngle );\n\n                switch (lineAngle) {\n                    case 1:\n                    case 8:\n                        {\n                            //val.lineEnd.x = this.lineLeft;\n                            val.lineEnd.x = -(_this5.outRadius + _this5.lineSpace);\n\n                            var _tmp = geometry.pointDistance(val.lineStart, val.lineEnd);\n                            if (_tmp > _this5.lineCurveLength) {\n                                var tmpAngle = geometry.pointAngle(val.lineStart, val.lineEnd),\n                                    tmpPoint = geometry.distanceAngleToPoint(_this5.lineCurveLength, tmpAngle);\n                                tmpPoint = geometry.pointPlus(tmpPoint, val.lineStart);\n\n                                val.lineEnd.x = tmpPoint.x;\n                            }\n\n                            val.lineExpend.x = val.lineEnd.x - _this5.lineWidth;\n\n                            break;\n                        }\n                    default:\n                        {\n                            val.lineEnd.x = _this5.outRadius + _this5.lineSpace;\n                            var _tmp2 = geometry.pointDistance(val.lineStart, val.lineEnd);\n                            if (_tmp2 > _this5.lineCurveLength) {\n                                var _tmpAngle = geometry.pointAngle(val.lineStart, val.lineEnd),\n                                    _tmpPoint = geometry.distanceAngleToPoint(_this5.lineCurveLength, _tmpAngle);\n                                _tmpPoint = geometry.pointPlus(_tmpPoint, val.lineStart);\n\n                                val.lineEnd.x = _tmpPoint.x;\n                            }\n\n                            val.lineExpend.x = val.lineEnd.x + _this5.lineWidth;\n                            break;\n                        }\n                }\n\n                _this5.lineRange[lineAngle].push(val);\n            });\n\n            this.loopSort.map(function (key) {\n                var item = _this5.lineRange[key];\n                if (!(item && item.length && item.length > 1)) return;\n                var needFix = void 0;\n                for (var i = 1; i < item.length; i++) {\n                    var pre = item[i - 1],\n                        cur = item[i];\n                    if (Math.abs(cur.lineEnd.y - pre.lineEnd.y) < _this5.lineHeight) {\n                        needFix = 1;\n                        break;\n                    }\n                }\n                console.log('key', key);\n                /*switch( key ){\n                    case 1: {\n                        let tmpY = item[ 0 ].lineEnd.y;\n                        //console.log( item );\n                        for( let i = item.length - 2; i >= 0; i-- ){\n                            let pre = item[ i + 1], cur = item[ i ];\n                            if( Math.abs( pre.lineEnd.y - cur.lineEnd.y ) < this.lineHeight || cur.lineEnd.y <= pre.lineEnd.y ){\n                                tmpY = pre.lineEnd.y + this.lineHeight;\n                                cur.lineEnd.y = tmpY;\n                                cur.lineExpend.y = tmpY;\n                            }\n                        }\n                        break;\n                    }\n                    case 2: {\n                        let tmpY = item[ 0 ].lineEnd.y;\n                        for( let i = 1; i < item.length; i++ ){\n                            let pre = item[ i - 1], cur = item[ i ], zero = item[0];\n                             if( Math.abs( pre.lineEnd.y + this.fixCy() ) < this.lineHeight ){\n                                pre.lineExpend.y = pre.lineEnd.y =  pre.lineExpend.y + this.lineHeight;\n                            }\n                            if( Math.abs( pre.lineEnd.y - cur.lineEnd.y ) < this.lineHeight   || cur.lineEnd.y <= pre.lineEnd.y  ){\n                                 tmpY = pre.lineEnd.y + this.lineHeight;\n                                cur.lineEnd.y = tmpY;\n                                cur.lineExpend.y = tmpY;\n                            }\n                        }\n                         break;\n                    }\n                    case 4: {\n                        let tmpY = 0;\n                        for( let i = item.length - 2; i >= 0 ; i-- ){\n                            let pre = item[ i + 1], cur = item[ i ];\n                            if( Math.abs( pre.lineEnd.y - cur.lineEnd.y ) < this.lineHeight || cur.lineEnd.y >= pre.lineEnd.y ){\n                                //console.log( pre.lineEnd.y, cur.lineEnd.y );\n                                tmpY = pre.lineEnd.y - this.lineHeight;\n                                cur.lineEnd.y = tmpY;\n                                cur.lineExpend.y = tmpY;\n                            }\n                        }\n                        break;\n                    }\n                    case 8: {\n                        let tmpY = 0;\n                        for( let i = 1; i < item.length ; i++ ){\n                            let pre = item[ i - 1], cur = item[ i ];\n                            if( Math.abs( pre.lineEnd.y - cur.lineEnd.y ) < this.lineHeight  || cur.lineEnd.y >= pre.lineEnd.y ){\n                                tmpY = pre.lineEnd.y - this.lineHeight;\n                                cur.lineEnd.y = tmpY;\n                                cur.lineExpend.y = cur.lineEnd.y;\n                            }\n                        }\n                         break;\n                    }\n                }*/\n            });\n        }\n    }]);\n\n    return Dount;\n}(_base2.default);\n\nexports.default = Dount;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _geometry = require('../../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar PointAt = function () {\n    function PointAt(width, height, point) {\n        _classCallCheck(this, PointAt);\n\n        this.width = width;\n        this.height = height;\n        this.point = point;\n\n        this.cx = this.width / 2;\n        this.cy = this.height / 2;\n\n        this.cpoint = { x: this.cx, y: this.cy };\n\n        this.offsetX = 20;\n        this.offsetY = 20;\n\n        this.colors = ['#f12575', '#da432e', '#f3a42d', '#19af89', '#24a3ea', '#b56be8'];\n\n        this.init();\n    }\n\n    _createClass(PointAt, [{\n        key: 'setDebug',\n        value: function setDebug(stage) {\n            this.stage = stage;\n\n            this.layer = new _konva2.default.Layer();\n\n            var i = 0;\n\n            for (var key in this.rects) {\n\n                var item = this.rects[key];\n                var params = _jsonUtilsx2.default.clone(item);\n                params.fill = this.colors[i % this.colors.length];\n\n                var rect = new _konva2.default.Rect(params);\n\n                this.layer.add(rect);\n\n                i++;\n            }\n\n            this.stage.add(this.layer);\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            this.leftTop = {\n                x: 0,\n                y: 0,\n                width: this.cx + this.offsetX,\n                height: this.cy + this.offsetY\n            };\n            this.leftTop.x2 = this.leftTop.x + this.leftTop.width;\n            this.leftTop.y2 = this.leftTop.y + this.leftTop.height;\n\n            this.rightTop = {\n                x: this.cx - this.offsetX,\n                y: 0,\n                width: this.cx + this.offsetX,\n                height: this.cy + this.offsetY\n            };\n            this.rightTop.x2 = this.rightTop.x + this.rightTop.width;\n            this.rightTop.y2 = this.rightTop.y + this.rightTop.height;\n\n            this.leftBottom = {\n                x: 0,\n                y: this.cy - this.offsetY,\n                width: this.cx + this.offsetX,\n                height: this.cy + this.offsetY\n            };\n            this.leftBottom.x2 = this.leftBottom.x + this.leftBottom.width;\n            this.leftBottom.y2 = this.leftBottom.y + this.leftBottom.height;\n\n            this.rightBottom = {\n                x: this.cx - this.offsetX,\n                y: this.cy - this.offsetY,\n                width: this.cx + this.offsetX,\n                height: this.cy + this.offsetY\n            };\n            this.rightBottom.x2 = this.rightBottom.x + this.rightBottom.width;\n            this.rightBottom.y2 = this.rightBottom.y + this.rightBottom.height;\n\n            this.rects = {\n                leftTop: this.leftTop,\n                rightTop: this.rightTop,\n                leftBottom: this.leftBottom,\n                rightBottom: this.rightBottom\n            };\n        }\n    }, {\n        key: 'isLeftTop',\n        value: function isLeftTop() {\n            return geometry.pointRectangleIntersection(this.point, this.leftTop) ? 1 : 0;\n        }\n    }, {\n        key: 'isRightTop',\n        value: function isRightTop() {\n            return geometry.pointRectangleIntersection(this.point, this.rightTop) ? 2 : 0;\n        }\n    }, {\n        key: 'isRightBottom',\n        value: function isRightBottom() {\n            return geometry.pointRectangleIntersection(this.point, this.rightBottom) ? 4 : 0;\n        }\n    }, {\n        key: 'isLeftBottom',\n        value: function isLeftBottom() {\n            return geometry.pointRectangleIntersection(this.point, this.leftBottom) ? 8 : 0;\n        }\n    }, {\n        key: 'auto',\n        value: function auto() {\n            var r = this.isLeftTop() + this.isRightTop() + this.isRightBottom() + this.isLeftBottom();\n            return r;\n        }\n    }, {\n        key: 'autoAngle',\n        value: function autoAngle() {\n            var angle = geometry.pointAngle(this.cpoint, this.point),\n                r = '';\n\n            if (angle >= 0 && angle <= 90) {\n                r = PointAt.DIRE_NAME.rightBottom;\n            } else if (angle > 90 && angle <= 180) {\n                r = PointAt.DIRE_NAME.leftBottom;\n            } else if (angle > 180 && angle <= 270) {\n                r = PointAt.DIRE_NAME.leftTop;\n            } else {\n                r = PointAt.DIRE_NAME.rightTop;\n            }\n\n            console.log('autoAngle', angle, r);\n\n            return r;\n        }\n    }]);\n\n    return PointAt;\n}();\n\nexports.default = PointAt;\n\n\nPointAt.DIRE_NAME = {\n    leftTop: 1,\n    rightTop: 2,\n    rightBottom: 4,\n    leftBottom: 8,\n\n    topCenter: 3,\n    rightMid: 6,\n    bottomCenter: 12,\n    leftMid: 9\n};\n\nPointAt.DIRE_NUM = {\n    '1': 'leftTop',\n    '2': 'rightTop',\n    '4': 'rightBottom',\n    '8': 'leftBottom',\n\n    '3': 'topCenter',\n    '6': 'rightMid',\n    '9': 'leftMid',\n    '12': 'bottomCenter'\n};","module.exports = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" ?>\\n<!DOCTYPE svg PUBLIC \\\"-//W3C//DTD SVG 1.1//EN\\\" \\\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\\\">\\n<svg width=\\\"250pt\\\" height=\\\"248pt\\\" viewBox=\\\"0 0 250 248\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n<g id=\\\"#161c2b42\\\">\\n<path fill=\\\"#161c2b\\\" opacity=\\\"0.26\\\" d=\\\" M 125.00 0.98 C 152.79 0.75 180.49 10.58 202.08 28.06 C 230.84 50.94 248.45 87.25 248.01 124.05 C 247.51 124.04 246.51 124.03 246.01 124.02 C 245.92 98.96 237.95 73.95 223.25 53.63 C 207.25 31.19 183.34 14.50 156.72 7.34 C 146.37 4.50 135.66 3.08 124.94 2.99 C 124.96 2.48 124.99 1.48 125.00 0.98 Z\\\" />\\n<path fill=\\\"#161c2b\\\" opacity=\\\"0.26\\\" d=\\\" M 1.98 123.98 C 2.48 123.99 3.49 123.99 3.99 124.00 C 4.10 149.28 12.18 174.51 27.16 194.92 C 44.88 219.52 72.18 237.04 101.99 242.70 C 109.58 244.25 117.31 244.89 125.05 245.01 C 125.04 245.51 125.03 246.52 125.03 247.02 C 96.79 247.29 68.65 237.09 46.91 219.11 C 18.72 196.23 1.57 160.33 1.98 123.98 Z\\\" />\\n</g>\\n<g id=\\\"#0f131c2c\\\">\\n<path fill=\\\"#0f131c\\\" opacity=\\\"0.17\\\" d=\\\" M 42.96 43.96 C 64.51 21.11 95.72 7.60 127.18 7.97 C 127.11 8.46 126.99 9.45 126.93 9.94 C 113.23 10.39 99.38 12.35 86.61 17.56 C 55.55 29.15 30.33 55.10 19.47 86.41 C 10.60 111.66 10.94 140.15 20.80 165.07 C 31.82 193.89 55.16 217.70 83.74 229.32 C 97.41 235.10 112.26 237.78 127.06 238.00 C 127.05 238.52 127.02 239.56 127.00 240.08 C 100.59 240.20 74.31 230.84 53.86 214.14 C 23.95 190.24 7.34 150.77 11.51 112.66 C 13.83 87.08 25.19 62.49 42.96 43.96 Z\\\" />\\n<path fill=\\\"#0f131c\\\" opacity=\\\"0.17\\\" d=\\\" M 126.96 17.92 C 150.52 17.82 173.97 25.97 192.49 40.53 C 206.15 51.45 217.37 65.55 224.28 81.66 C 233.32 102.40 235.58 126.10 230.28 148.12 C 222.71 182.08 197.01 211.27 164.38 223.27 C 152.44 227.73 139.70 230.20 126.95 230.03 C 126.96 229.51 126.98 228.48 126.99 227.96 C 149.25 227.92 171.41 220.57 189.19 207.16 C 206.03 194.48 219.04 176.71 225.63 156.66 C 232.86 134.90 232.68 110.72 224.87 89.14 C 215.63 63.10 195.52 41.12 170.37 29.64 C 156.87 23.22 141.90 20.30 127.00 19.98 C 126.99 19.47 126.97 18.44 126.96 17.92 Z\\\" />\\n</g>\\n<g id=\\\"#24a3eaff\\\">\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 128.76 67.04 C 142.78 66.98 156.69 72.43 167.05 81.86 C 178.62 92.25 185.70 107.51 185.97 123.08 C 186.08 124.21 185.53 124.83 184.33 124.92 C 183.68 115.54 181.90 106.06 177.15 97.82 C 168.27 81.44 150.71 70.12 132.07 69.15 C 130.72 69.06 127.06 69.41 128.76 67.04 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 119.59 72.76 C 132.59 70.50 146.40 73.35 157.38 80.66 C 169.75 88.75 178.41 102.27 180.45 116.93 C 182.51 130.71 178.78 145.25 170.27 156.30 C 161.87 167.40 148.91 174.93 135.08 176.58 C 122.53 178.19 109.44 175.09 99.01 167.93 C 87.21 159.94 78.86 146.99 76.68 132.89 C 74.14 117.71 78.73 101.49 88.99 89.99 C 96.79 80.93 107.82 74.76 119.59 72.76 M 119.65 74.82 C 108.59 76.69 98.30 82.53 90.85 90.89 C 82.34 100.41 77.56 113.22 78.03 126.01 C 78.38 141.39 86.34 156.32 98.80 165.31 C 109.10 172.92 122.39 176.25 135.07 174.56 C 146.73 173.09 157.75 167.31 165.67 158.65 C 174.51 149.08 179.44 135.99 178.97 122.96 C 178.61 108.12 171.21 93.67 159.45 84.63 C 148.36 75.92 133.51 72.22 119.65 74.82 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 98.79 108.45 C 98.78 103.59 102.97 100.41 107.10 98.85 C 106.96 103.40 104.19 109.13 98.79 108.45 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 150.90 98.80 C 154.99 100.24 159.25 103.39 159.11 108.19 C 153.76 109.12 151.10 103.21 150.90 98.80 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 94.11 111.79 C 92.62 108.27 93.79 104.19 95.99 101.23 C 98.20 104.52 99.39 109.29 96.80 112.69 C 95.54 113.51 94.64 113.21 94.11 111.79 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 128.57 101.35 C 136.92 103.11 146.00 105.41 151.62 112.37 C 153.03 118.95 151.44 125.95 148.93 132.11 C 145.17 141.14 137.26 147.67 128.64 151.87 C 128.64 144.06 128.50 136.25 128.74 128.45 C 134.46 128.47 140.18 128.48 145.90 128.46 L 145.30 126.83 C 140.97 126.56 136.62 126.83 132.28 126.71 C 132.74 124.03 133.28 121.37 133.86 118.72 C 138.67 118.39 143.72 119.57 148.37 117.93 C 142.75 115.93 136.55 117.48 130.69 117.00 C 130.26 120.22 129.61 123.40 128.93 126.58 C 127.93 124.43 128.98 122.03 128.70 119.76 C 128.71 119.08 128.72 117.72 128.73 117.04 C 128.51 111.81 128.70 106.58 128.57 101.35 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 161.98 113.15 C 158.14 110.14 159.80 104.27 162.17 100.83 C 164.21 104.29 166.51 111.02 161.98 113.15 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 152.78 107.94 C 157.04 109.01 161.64 111.92 161.63 116.85 C 156.71 117.26 152.77 112.61 152.78 107.94 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 96.35 116.79 C 96.52 112.05 100.98 108.83 105.34 108.27 C 104.97 112.77 101.33 117.59 96.35 116.79 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 90.51 111.20 C 92.11 110.41 92.63 112.63 93.44 113.58 C 94.96 116.10 95.83 120.59 93.05 122.46 C 89.01 120.38 89.45 114.91 90.51 111.20 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 166.43 110.79 C 168.42 110.96 167.70 113.65 168.20 115.01 C 168.40 117.61 167.49 122.41 164.07 122.03 C 162.03 118.22 163.76 113.79 166.43 110.79 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 93.80 126.65 C 93.70 122.16 96.72 117.76 101.08 116.53 C 101.06 120.75 99.24 127.48 93.80 126.65 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 156.93 116.42 C 161.17 117.68 164.37 121.88 164.11 126.36 C 158.55 127.20 157.01 120.62 156.93 116.42 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 86.92 120.78 C 91.26 122.11 94.97 126.35 93.97 131.12 C 88.81 131.07 87.15 125.00 86.92 120.78 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 164.09 131.11 C 162.94 126.33 166.67 121.95 171.08 120.68 C 170.86 124.92 169.23 130.87 164.09 131.11 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 71.04 124.76 L 72.03 124.27 L 72.91 124.79 C 73.15 137.78 77.79 150.70 86.33 160.54 C 95.91 171.79 110.13 179.04 124.91 179.85 C 126.37 180.00 128.04 179.77 129.14 180.95 C 128.16 182.38 126.39 181.92 124.92 181.89 C 111.54 181.09 98.53 175.42 88.87 166.14 C 77.63 155.54 70.95 140.23 71.04 124.76 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 157.29 124.46 C 161.26 126.38 163.79 132.29 161.11 136.22 C 156.63 134.12 156.21 128.69 157.29 124.46 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 96.46 135.78 C 94.37 131.68 97.13 127.01 100.30 124.36 C 101.62 127.54 101.68 131.64 99.39 134.41 C 98.63 135.15 97.67 136.42 96.46 135.78 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 85.87 130.85 C 90.38 130.27 96.11 132.93 96.12 138.06 C 91.32 138.70 87.72 134.81 85.87 130.85 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 162.07 137.93 C 161.64 132.69 167.69 130.39 172.02 130.54 C 170.57 134.71 166.76 138.39 162.07 137.93 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 99.83 145.20 C 96.54 141.27 99.15 135.91 102.12 132.68 C 104.03 136.76 104.24 142.64 99.83 145.20 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 157.94 144.49 C 153.50 142.50 154.12 136.30 155.89 132.64 C 158.75 135.44 161.75 141.65 157.94 144.49 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 87.42 137.99 C 91.67 137.62 97.91 139.06 98.15 144.26 C 93.56 145.48 89.17 142.01 87.42 137.99 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 104.30 148.64 C 102.57 145.19 103.72 140.82 105.95 137.87 C 107.81 141.18 109.48 145.53 107.20 149.05 C 106.63 150.68 104.59 150.11 104.30 148.64 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 159.87 144.21 C 159.96 138.95 166.30 137.49 170.53 137.99 C 168.84 142.12 164.39 145.07 159.87 144.21 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 152.77 150.21 C 147.87 148.05 149.63 141.11 152.21 137.68 C 154.58 141.38 155.61 146.46 152.77 150.21 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 109.83 142.75 C 113.53 145.16 116.52 150.05 114.11 154.37 C 109.13 153.12 108.97 146.85 109.83 142.75 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 143.92 154.25 C 141.50 150.02 144.48 144.95 148.18 142.62 C 148.96 146.67 148.90 153.08 143.92 154.25 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 154.62 150.22 C 154.83 144.68 161.95 144.72 165.97 145.41 C 164.11 149.39 158.81 151.33 154.62 150.22 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 92.06 145.76 C 96.00 145.42 103.10 144.64 103.40 150.26 C 99.19 151.67 94.29 149.43 92.06 145.76 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 115.76 148.88 C 120.14 149.16 125.64 151.95 125.09 157.09 C 120.41 157.38 116.62 153.18 115.76 148.88 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 133.00 156.88 C 132.30 151.80 137.93 148.92 142.26 148.92 C 141.16 153.08 137.70 157.27 133.00 156.88 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 97.92 152.39 C 101.34 151.30 105.44 150.04 108.71 152.27 C 110.03 152.80 110.97 155.07 108.90 155.41 C 105.11 156.86 100.64 155.21 97.92 152.39 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 147.54 154.06 C 150.21 149.67 156.09 150.77 160.14 152.29 C 156.99 155.38 151.15 157.46 147.54 154.06 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 126.01 157.42 C 127.24 157.00 128.26 156.25 128.97 155.16 C 129.43 156.26 130.47 156.79 131.49 157.30 C 130.93 158.08 130.61 158.95 130.52 159.91 C 129.46 159.92 128.41 159.94 127.35 159.96 C 127.02 159.32 126.35 158.05 126.01 157.42 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 143.18 155.15 C 146.53 154.61 150.29 156.17 152.32 158.86 C 148.41 160.16 143.52 160.88 140.32 157.63 C 139.62 155.81 141.97 155.59 143.18 155.15 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 105.83 159.03 C 108.20 155.15 114.63 154.37 118.18 157.01 C 115.36 161.01 109.90 160.36 105.83 159.03 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 113.85 162.15 C 117.00 158.97 121.94 156.52 126.20 159.13 C 124.46 163.99 117.81 163.65 113.85 162.15 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 131.75 159.00 C 135.90 156.65 141.46 158.55 144.01 162.35 C 139.90 163.29 133.53 163.90 131.75 159.00 Z\\\" />\\n</g>\\n<g id=\\\"#1d8bc9ff\\\">\\n<path fill=\\\"#1d8bc9\\\" opacity=\\\"1.00\\\" d=\\\" M 107.86 109.91 C 113.46 104.71 121.15 103.00 128.38 101.42 C 128.42 106.62 128.28 111.83 128.48 117.03 C 123.20 116.99 117.91 116.91 112.62 117.11 C 112.09 120.91 111.40 124.68 110.77 128.47 C 111.58 128.44 113.19 128.39 114.00 128.37 C 114.32 126.82 114.63 125.28 114.96 123.73 C 119.31 123.74 123.66 123.70 128.02 123.77 C 129.00 133.05 128.01 142.47 128.40 151.81 C 121.38 148.25 114.69 143.45 110.54 136.60 C 106.43 129.86 104.43 121.78 105.09 113.90 C 105.07 112.10 106.74 111.05 107.86 109.91 Z\\\" />\\n<path fill=\\\"#1d8bc9\\\" opacity=\\\"1.00\\\" d=\\\" M 115.04 121.89 C 115.32 120.84 115.59 119.78 115.87 118.73 C 119.86 118.68 123.88 119.01 127.84 118.34 L 128.16 119.09 C 128.17 119.86 128.18 121.39 128.18 122.16 C 123.81 121.92 119.42 122.07 115.04 121.89 Z\\\" />\\n</g>\\n<g id=\\\"#1b2132ff\\\">\\n<path fill=\\\"#1b2132\\\" opacity=\\\"1.00\\\" d=\\\" M 112.62 117.11 C 117.91 116.91 123.20 116.99 128.48 117.03 L 128.73 117.04 C 128.72 117.72 128.71 119.08 128.70 119.76 L 128.16 119.09 L 127.84 118.34 C 123.88 119.01 119.86 118.68 115.87 118.73 C 115.59 119.78 115.32 120.84 115.04 121.89 C 119.42 122.07 123.81 121.92 128.18 122.16 C 128.14 122.56 128.06 123.37 128.02 123.77 C 123.66 123.70 119.31 123.74 114.96 123.73 C 114.63 125.28 114.32 126.82 114.00 128.37 C 113.19 128.39 111.58 128.44 110.77 128.47 C 111.40 124.68 112.09 120.91 112.62 117.11 Z\\\" />\\n<path fill=\\\"#1b2132\\\" opacity=\\\"1.00\\\" d=\\\" M 130.69 117.00 C 136.55 117.48 142.75 115.93 148.37 117.93 C 143.72 119.57 138.67 118.39 133.86 118.72 C 133.28 121.37 132.74 124.03 132.28 126.71 C 136.62 126.83 140.97 126.56 145.30 126.83 L 145.90 128.46 C 140.18 128.48 134.46 128.47 128.74 128.45 C 128.78 127.99 128.88 127.05 128.93 126.58 C 129.61 123.40 130.26 120.22 130.69 117.00 Z\\\" />\\n</g>\\n</svg>\\n\"","\n\nlet COLORS = [\n    '#da432e',\n    '#f3a42d',\n    '#b56be8',\n    '#207dd3',\n    '#50d275',\n    '#4aabd6',\n    '#f12575',\n    '#da432e',\n    '#19af89'\n];\n\n\nexport function setColor( data, colors ){\n    colors = colors || COLORS;\n\n\n    if( data && data.legend && data.legend.data ){\n        data.legend.data.map( ( item, key ) => {\n            if( !item.textStyle ) return;\n\n            item.textStyle.color = colors[ key % colors.length ];\n        });\n    }\n\n    if( data && data.series  ){\n        data.series.map( ( item, key ) => {\n            if( !item.data ) return;\n\n            item.data.map( ( sitem, skey ) => {\n                if( !sitem.itemStyle ) return;\n                sitem.itemStyle.color = colors[ skey % colors.length ];\n            });\n        });\n    }\n\n}\n","\n\nimport VisChart from 'vischart';\n\nimport fontfaceobserver from 'fontfaceobserver';\n\nimport * as base64img from './data/base64img.js';\n\nimport * as common from './common.js';\n\nimport svgDountBigAll from './data-3d/svg/dount-big-all.txt';\nimport svgDountIn from './data-3d/svg/dount-in.txt';\nimport svgDountBig from './data-3d/svg/dount-big.txt';\n\n//import fontjson from './data-3d/fonts/gentilis_regular.typeface.json';\nimport fontjson from './data-3d/fonts/droid/droid_serif_regular.typeface.json';\n\nwindow.fontjson = fontjson;\n\n//console.log( 'svnDountBigAll', svgDountBigAll );\n\nlet background = [\n    { \n        //\"url\": \"./img/dount-in.png\"\n        \"url\":svgDountIn\n        , \"issvgstring\": true\n        , \"width\": 120\n        , \"height\": 120\n        , \"offsetX\": 9\n        , \"offsetY\": 0\n        , \"rotation\": 1\n        , \"rotationAttr\": 'y'\n    }\n    ,\n    { \n        //\"url\": \"./img/dount-big.png\"\n        \"url\": svgDountBig\n        , \"issvgstring\": true\n        , \"width\": 250\n        , \"height\": 248\n        , \"offsetX\": 0\n        , \"offsetY\": 1\n        , \"rotation\": 1\n        , \"rotationAttr\": 'z'\n        //, \"rotationStep\":  -0.03\n    }\n];\n\n//console.log( background );\n\nlet font = new fontfaceobserver( 'HuXiaoBoKuHei' );\nfont.load().then(function () {\n\n    //let data = require( './data/dount.json' );\n    let data = require( './data/dount-tight4.json' );\n    //let data = require( './data/dount-real1.json' );\n    //let data = require( './data/dount-disable-animation.json' );\n        data \n        && data.series \n        && data.series.map( item => {\n            item.background = background;\n        });\n    common.setColor( data );\n\n\n    let size = 500;\n\n    let box = document.querySelector('#twoBox');\n        \n    let dmins = new VisChart.three( box );\n        dmins.updateThreeConfig( {\n            camera: {\n                fov: 40\n            }\n            , cameraPosition: {\n                //z: 300\n            }\n        });\n        dmins.update( data, true ); \n\n    /*window.addEventListener( 'resize', ()=>{\n\n        window.tmpTimeout && clearTimeout( window.tmpTimeout );\n\n        window.tmpTimeout = setTimeout( ()=>{\n            console.log( 'onresize', Date.now(), window.innerHeight );\n            let size = window.innerHeight / 2;\n\n            dmins.resize( size, size );\n        }, 1000 );\n    });*/\n    /*setInterval( ()=>{\n        //let data = require( './data/dount-tight8-1.json' );\n        let data = require( './data/dount-tight4-1.json' );\n        //let data = require( './data/dount-real1.json' );\n        data \n        && data.series \n        && data.series.map( item => {\n            item.background = background;\n        });\n\n        common.setColor( data );\n        //dmins.resize( 500, 500, data );\n        dmins.update( data, 1, 0 );\n\n    }, 2000 );\n*/\n/*\n*/\n\n    /*\n    setTimeout( ()=>{\n        //let data = require( './data/dount-tight8-1.json' );\n        let data = require( './data/dount-tight4-1.json' );\n        //let data = require( './data/dount-real1.json' );\n        data \n        && data.series \n        && data.series.map( item => {\n            item.background = background;\n        });\n\n        common.setColor( data );\n        dmins.resize( 500, 500 );\n\n    }, 3000 );\n\n    setTimeout( ()=>{\n        //let data = require( './data/dount-tight8-1.json' );\n        let data = require( './data/dount-tight4-1.json' );\n        //let data = require( './data/dount-real1.json' );\n        data \n        && data.series \n        && data.series.map( item => {\n            item.background = background;\n        });\n\n        common.setColor( data );\n        dmins.update( data, true, 0 ); \n\n    }, 4000 );*/\n\n\n\n}, function () {\n  console.log('Font is not available');\n});\n\n\n"],"sourceRoot":""}
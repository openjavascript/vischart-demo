{"version":3,"sources":["webpack:///../vischart/dist/common/vischartbase.js","webpack:///../vischart/dist/geometry/geometry.js","webpack:///../vischart/dist/common/utils.js","webpack:///../vischart/dist/common/pointat.js","webpack:///../vischart/dist/index.js","webpack:///../vischart/dist/dount/index.js","webpack:///../vischart/dist/icon/iconcircle.js","webpack:///../vischart/dist/gauge/index.js","webpack:///../vischart/dist/icon/iconround.js","webpack:///../vischart/dist/icon/roundstatetext.js","webpack:///../vischart/dist/common/constant.js","webpack:///../vischart/dist/common/legend.js","webpack:///./src/assets/js/dount.js"],"names":["Object","defineProperty","exports","value","obj","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_konva","__webpack_require__","_konva2","__esModule","default","VisChartBase","box","width","height","instance","TypeError","_classCallCheck","this","customWidth","customHeight","offsetWidth","offsetHeight","max","Math","min","cx","cy","cpoint","x","y","totalAngle","angleOffset","countAngle","images","rateWidth","rateHeight","colors","data","allData","loadImage","legend","imgUrl","offsetX","arguments","undefined","offsetY","rateW","rateH","push","url","_this","iconLayer","remove","Layer","background","map","val","addImage","item","img","Image","onload","icon","image","fixCx","fixCy","add","stage","src","r","direction","outerHeight","options","layer","isDestroy","setDestroy","pointRectangleIntersection","p","x2","y2","pointDistance","_p1","_p2","_dx","_dy","sqrt","pointAngle","angle","atan2","PI","distanceAngleToPoint","_distance","_angle","_radian","cos","sin","radians","degree","_radians","intersectRect","r1","r2","fixEndAngle","startAngle","endAngle","pointPlus","p1","p2","parseFinance","_i","_dot","parseFloat","toFixed","_interopRequireDefault","_jsonUtilsx2","geometry","newObj","hasOwnProperty","call","_interopRequireWildcard","PointAt","point","init","rects","params","clone","fill","rect","Rect","leftTop","rightTop","leftBottom","rightBottom","isLeftTop","isRightTop","isRightBottom","isLeftBottom","DIRE_NAME","topCenter","rightMid","bottomCenter","leftMid","DIRE_NUM","1","2","4","8","3","6","9","12","_vischartbase2","_index2","_index4","constant","_legend2","VisChart","_VisChartBase","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","ins","subClass","superClass","create","constructor","setPrototypeOf","_inherits","Stage","container","style","_this2","jsonInData","destroy","removeChildren","setStage","setOptions","onChange","group","initChart","update","_this3","series","type","CHART_TYPE","dount","gauge","setLegend","getLegendData","tmp","disabled","_get","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","parent","getter","_pointat2","utils","_iconcircle2","Dount","name","Date","now","outPercent","inPercent","circleLinePercent","circlePercent","circleLineRotation","circleLineRotationStep","animationStep","angleStep","textHeight","lineOffset","path","textOffset","lineColor","lineRange","lineWidth","lineSpace","lineAngle","lineHeight","loopSort","calcLayoutPosition","calcDataPosition","initDataLayout","animation","animationCircleLine","pathData","circleLine","rotation","layoutLayer","window","requestAnimationFrame","isDone","tmppoint","step","reset","tmpAngle","itemData","outRadius","join","_i2","inRadius","setData","setZIndex","animationLine","circleRadius","ceil","circle","Circle","radius","stroke","strokeWidth","circleLineRadius","points","_i3","_tmp","Path","_this4","line","drawCircle","drawCircleLine","color","itemStyle","Line","_this5","total","_percent","_totalPercent","percent","parseInt","midAngle","lineStart","lineEnd","lineLength","textPoint","pointDirection","fixWidth","fixHeight","autoAngle","lineExpend","pre","cur","abs","tmpY","_i4","_pre","_cur","_tmpY","_i5","_pre2","_cur2","_tmpY2","_i6","_pre3","_cur3","_tmpY3","_i7","_pre4","_cur4","_this6","lineLengthCount","lineLengthStep","addText","addIcon","text","Text","fontFamily","fontSize","fontStyle","angleDirect","textWidth","textX","textY","auto","lineLeft","lineRight","IconCircle","isplus","Group","outcircle","scale","plus","_roundstatetext2","Gauge","curRate","totalNum","totalNumStep","roundRadiusPercent","arcLinePercent","arcOutPercent","arcInPercent","arcLabelLength","arcTextLength","arcAngle","part","arcTotal","arcOffset","arcOffsetPad","partLabel","partAngle","partNum","textOffsetX","textOffsetY","textLineLength","textRectWidthPercent","textRectHeightPercent","textRoundPercent","textRoundOffsetAngle","textRoundPlusAngle","textRoundMaxAngle","roundStatusRaidus","textRoundAngle","pow","getAttackRatePercent","textRoundRadius","roundRadius","arcInRadius","arcOutRadius","arcLineRaidus","arcPartLineAr","arcOutlinePartAr","textAr","start","end","assign","animationAngle","getAttackRateAngle","rateStep","floor","totalNumCount","animationText","totalText","tmpTotalText","textRect","opacity","textLinePath","_this7","arcLine","arcPartLine","arcOutlinePart","innerRadius","outerRadius","fillLinearGradientStartPoint","fillLinearGradientEndPoint","fillLinearGradientColorStops","arc","Arc","roundLine","percentText","getAttackText","wedge","Wedge","wedge1","drawArc","drawArcLine","drawArcText","drawText","drawTextRect","initRoundText","_this8","_this9","IconRound","RoundStateText","curColor","circleRaidus","rate","Legend","textColor","iconSpace","curRow","column","space","columnWidth","row","spaceY","rowHeight","label","textStyle","itemWidth","itemHeight","bg","ele","on","bottom","left","right","a","load","then","vischart__WEBPACK_IMPORTED_MODULE_0___default","document","querySelector","setTimeout"],"mappings":"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","file":"assets/js/dount.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar VisChartBase = function () {\n    function VisChartBase(box, width, height) {\n        _classCallCheck(this, VisChartBase);\n\n        this.box = box;\n\n        this.customWidth = width;\n        this.customHeight = height;\n\n        this.width = width || box.offsetWidth;\n        this.height = height || box.offsetHeight;\n\n        this.max = Math.max(this.width, this.height);\n        this.min = Math.min(this.width, this.height);\n\n        this.cx = this.width / 2;\n        this.cy = this.height / 2;\n        this.cpoint = { x: this.cx, y: this.cy };\n\n        this.totalAngle = 360;\n        this.angleOffset = 0;\n        this.countAngle = 0;\n\n        this.images = [];\n\n        this.rateWidth = 330;\n        this.rateHeight = 330;\n\n        this.colors = ['#f12575', '#da432e', '#f3a42d', '#19af89', '#24a3ea', '#b56be8'];\n    }\n\n    _createClass(VisChartBase, [{\n        key: 'update',\n        value: function update(data, allData) {\n            this.data = data;\n            this.allData = allData;\n\n            this.loadImage();\n\n            return this;\n        }\n    }, {\n        key: 'setLegend',\n        value: function setLegend(legend) {\n            this.legend = legend;\n        }\n    }, {\n        key: 'addImage',\n        value: function addImage(imgUrl, width, height) {\n            var offsetX = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n            var offsetY = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n\n            //console.log( this.rateWidth, this.width );\n            var rateW = this.min / this.rateWidth,\n                rateH = this.min / this.rateHeight;\n            this.images.push({\n                url: imgUrl,\n                width: width * rateW,\n                height: height * rateH,\n                offsetX: offsetX,\n                offsetY: offsetY\n            });\n\n            return this;\n        }\n\n        /*\n            \"background\": [\n                { \n                    \"url\": \"./img/dount-in.png\"\n                    , \"width\": 120\n                    , \"height\": 120\n                    , \"offsetX\": 0\n                    , \"offsetY\": 1\n                }\n                , { \n                    \"url\": \"./img/dount-big.png\"\n                    , \"width\": 250\n                    , \"height\": 248\n                    , \"offsetX\": 0\n                    , \"offsetY\": 1\n                }\n            ],\n        */\n\n    }, {\n        key: 'loadImage',\n        value: function loadImage() {\n            var _this = this;\n\n            if (this.iconLayer) this.iconLayer.remove();\n            this.iconLayer = new _konva2.default.Layer();\n\n            this.images = [];\n\n            if (this.data && this.data.background && this.data.background.length) {\n                this.data.background.map(function (val) {\n                    _this.addImage(val.url, val.width, val.height, val.offsetX || 0, val.offsetY || 0);\n                });\n            }\n\n            this.images.map(function (item) {\n\n                var img = new Image();\n                img.onload = function () {\n                    var width = item.width || img.width,\n                        height = item.height || img.height;\n\n                    var icon = new _konva2.default.Image({\n                        image: img,\n                        x: _this.fixCx() - width / 2 + item.offsetX,\n                        y: _this.fixCy() - height / 2 + item.offsetY,\n                        width: width,\n                        height: height\n                    });\n\n                    _this.iconLayer.add(icon);\n\n                    _this.stage.add(_this.iconLayer);\n                };\n                img.src = item.url;\n            });\n\n            return this;\n        }\n    }, {\n        key: 'hasLegend',\n        value: function hasLegend() {\n            var r = void 0;\n\n            if (this.data && this.data.legend && this.data.legend.data && this.data.legend.data.length) {\n                r = true;\n            }\n\n            return r;\n        }\n    }, {\n        key: 'fixCx',\n        value: function fixCx() {\n            var r = this.cx;\n            return r;\n        }\n    }, {\n        key: 'fixCy',\n        value: function fixCy() {\n            var r = this.cy;\n\n            if (this.legend) {\n                switch (this.legend.direction()) {\n                    case 'bottom':\n                        {\n                            r = (this.height - this.legend.outerHeight() / 2) / 2 - 5;\n                            break;\n                        }\n                }\n            }\n\n            return r;\n        }\n    }, {\n        key: 'fixWidth',\n        value: function fixWidth() {\n            var r = this.width;\n            return r;\n        }\n    }, {\n        key: 'fixHeight',\n        value: function fixHeight() {\n            var r = this.height;\n            return r;\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            return this;\n        }\n    }, {\n        key: 'setOptions',\n        value: function setOptions(options) {\n\n            for (var key in options) {\n                this[key] = options[key];\n            }\n\n            this.options = options;\n        }\n    }, {\n        key: 'calcLayoutPosition',\n        value: function calcLayoutPosition() {\n            return this;\n        }\n    }, {\n        key: 'calcDataPosition',\n        value: function calcDataPosition() {\n            return this;\n        }\n    }, {\n        key: 'initDataLayout',\n        value: function initDataLayout() {\n            return this;\n        }\n    }, {\n        key: 'draw',\n        value: function draw() {\n            return this;\n        }\n    }, {\n        key: 'reset',\n        value: function reset() {}\n    }, {\n        key: 'animation',\n        value: function animation() {}\n    }, {\n        key: 'getData',\n        value: function getData() {\n            return this.data || {};\n        }\n    }, {\n        key: 'layer',\n        value: function layer() {\n            return this.layer;\n        }\n    }, {\n        key: 'setLayer',\n        value: function setLayer(layer) {\n            this.layer = layer;\n            return this;\n        }\n    }, {\n        key: 'setStage',\n        value: function setStage(stage) {\n            this.stage = stage;\n        }\n    }, {\n        key: 'setDestroy',\n        value: function setDestroy() {\n            this.isDestroy = 1;\n        }\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            this.setDestroy();\n            console.log('destroy', this.name);\n            this.iconLayer.remove();\n        }\n    }]);\n\n    return VisChartBase;\n}();\n\nexports.default = VisChartBase;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.pointRectangleIntersection = pointRectangleIntersection;\nexports.pointDistance = pointDistance;\nexports.pointAngle = pointAngle;\nexports.distanceAngleToPoint = distanceAngleToPoint;\nexports.radians = radians;\nexports.degree = degree;\nexports.intersectRect = intersectRect;\nexports.fixEndAngle = fixEndAngle;\nexports.pointPlus = pointPlus;\n\n/**\n * 判断一个点是否在矩形里面\n * @method  pointRectangleIntersection\n * @param   {point} _p\n * @param   {rect}  _r\n * @return  Boolean\n * @static\n */\nfunction pointRectangleIntersection(p, r) {\n    return p.x >= r.x && p.x <= r.x2 && p.y >= r.y && p.y <= r.y2;\n}\n/**\n * 计算两个坐标点之间的距离\n * @method pointDistance\n * @param   {point} _p1\n * @param   {point} _p2\n * @return  Boolean\n * @static\n */\nfunction pointDistance(_p1, _p2) {\n    var _dx = _p2.x - _p1.x,\n        _dy = _p2.y - _p1.y,\n        _dist = Math.sqrt(_dx * _dx + _dy * _dy);\n    ;\n    return _dist;\n}\n/**\n * 计算两个坐标点之间的角度\n * @method pointAngle\n * @param   {point} _p1\n * @param   {point} _p2\n * @return  Boolean\n * @static\n */\nfunction pointAngle(_p1, _p2) {\n    var angle = Math.atan2(_p2.y - _p1.y, _p2.x - _p1.x) * 180 / Math.PI;\n    if (angle < 0) {\n        angle = 360 + angle;\n    }\n\n    return angle;\n}\n\n/**\n * 从长度和角度求坐标点\n * @method  distanceAngleToPoint\n * @param  {Number} _distance\n * @param  {Number} _angle\n * @return Point\n * @static\n */\nfunction distanceAngleToPoint(_distance, _angle) {\n    var _radian = _angle * Math.PI / 180;\n    return {\n        x: Math.cos(_radian) * _distance,\n        y: Math.sin(_radian) * _distance\n    };\n}\n/**\n * 从角度获取弧度\n * @method  radians\n * @param   {Number} _angle\n * @return  {Number}\n * @static\n */\nfunction radians(_angle) {\n    return _angle * Math.PI / 180;\n}\n/**\n * 从弧度获取角度\n * @method  degree\n * @param   {Number} _radians\n * @return  {Number}\n * @static\n */\nfunction degree(_radians) {\n    return _radians / Math.PI * 180;\n}\n/**\n * 判断两个矩形是否有交集\n * @method intersectRect\n * @param   {rect_Object}   r1\n * @param   {rect_Object}   r2\n * @return  {Boolean}\n */\nfunction intersectRect(r1, r2) {\n    return !(r2.x > r1.x + r1.width || r2.x + r2.width < r1.x || r2.y > r1.y + r1.height || r2.y + r2.height < r1.y);\n}\n\nfunction fixEndAngle(startAngle, endAngle) {\n    if (endAngle < startAngle) {\n        endAngle += 360;\n    }\n    return endAngle;\n}\n\nfunction pointPlus(p1, p2) {\n    return {\n        x: p1.x + p2.x,\n        y: p1.y + p2.y\n    };\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseFinance = parseFinance;\n\n\n/**\n * 取小数点的N位\n * <br />JS 解析 浮点数的时候，经常出现各种不可预知情况，这个函数就是为了解决这个问题\n * @method  parseFinance\n * @static\n * @param   {number}    _i\n * @param   {int}       _dot  default = 2\n * @return  number\n */\nfunction parseFinance(_i, _dot) {\n  _i = parseFloat(_i) || 0;\n  typeof _dot == 'undefined' && (_dot = 2);\n  _i && (_i = parseFloat(_i.toFixed(_dot)));\n  return _i;\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _geometry = require('../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar PointAt = function () {\n    function PointAt(width, height, point) {\n        _classCallCheck(this, PointAt);\n\n        this.width = width;\n        this.height = height;\n        this.point = point;\n\n        this.cx = this.width / 2;\n        this.cy = this.height / 2;\n\n        this.cpoint = { x: this.cx, y: this.cy };\n\n        this.offsetX = 20;\n        this.offsetY = 20;\n\n        this.colors = ['#f12575', '#da432e', '#f3a42d', '#19af89', '#24a3ea', '#b56be8'];\n\n        this.init();\n    }\n\n    _createClass(PointAt, [{\n        key: 'setDebug',\n        value: function setDebug(stage) {\n            this.stage = stage;\n\n            this.layer = new _konva2.default.Layer();\n\n            var i = 0;\n\n            for (var key in this.rects) {\n\n                var item = this.rects[key];\n                var params = _jsonUtilsx2.default.clone(item);\n                params.fill = this.colors[i % this.colors.length];\n\n                var rect = new _konva2.default.Rect(params);\n\n                this.layer.add(rect);\n\n                i++;\n            }\n\n            this.stage.add(this.layer);\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            this.leftTop = {\n                x: 0,\n                y: 0,\n                width: this.cx + this.offsetX,\n                height: this.cy + this.offsetY\n            };\n            this.leftTop.x2 = this.leftTop.x + this.leftTop.width;\n            this.leftTop.y2 = this.leftTop.y + this.leftTop.height;\n\n            this.rightTop = {\n                x: this.cx - this.offsetX,\n                y: 0,\n                width: this.cx + this.offsetX,\n                height: this.cy + this.offsetY\n            };\n            this.rightTop.x2 = this.rightTop.x + this.rightTop.width;\n            this.rightTop.y2 = this.rightTop.y + this.rightTop.height;\n\n            this.leftBottom = {\n                x: 0,\n                y: this.cy - this.offsetY,\n                width: this.cx + this.offsetX,\n                height: this.cy + this.offsetY\n            };\n            this.leftBottom.x2 = this.leftBottom.x + this.leftBottom.width;\n            this.leftBottom.y2 = this.leftBottom.y + this.leftBottom.height;\n\n            this.rightBottom = {\n                x: this.cx - this.offsetX,\n                y: this.cy - this.offsetY,\n                width: this.cx + this.offsetX,\n                height: this.cy + this.offsetY\n            };\n            this.rightBottom.x2 = this.rightBottom.x + this.rightBottom.width;\n            this.rightBottom.y2 = this.rightBottom.y + this.rightBottom.height;\n\n            this.rects = {\n                leftTop: this.leftTop,\n                rightTop: this.rightTop,\n                leftBottom: this.leftBottom,\n                rightBottom: this.rightBottom\n            };\n        }\n    }, {\n        key: 'isLeftTop',\n        value: function isLeftTop() {\n            return geometry.pointRectangleIntersection(this.point, this.leftTop) ? 1 : 0;\n        }\n    }, {\n        key: 'isRightTop',\n        value: function isRightTop() {\n            return geometry.pointRectangleIntersection(this.point, this.rightTop) ? 2 : 0;\n        }\n    }, {\n        key: 'isRightBottom',\n        value: function isRightBottom() {\n            return geometry.pointRectangleIntersection(this.point, this.rightBottom) ? 4 : 0;\n        }\n    }, {\n        key: 'isLeftBottom',\n        value: function isLeftBottom() {\n            return geometry.pointRectangleIntersection(this.point, this.leftBottom) ? 8 : 0;\n        }\n    }, {\n        key: 'auto',\n        value: function auto() {\n            var r = this.isLeftTop() + this.isRightTop() + this.isRightBottom() + this.isLeftBottom();\n            return r;\n        }\n    }, {\n        key: 'autoAngle',\n        value: function autoAngle() {\n            var angle = geometry.pointAngle(this.cpoint, this.point),\n                r = '';\n\n            if (angle >= 0 && angle <= 90) {\n                r = PointAt.DIRE_NAME.rightBottom;\n            } else if (angle > 90 && angle <= 180) {\n                r = PointAt.DIRE_NAME.leftBottom;\n            } else if (angle > 180 && angle <= 270) {\n                r = PointAt.DIRE_NAME.leftTop;\n            } else {\n                r = PointAt.DIRE_NAME.rightTop;\n            }\n\n            return r;\n        }\n    }]);\n\n    return PointAt;\n}();\n\nexports.default = PointAt;\n\n\nPointAt.DIRE_NAME = {\n    leftTop: 1,\n    rightTop: 2,\n    rightBottom: 4,\n    leftBottom: 8,\n\n    topCenter: 3,\n    rightMid: 6,\n    bottomCenter: 12,\n    leftMid: 9\n};\n\nPointAt.DIRE_NUM = {\n    '1': 'leftTop',\n    '2': 'rightTop',\n    '4': 'rightBottom',\n    '8': 'leftBottom',\n\n    '3': 'topCenter',\n    '6': 'rightMid',\n    '9': 'leftMid',\n    '12': 'bottomCenter'\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _vischartbase = require('./common/vischartbase.js');\n\nvar _vischartbase2 = _interopRequireDefault(_vischartbase);\n\nvar _index = require('./dount/index.js');\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _index3 = require('./gauge/index.js');\n\nvar _index4 = _interopRequireDefault(_index3);\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _constant = require('./common/constant.js');\n\nvar constant = _interopRequireWildcard(_constant);\n\nvar _legend = require('./common/legend.js');\n\nvar _legend2 = _interopRequireDefault(_legend);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar VisChart = function (_VisChartBase) {\n    _inherits(VisChart, _VisChartBase);\n\n    function VisChart(box, width, height) {\n        _classCallCheck(this, VisChart);\n\n        var _this = _possibleConstructorReturn(this, (VisChart.__proto__ || Object.getPrototypeOf(VisChart)).call(this, box, width, height));\n\n        _this.ins = [];\n        _this.legend = null;\n\n        _this.init();\n        return _this;\n    }\n\n    _createClass(VisChart, [{\n        key: 'init',\n        value: function init() {\n            //console.log( 'VisChartBase init', Date.now(), this.width, this.height, this.canvas );\n\n            if (!this.box) return;\n\n            this.stage = new _konva2.default.Stage({\n                container: this.box,\n                width: this.width,\n                height: this.height\n            });\n\n            this.customWidth && (this.box.style.width = this.customWidth + 'px');\n            this.customHeight && (this.box.style.height = this.customHeight + 'px');\n\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(data) {\n            var _this2 = this;\n\n            this.data = data;\n\n            if (!_jsonUtilsx2.default.jsonInData(this.data, 'series')) return;\n            this.ins.map(function (item) {\n                item.destroy();\n            });\n\n            //console.log( ju );\n\n            this.stage.removeChildren();\n\n            //console.log( 'update data', data );\n\n            if (_jsonUtilsx2.default.jsonInData(this.data, 'legend.data') && this.data.legend.data.length) {\n                this.legend = new _legend2.default(this.box, this.width, this.height);\n                this.legend.setStage(this.stage);\n                this.legend.setOptions({\n                    onChange: function onChange(group) {\n                        //console.log( 'legend onchange', group );\n                        _this2.initChart();\n                    }\n                });\n                this.legend.update(this.data.legend);\n            }\n            this.initChart();\n            return this;\n        }\n    }, {\n        key: 'initChart',\n        value: function initChart() {\n            var _this3 = this;\n\n            this.ins.map(function (item) {\n                item.destroy();\n            });\n\n            this.ins = [];\n\n            this.data.series.map(function (val, key) {\n                //console.log( val, constant );\n                var ins = void 0;\n\n                switch (val.type) {\n                    case constant.CHART_TYPE.dount:\n                        {\n                            ins = new _index2.default(_this3.box, _this3.width, _this3.height);\n                            break;\n                        }\n                    case constant.CHART_TYPE.gauge:\n                        {\n                            ins = new _index4.default(_this3.box, _this3.width, _this3.height);\n                            break;\n                        }\n                }\n\n                if (ins) {\n                    _this3.legend && ins.setLegend(_this3.legend);\n                    _this3.options && ins.setOptions(_this3.options);\n                    ins.setStage(_this3.stage);\n                    ins.update(_this3.getLegendData(val), _jsonUtilsx2.default.clone(_this3.data));\n                    _this3.ins.push(ins);\n                }\n            });\n        }\n    }, {\n        key: 'getLegendData',\n        value: function getLegendData(data) {\n            data = _jsonUtilsx2.default.clone(data);\n\n            var tmp = [];\n\n            if (this.legend && this.legend.group && this.legend.group.length) {\n                //console.log( 'getLegendData', this.legend.group, 111111111 );\n                this.legend.group.map(function (item, key) {\n                    if (!item.disabled) {\n                        tmp.push(data.data[key]);\n                    }\n                });\n                data.data = tmp;\n            }\n\n            return data;\n        }\n    }]);\n\n    return VisChart;\n}(_vischartbase2.default);\n\nexports.default = VisChart;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _vischartbase = require('../common/vischartbase.js');\n\nvar _vischartbase2 = _interopRequireDefault(_vischartbase);\n\nvar _geometry = require('../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _pointat = require('../common/pointat.js');\n\nvar _pointat2 = _interopRequireDefault(_pointat);\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _utils = require('../common/utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nvar _iconcircle = require('../icon/iconcircle.js');\n\nvar _iconcircle2 = _interopRequireDefault(_iconcircle);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Dount = function (_VisChartBase) {\n    _inherits(Dount, _VisChartBase);\n\n    function Dount(box, width, height) {\n        _classCallCheck(this, Dount);\n\n        var _this = _possibleConstructorReturn(this, (Dount.__proto__ || Object.getPrototypeOf(Dount)).call(this, box, width, height));\n\n        _this.name = 'Dount ' + Date.now();\n\n        _this.outPercent = .53;\n        _this.inPercent = .37;\n\n        _this.circleLinePercent = .34;\n        _this.circlePercent = .31;\n        _this.circleLineRotation = 0;\n        _this.circleLineRotationStep = 4;\n\n        _this.animationStep = 8;\n        _this.angleStep = 5;\n\n        _this.textHeight = 26;\n        _this.lineOffset = 50;\n\n        _this.path = [];\n\n        _this.textOffset = 4;\n\n        _this.lineColor = '#24a3ea';\n\n        _this.lineRange = {\n            \"1\": [],\n            \"2\": [],\n            \"4\": [],\n            \"8\": []\n        };\n\n        _this.lineWidth = 45;\n        _this.lineSpace = 10;\n        _this.lineAngle = 35;\n        _this.lineHeight = 20;\n\n        _this.loopSort = [4, 8, 1, 2];\n\n        _this.init();\n        return _this;\n    }\n\n    _createClass(Dount, [{\n        key: 'init',\n        value: function init() {\n            this.calcLayoutPosition();\n\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(data, allData) {\n            _get(Dount.prototype.__proto__ || Object.getPrototypeOf(Dount.prototype), 'update', this).call(this, data, allData);\n\n            this.data = data;\n            this.allData = allData;\n\n            if (!_jsonUtilsx2.default.jsonInData(this.data, 'data')) return;\n\n            this.calcDataPosition();\n            this.initDataLayout();\n\n            console.log('dount update', this.data, this, utils);\n\n            this.animation();\n            this.animationCircleLine();\n\n            return this;\n        }\n    }, {\n        key: 'reset',\n        value: function reset() {\n            this.path.map(function (val) {\n                val.pathData = [];\n            });\n        }\n    }, {\n        key: 'animationCircleLine',\n        value: function animationCircleLine() {\n            var _this2 = this;\n\n            if (this.isDestroy) return;\n            if (!this.circleLine) return;\n\n            this.circleLineRotation += this.circleLineRotationStep;\n\n            this.circleLine.rotation(this.circleLineRotation);\n            this.stage.add(this.layoutLayer);\n\n            window.requestAnimationFrame(function () {\n                _this2.animationCircleLine();\n            });\n        }\n    }, {\n        key: 'animation',\n        value: function animation() {\n            var _this3 = this;\n\n            if (this.isDestroy) return;\n\n            if (this.isDone) return;\n            //this.countAngle = this.totalAngle;\n\n            var tmp = void 0,\n                tmppoint = void 0,\n                step = this.angleStep;\n\n            this.countAngle += this.animationStep;\n            //this.countAngle += 350;\n\n            if (this.countAngle >= this.totalAngle) {\n                this.countAngle = this.totalAngle;\n                this.isDone = 1;\n            }\n\n            this.reset();\n\n            for (var i = this.path.length - 1; i >= 0; i--) {\n                //for( let i = 0; i < this.path.length; i++ ){\n                //let i = 2;\n                var item = this.path[i];\n\n                //console.log( i, item );\n\n                var tmpAngle = this.countAngle;\n\n                if (tmpAngle >= item.itemData.endAngle) {\n                    tmpAngle = item.itemData.endAngle;\n                }\n\n                if (tmpAngle < item.itemData.startAngle) continue;\n\n                item.pathData.push('M');\n                for (var _i = item.itemData.startAngle;; _i += step) {\n                    if (_i >= tmpAngle) _i = tmpAngle;\n\n                    tmppoint = tmp = geometry.distanceAngleToPoint(this.outRadius, _i);\n                    item.pathData.push([tmppoint.x, tmppoint.y].join(',') + ',');\n                    if (_i == item.itemData.startAngle) item.pathData.push('L');\n\n                    if (_i >= tmpAngle) break;\n                }\n                for (var _i2 = tmpAngle;; _i2 -= step) {\n                    if (_i2 <= item.itemData.startAngle) _i2 = item.itemData.startAngle;\n\n                    tmppoint = tmp = geometry.distanceAngleToPoint(this.inRadius, _i2);\n                    item.pathData.push([tmppoint.x, tmppoint.y].join(',') + ',');\n                    if (_i2 == item.itemData.startAngle) break;\n                }\n\n                item.pathData.push('z');\n\n                item.path.setData(item.pathData.join(''));\n            }\n            this.layer.map(function (val, key) {\n                _this3.stage.add(val);\n                val.setZIndex(_this3.layer.length - key);\n            });\n\n            window.requestAnimationFrame(function () {\n                _this3.animation();\n            });\n\n            if (this.isDone) {\n                window.requestAnimationFrame(function () {\n                    _this3.animationLine();\n                });\n            }\n        }\n    }, {\n        key: 'drawCircle',\n        value: function drawCircle() {\n            this.circleRadius = Math.ceil(this.circlePercent * this.min / 2);\n\n            this.circle = new _konva2.default.Circle({\n                x: this.fixCx(),\n                y: this.fixCy(),\n                radius: this.circleRadius,\n                stroke: this.lineColor,\n                strokeWidth: 2.5,\n                fill: '#ffffff00'\n            });\n            this.layoutLayer.add(this.circle);\n        }\n    }, {\n        key: 'drawCircleLine',\n        value: function drawCircleLine() {\n            this.circleLineRadius = Math.ceil(this.circleLinePercent * this.min / 2);\n\n            var points = [];\n            points.push('M');\n            for (var i = 90; i <= 180; i++) {\n                var tmp = geometry.distanceAngleToPoint(this.circleLineRadius, i);\n                points.push([tmp.x, tmp.y].join(',') + ',');\n                if (i == 90) {\n                    points.push('L');\n                }\n            }\n            points.push('M');\n            for (var _i3 = 270; _i3 <= 360; _i3++) {\n                var _tmp = geometry.distanceAngleToPoint(this.circleLineRadius, _i3);\n                points.push([_tmp.x, _tmp.y].join(',') + ',');\n                if (_i3 == 270) {\n                    points.push('L');\n                }\n            }\n\n            this.circleLine = new _konva2.default.Path({\n                data: points.join(''),\n                x: this.fixCx(),\n                y: this.fixCy(),\n                stroke: this.lineColor,\n                strokeWidth: 2.5,\n                fill: '#ffffff00'\n            });\n\n            this.layoutLayer.add(this.circleLine);\n        }\n    }, {\n        key: 'initDataLayout',\n        value: function initDataLayout() {\n            var _this4 = this;\n\n            this.layer = [];\n            this.path = [];\n            this.line = [];\n\n            this.layoutLayer = new _konva2.default.Layer();\n\n            this.drawCircle();\n            this.drawCircleLine();\n\n            this.stage.add(this.layoutLayer);\n\n            this.data.data.map(function (val, key) {\n                var color = _this4.colors[key % _this4.colors.length];\n\n                if (_jsonUtilsx2.default.jsonInData(val, 'itemStyle.color')) {\n                    //path.fill( val.itemStyle.color );\n                    color = val.itemStyle.color;\n                }\n\n                var path = new _konva2.default.Path({\n                    x: _this4.fixCx(),\n                    y: _this4.fixCy(),\n                    strokeWidth: 1,\n                    stroke: color,\n                    data: '',\n                    fill: color\n                });\n\n                /*\n                console.log( \n                    key % this.colors.length\n                    , this.colors[ key % this.colors.length] \n                );\n                */\n\n                var tmp = {\n                    path: path,\n                    pathData: [],\n                    itemData: val\n                };\n\n                _this4.path.push(tmp);\n\n                var line = new _konva2.default.Line({\n                    x: _this4.fixCx(),\n                    y: _this4.fixCy(),\n                    points: [0, 0, 0, 0],\n                    stroke: '#ffffff',\n                    strokeWidth: 2\n                });\n                _this4.line.push(line);\n\n                var layer = new _konva2.default.Layer();\n                layer.add(path);\n                layer.add(line);\n\n                _this4.layer.push(layer);\n            });\n            this.layer.map(function (val, key) {\n                _this4.stage.add(val);\n            });\n\n            /*\n            window.requestAnimationFrame( ()=>{ this.tmpfunc() } );\n            */\n\n            return this;\n        }\n    }, {\n        key: 'calcDataPosition',\n        value: function calcDataPosition() {\n            var _this5 = this;\n\n            if (!this.data) return;\n\n            var total = 0,\n                tmp = 0;\n\n            this.data.data.map(function (val) {\n                total += val.value;\n            });\n            this.total = total;\n\n            this.data.data.map(function (val) {\n                val._percent = utils.parseFinance(val.value / total);\n                tmp = utils.parseFinance(tmp + val._percent);\n                val._totalPercent = tmp;\n\n                val.percent = parseInt(val._percent * 100);\n\n                val.endAngle = _this5.totalAngle * val._totalPercent;\n            });\n\n            //修正浮点数精确度\n            if (this.data.data.length) {\n                var item = this.data.data[this.data.data.length - 1];\n                tmp = tmp - item._percent;\n\n                item._percent = 1 - tmp;\n                item.percent = parseInt(item._percent * 100);\n                item._totalPercent = 1;\n                item.endAngle = this.totalAngle;\n            }\n\n            this.lineRange = {\n                \"1\": [],\n                \"2\": [],\n                \"4\": [],\n                \"8\": []\n                //计算开始角度, 计算指示线的2端\n            };this.data.data.map(function (val, key) {\n                if (!key) {\n                    val.startAngle = 0;\n                } else {\n                    val.startAngle = _this5.data.data[key - 1].endAngle;\n                }\n\n                val.midAngle = val.startAngle + (val.endAngle - val.startAngle) / 2;\n\n                val.lineStart = geometry.distanceAngleToPoint(_this5.outRadius, val.midAngle);\n                val.lineEnd = geometry.distanceAngleToPoint(_this5.outRadius + _this5.lineLength, val.midAngle);\n\n                val.textPoint = geometry.distanceAngleToPoint(_this5.outRadius + _this5.lineLength, val.midAngle);\n\n                val.pointDirection = new _pointat2.default(_this5.fixWidth(), _this5.fixHeight(), geometry.pointPlus(val.textPoint, _this5.cpoint));\n                var lineAngle = val.pointDirection.autoAngle();\n                val.lineExpend = _jsonUtilsx2.default.clone(val.lineEnd);\n\n                switch (lineAngle) {\n                    case 1:\n                    case 8:\n                        {\n                            //val.lineEnd.x = this.lineLeft;\n                            val.lineEnd.x = -(_this5.outRadius + _this5.lineSpace);\n                            val.lineExpend.x = val.lineEnd.x - _this5.lineWidth;\n                            break;\n                        }\n                    default:\n                        {\n                            val.lineEnd.x = _this5.outRadius + _this5.lineSpace;\n                            val.lineExpend.x = val.lineEnd.x + _this5.lineWidth;\n                            break;\n                        }\n                }\n\n                _this5.lineRange[lineAngle].push(val);\n            });\n\n            this.loopSort.map(function (key) {\n                var item = _this5.lineRange[key];\n                if (!(item && item.length && item.length > 1)) return;\n                var needFix = void 0;\n                for (var i = 1; i < item.length; i++) {\n                    var pre = item[i - 1],\n                        cur = item[i];\n                    //console.log( pre.lineEnd.y, cur.lineEnd.y );\n                    if (Math.abs(cur.lineEnd.y - pre.lineEnd.y) < _this5.lineHeight) {\n                        /*\n                        cur.lineEnd.y = pre.lineEnd.y + this.lineHeight;\n                        cur.lineExpend.y = cur.lineEnd.y;\n                        */\n                        needFix = 1;\n                        break;\n                    }\n                }\n                switch (key) {\n                    case 1:\n                        {\n                            var tmpY = item[0].lineEnd.y;\n                            console.log(item);\n                            for (var _i4 = item.length - 2; _i4 >= 0; _i4--) {\n                                var _pre = item[_i4 + 1],\n                                    _cur = item[_i4];\n                                if (Math.abs(_pre.lineEnd.y - _cur.lineEnd.y) < _this5.lineHeight || _cur.lineEnd.y <= _pre.lineEnd.y) {\n                                    tmpY = _pre.lineEnd.y + _this5.lineHeight;\n                                    _cur.lineEnd.y = tmpY;\n\n                                    if (_cur.lineEnd.y < _cur.lineStart.y) {\n                                        //tmpY = cur.lineStart.y + this.lineHeight;\n                                        //cur.lineEnd.y = tmpY;\n                                    }\n                                    _cur.lineExpend.y = tmpY;\n                                }\n                            }\n                            break;\n                        }\n                    case 2:\n                        {\n                            var _tmpY = item[0].lineEnd.y;\n                            for (var _i5 = 1; _i5 < item.length; _i5++) {\n                                var _pre2 = item[_i5 - 1],\n                                    _cur2 = item[_i5],\n                                    zero = item[0];\n\n                                if (Math.abs(_pre2.lineEnd.y + _this5.fixCy()) < _this5.lineHeight) {\n                                    _pre2.lineExpend.y = _pre2.lineEnd.y = _pre2.lineExpend.y + _this5.lineHeight;\n                                }\n\n                                if (Math.abs(_pre2.lineEnd.y - _cur2.lineEnd.y) < _this5.lineHeight || _cur2.lineEnd.y >= _pre2.lineEnd.y) {\n\n                                    _tmpY = _pre2.lineEnd.y + _this5.lineHeight;\n                                    _cur2.lineEnd.y = _tmpY;\n\n                                    if (_cur2.lineEnd.y < _cur2.lineStart.y) {\n                                        //tmpY = cur.lineStart.y + this.lineHeight;\n                                        //cur.lineEnd.y = tmpY;\n                                    }\n                                    _cur2.lineExpend.y = _tmpY;\n                                }\n                            }\n\n                            break;\n                        }\n                    case 4:\n                        {\n                            var _tmpY2 = item[0].lineEnd.y;\n                            for (var _i6 = 1; _i6 < item.length; _i6++) {\n                                var _pre3 = item[_i6 - 1],\n                                    _cur3 = item[_i6],\n                                    _zero = item[0];\n                                if (Math.abs(_pre3.lineEnd.y - _cur3.lineEnd.y) < _this5.lineHeight || _cur3.lineEnd.y <= _pre3.lineEnd.y) {\n                                    console.log(_pre3.lineEnd.y, _cur3.lineEnd.y);\n                                    _tmpY2 = _pre3.lineEnd.y + _this5.lineHeight;\n                                    _cur3.lineEnd.y = _tmpY2;\n\n                                    if (_cur3.lineEnd.y < _cur3.lineStart.y) {\n                                        _tmpY2 = _cur3.lineStart.y + _this5.lineHeight;\n                                        _cur3.lineEnd.y = _tmpY2;\n                                    }\n                                    _cur3.lineExpend.y = _tmpY2;\n                                }\n                            }\n                            break;\n                        }\n                    case 8:\n                        {\n                            var _tmpY3 = item[item.length - 1].lineEnd.y;\n                            for (var _i7 = item.length - 2; _i7 > 0; _i7--) {\n                                var _pre4 = item[_i7 + 1],\n                                    _cur4 = item[_i7];\n                                if (Math.abs(_pre4.lineEnd.y - _cur4.lineEnd.y) < _this5.lineHeight || _cur4.lineEnd.y <= _pre4.lineEnd.y) {\n                                    _tmpY3 = _pre4.lineEnd.y + _this5.lineHeight;\n                                    _cur4.lineEnd.y = _tmpY3;\n\n                                    if (_cur4.lineEnd.y < _cur4.lineStart.y) {\n                                        _cur4.lineEnd.y = _cur4.lineStart.y + _this5.lineHeight;\n                                    }\n                                    _cur4.lineExpend.y = _cur4.lineEnd.y;\n                                }\n                            }\n\n                            break;\n                        }\n                }\n            });\n        }\n    }, {\n        key: 'animationLine',\n        value: function animationLine() {\n            var _this6 = this;\n\n            if (this.lineLengthCount >= this.lineLength) {\n                return;\n            }\n            this.lineLengthCount = this.lineLength;\n\n            this.lineLengthCount += this.lineLengthStep;\n\n            if (this.lineLengthCount >= this.lineLength) {\n                this.lineLengthCount = this.lineLength;\n            }\n\n            for (var i = 0; i < this.path.length; i++) {\n                var path = this.path[i];\n                var layer = this.layer[i];\n\n                //console.log( path, path.itemData.pointDirection.auto(), path.itemData.pointDirection.autoAngle()  );\n\n                //let lineEnd = geometry.distanceAngleToPoint( this.outRadius + this.lineLengthCount, path.itemData.midAngle );\n                var lineEnd = path.itemData.lineEnd;\n                var lineExpend = path.itemData.lineExpend;\n\n                var line = this.line[i];\n                line.points([path.itemData.lineStart.x, path.itemData.lineStart.y, lineEnd.x, lineEnd.y, lineExpend.x, lineExpend.y]);\n\n                if (this.lineLengthCount >= this.lineLength) {\n\n                    /*\n                    */\n                    this.addText(path, layer);\n                    this.addIcon(path, layer);\n                } else {\n                    window.requestAnimationFrame(function () {\n                        _this6.animationLine();\n                    });\n                }\n\n                this.stage.add(layer);\n            }\n        }\n    }, {\n        key: 'addIcon',\n        value: function addIcon(path, layer) {\n            var icon = new _iconcircle2.default(this.box, this.fixWidth(), this.fixHeight());\n            icon.setOptions({\n                stage: this.stage,\n                layer: layer,\n                cx: this.fixCx(),\n                cy: this.fixCy()\n            });\n            icon.update(path.itemData.lineExpend);\n        }\n    }, {\n        key: 'addText',\n        value: function addText(path, layer) {\n            var text = new _konva2.default.Text({\n                x: 0,\n                y: 0,\n                text: path.itemData.percent + '%',\n                fill: '#a3a7f3',\n                fontFamily: 'MicrosoftYaHei',\n                fontSize: 16,\n                fontStyle: 'italic'\n            });\n\n            var textPoint = path.itemData.textPoint,\n                angleDirect = path.itemData.pointDirection.autoAngle();\n\n            textPoint = _jsonUtilsx2.default.clone(path.itemData.lineEnd);\n            textPoint.y -= text.textHeight + 2;\n\n            switch (angleDirect) {\n                case 1:\n                    {\n                        textPoint.x -= text.textWidth;\n                        break;\n                    }\n                case 2:\n                    {\n                        break;\n                    }\n                case 4:\n                    {\n                        break;\n                    }\n                case 8:\n                    {\n                        textPoint.x -= text.textWidth;\n                        break;\n                    }\n            }\n\n            var textX = this.fixCx() + textPoint.x,\n                textY = this.fixCy() + textPoint.y,\n                direct = path.itemData.pointDirection.auto();\n\n            text.x(textX);\n            text.y(textY);\n            layer.add(text);\n        }\n    }, {\n        key: 'calcLayoutPosition',\n        value: function calcLayoutPosition() {\n            //console.log( 'calcLayoutPosition', Date.now() );\n\n            this.outRadius = Math.ceil(this.outPercent * this.min / 2);\n            this.inRadius = Math.ceil(this.inPercent * this.min / 2);\n\n            this.lineLength = (Math.min(this.fixWidth(), this.fixHeight()) - this.outRadius * 2) / 2 - this.lineOffset;\n            this.lineLengthCount = 1;\n            this.lineLengthStep = .5;\n\n            this.lineLeft = this.fixCx() - this.outRadius - this.lineSpace;\n            this.lineRight = this.fixCx() + this.outRadius + this.lineSpace;\n\n            return this;\n        }\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            _get(Dount.prototype.__proto__ || Object.getPrototypeOf(Dount.prototype), 'destroy', this).call(this);\n            this.layoutLayer.remove();\n            this.layer.map(function (item) {\n                item.remove();\n            });\n            console.log('destroy', Date.now());\n        }\n    }]);\n\n    return Dount;\n}(_vischartbase2.default);\n\nexports.default = Dount;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _vischartbase = require('../common/vischartbase.js');\n\nvar _vischartbase2 = _interopRequireDefault(_vischartbase);\n\nvar _geometry = require('../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _utils = require('../common/utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar IconCircle = function (_VisChartBase) {\n    _inherits(IconCircle, _VisChartBase);\n\n    function IconCircle(box, width, height) {\n        _classCallCheck(this, IconCircle);\n\n        var _this = _possibleConstructorReturn(this, (IconCircle.__proto__ || Object.getPrototypeOf(IconCircle)).call(this, box, width, height));\n\n        _this.name = 'IconRound ' + Date.now();\n\n        _this.outRadius = 6;\n        _this.inRadius = 2.5;\n\n        _this.color = '#ffffff';\n\n        _this.max = 1.1;\n        _this.min = 0.8;\n\n        _this.step = .006;\n        _this.cur = 1;\n\n        _this.isplus = 1;\n\n        _this.init();\n        return _this;\n    }\n\n    _createClass(IconCircle, [{\n        key: 'init',\n        value: function init() {\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(point) {\n            this.point = point;\n\n            this.group = new _konva2.default.Group({\n                x: this.point.x + this.cx,\n                y: this.point.y + this.cy,\n                width: this.outRadius * 2,\n                height: this.outRadius * 2\n            });\n\n            this.circle = new _konva2.default.Circle({\n                radius: this.inRadius,\n                fill: this.color,\n                stroke: this.color,\n                x: 0,\n                y: 0\n            });\n\n            this.outcircle = new _konva2.default.Circle({\n                radius: this.outRadius,\n                fill: '#ffffff00',\n                stroke: this.color,\n                strokeWidth: 1,\n                x: 0,\n                y: 0\n            });\n\n            this.group.add(this.circle);\n            //this.group.add( this.outcircle );\n\n            this.group.scale({ x: this.cur, y: this.cur });\n\n            this.layer.add(this.group);\n\n            //window.requestAnimationFrame( ()=>{ this.animation() } );\n        }\n    }, {\n        key: 'reset',\n        value: function reset() {}\n    }, {\n        key: 'animation',\n        value: function animation() {\n            var _this2 = this;\n\n            if (this.plus) {\n                this.cur = this.cur + this.step;\n\n                if (this.cur > this.max) {\n                    this.cur = this.max;\n                    this.plus = 0;\n                }\n            } else {\n                this.cur = this.cur - this.step;\n                if (this.cur < this.min) {\n                    this.cur = this.min;\n                    this.plus = 1;\n                }\n            }\n\n            this.group.scale({ x: this.cur, y: this.cur });\n\n            this.stage.add(this.layer);\n\n            window.requestAnimationFrame(function () {\n                _this2.animation();\n            });\n        }\n    }, {\n        key: 'initDataLayout',\n        value: function initDataLayout() {}\n    }, {\n        key: 'calcDataPosition',\n        value: function calcDataPosition() {}\n    }, {\n        key: 'animationLine',\n        value: function animationLine() {}\n    }, {\n        key: 'calcLayoutPosition',\n        value: function calcLayoutPosition() {}\n    }]);\n\n    return IconCircle;\n}(_vischartbase2.default);\n\nexports.default = IconCircle;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _vischartbase = require('../common/vischartbase.js');\n\nvar _vischartbase2 = _interopRequireDefault(_vischartbase);\n\nvar _geometry = require('../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _pointat = require('../common/pointat.js');\n\nvar _pointat2 = _interopRequireDefault(_pointat);\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _utils = require('../common/utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nvar _iconround = require('../icon/iconround.js');\n\nvar _iconround2 = _interopRequireDefault(_iconround);\n\nvar _roundstatetext = require('../icon/roundstatetext.js');\n\nvar _roundstatetext2 = _interopRequireDefault(_roundstatetext);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Gauge = function (_VisChartBase) {\n    _inherits(Gauge, _VisChartBase);\n\n    function Gauge(box, width, height) {\n        _classCallCheck(this, Gauge);\n\n        var _this = _possibleConstructorReturn(this, (Gauge.__proto__ || Object.getPrototypeOf(Gauge)).call(this, box, width, height));\n\n        _this.name = 'Gauge' + Date.now();\n\n        _this.curRate = 0;\n        _this.totalNum = 0;\n        _this.totalNumStep = 5;\n\n        _this.animationStep = 40 * 1;\n\n        _this.roundRadiusPercent = .085;\n\n        _this.lineColor = '#596ea7';\n\n        _this.circleLinePercent = .26;\n        _this.circlePercent = .28;\n\n        _this.circleLineRotation = 0;\n        _this.circleLineRotationStep = 4;\n\n        _this.arcLinePercent = .39 / 2;\n\n        _this.arcOutPercent = .38 / 2;\n        _this.arcInPercent = .305 / 2;\n\n        _this.arcLabelLength = 6;\n        _this.arcTextLength = 20;\n\n        _this.arcAngle = 280;\n        _this.part = 22;\n        _this.arcTotal = 1100;\n\n        _this.textOffset = 0;\n\n        _this.arcOffset = 90 + (360 - _this.arcAngle) / 2;\n        _this.arcOffsetPad = -5;\n        _this.partLabel = _this.part / 2;\n        _this.partAngle = _this.arcAngle / _this.part;\n        _this.partNum = _this.arcTotal / _this.part;\n\n        _this.textOffsetX = -1;\n        _this.textOffsetY = -8;\n        _this.textLineLength = 6;\n\n        _this.textRectWidthPercent = .5;\n        _this.textRectHeightPercent = .11;\n\n        _this.textRoundPercent = .39;\n        _this.textRoundOffsetAngle = 160;\n        _this.textRoundPlusAngle = 110;\n        _this.textRoundMaxAngle = _this.textRoundOffsetAngle + _this.textRoundPlusAngle * 2;\n        _this.roundStatusRaidus = 30;\n        _this.textRoundAngle = [{\n            angle: _this.textRoundOffsetAngle,\n            text: '低',\n            point: {},\n            min: 0,\n            max: 100,\n            radius: _this.roundStatusRaidus,\n            lineColor: _this.lineColor\n        }, {\n            angle: _this.textRoundOffsetAngle + _this.textRoundPlusAngle,\n            text: '中',\n            point: {},\n            min: 101,\n            max: 500,\n            radius: _this.roundStatusRaidus,\n            lineColor: _this.lineColor\n        }, {\n            angle: _this.textRoundOffsetAngle + _this.textRoundPlusAngle * 2,\n            text: '高',\n            point: {},\n            min: 501,\n            max: Math.pow(10, 10),\n            radius: _this.roundStatusRaidus,\n            lineColor: _this.lineColor\n        }];\n\n        _this.init();\n        return _this;\n    }\n\n    _createClass(Gauge, [{\n        key: 'getAttackRateAngle',\n        value: function getAttackRateAngle() {\n            var r = 0;\n\n            r = this.arcOffset + this.arcAngle * this.getAttackRatePercent();\n\n            return r;\n        }\n    }, {\n        key: 'getAttackRatePercent',\n        value: function getAttackRatePercent() {\n            var r = 0,\n                tmp = void 0;\n            if (this.curRate) {\n                tmp = this.curRate;\n                if (tmp > this.arcTotal) {\n                    tmp = this.arcTotal;\n                }\n\n                r = tmp / this.arcTotal;\n            }\n            return r;\n        }\n    }, {\n        key: 'getAttackText',\n        value: function getAttackText() {\n            var _this2 = this;\n\n            var text = '低';\n\n            if (this.curRate) {\n                this.textRoundAngle.map(function (val) {\n                    if (_this2.curRate >= val.min && _this2.curRate <= val.max) {\n                        text = val.text;\n                    }\n                });\n            }\n\n            return text + '\\u9891\\n\\u653B\\u51FB';\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            var _this3 = this;\n\n            this.textRoundRadius = this.width * this.textRoundPercent;\n\n            this.roundRadius = this.width * this.roundRadiusPercent;\n\n            this.arcInRadius = this.width * this.arcInPercent;\n            this.arcOutRadius = this.width * this.arcOutPercent;\n\n            this.arcLineRaidus = Math.ceil(this.arcLinePercent * this.max);\n\n            this.textWidth = this.textRectWidthPercent * this.width;\n            this.textHeight = 38;\n            this.textX = this.cx - this.textWidth / 2;\n            this.textY = this.cy + this.arcLineRaidus + this.arcTextLength / 2 + 2;\n\n            this.textRoundAngle.map(function (val, key) {\n                var point = geometry.distanceAngleToPoint(_this3.textRoundRadius, val.angle);\n                val.point = geometry.pointPlus(point, _this3.cpoint);\n            });\n\n            this.arcPartLineAr = [];\n            this.arcOutlinePartAr = [];\n            this.textAr = [];\n            for (var i = 0; i <= this.part; i++) {\n                var start = void 0,\n                    end = void 0,\n                    angle = void 0;\n                angle = i * this.partAngle + this.arcOffset;\n\n                if (i && i < this.part) {\n                    start = geometry.distanceAngleToPoint(this.arcInRadius, angle);\n                    end = geometry.distanceAngleToPoint(this.arcOutRadius, angle);\n\n                    this.arcPartLineAr.push('M');\n                    this.arcPartLineAr.push([start.x, start.y].join(','));\n                    this.arcPartLineAr.push('L');\n                    this.arcPartLineAr.push([end.x, end.y].join(','));\n                }\n\n                start = geometry.distanceAngleToPoint(this.arcLineRaidus, angle);\n                end = geometry.distanceAngleToPoint(this.arcLineRaidus + this.arcLabelLength, angle);\n\n                this.arcOutlinePartAr.push('M');\n                this.arcOutlinePartAr.push([start.x, start.y].join(','));\n                this.arcOutlinePartAr.push('L');\n                this.arcOutlinePartAr.push([end.x, end.y].join(','));\n\n                if (!(i * this.partNum % 100) || i === 0) {\n                    var angleOffset = 8,\n                        lengthOffset = 0;\n\n                    if (i === 0) {\n                        angleOffset = 1;\n                    }\n\n                    if (i >= 19) {\n                        angleOffset = 14;\n                    }\n                    if (i >= 21) {\n                        angleOffset = 18;\n                    }\n                    var text = {\n                        text: i * this.partNum,\n                        angle: angle - angleOffset,\n                        point: geometry.distanceAngleToPoint(this.arcLineRaidus + this.arcTextLength + lengthOffset, angle - angleOffset)\n                    };\n                    text.textPoint = new _pointat2.default(this.width, this.height, geometry.pointPlus(text.point, this.cpoint));\n\n                    this.textAr.push(text);\n                }\n            }\n        }\n    }, {\n        key: 'initRoundText',\n        value: function initRoundText() {\n            var _this4 = this;\n\n            this.textRoundAngle.map(function (val) {\n\n                val.ins = new _roundstatetext2.default(_this4.box, _this4.width, _this4.height);\n                val.ins.setOptions(Object.assign(val, {\n                    stage: _this4.stage,\n                    layer: _this4.layoutLayer\n                }));\n                val.ins.init();\n                val.ins.update(_this4.curRate);\n            });\n        }\n        /*\n        {\n        \"series\": [\n            {\n                \"type\": \"gauge\",\n                \"data\": [\n                    {\n                        \"value\": 200,\n                        \"total\": 134567,\n                        \"name\": \"完成率\"\n                    }\n                ]\n            }\n        ]\n        }\n        */\n\n    }, {\n        key: 'update',\n        value: function update(data, allData) {\n            var _this5 = this;\n\n            this.stage.removeChildren();\n\n            //console.log( 123, data );\n\n            if (data && data.data && data.data.length) {\n                data.data.map(function (val) {\n                    _this5.curRate = val.value;\n                    _this5.totalNum = val.total;\n                });\n            }\n\n            /*\n            this.curRate = 600;\n            this.totalNum = 234567;\n            */\n\n            this.initDataLayout();\n\n            //console.log( 'gauge update', this.getAttackRateAngle() )\n            this.angle = this.arcOffset + this.arcOffsetPad;\n            this.animationAngle = this.getAttackRateAngle() + this.arcOffsetPad;\n            //console.log( this.angle, this.animationAngle );\n\n            if (this.curRate) {\n                this.rateStep = Math.floor(this.curRate / (this.animationStep * 2));\n                this.animation();\n            }\n            if (this.totalNum) {\n                this.totalNumStep = Math.floor(this.totalNum / this.animationStep);\n                this.totalNumCount = 0;\n                this.animationText();\n            }\n\n            this.animationCircleLine();\n        }\n    }, {\n        key: 'animationCircleLine',\n        value: function animationCircleLine() {\n            var _this6 = this;\n\n            //console.log( 'animationCircleLine' );\n            if (this.isDestroy) return;\n            if (!this.circleLine) return;\n\n            this.circleLineRotation += this.circleLineRotationStep;\n\n            this.circleLine.rotation(this.circleLineRotation);\n            this.stage.add(this.layoutLayer);\n\n            window.requestAnimationFrame(function () {\n                _this6.animationCircleLine();\n            });\n        }\n    }, {\n        key: 'drawText',\n        value: function drawText() {\n\n            var params = {\n                text: 0 + '',\n                x: this.cx,\n                y: this.textY,\n                fontSize: 26,\n                fontFamily: 'HuXiaoBoKuHei',\n                fill: '#ffffff',\n                fontStyle: 'italic'\n            },\n                tmp = _jsonUtilsx2.default.clone(params);\n            tmp.text = this.totalNum;\n\n            this.totalText = new _konva2.default.Text(params);\n            this.totalText.x(this.cx - this.totalText.textWidth / 2);\n            this.totalText.y(this.textY + 5);\n\n            this.tmpTotalText = new _konva2.default.Text(tmp);\n        }\n    }, {\n        key: 'drawTextRect',\n        value: function drawTextRect() {\n\n            var textWidth = this.tmpTotalText.textWidth + 30,\n                textX = 0;\n            if (textWidth < 170) {\n                textWidth = 170;\n            }\n            textX = this.cx - textWidth / 2 + 2;\n\n            this.textRect = new _konva2.default.Rect({\n                fill: '#596ea7',\n                stroke: '#ffffff00',\n                strokeWidth: 0,\n                opacity: .3,\n                width: textWidth,\n                height: this.textHeight,\n                x: textX,\n                y: this.textY\n            });\n\n            var points = [];\n            points.push('M', [textX, this.textY + this.textLineLength].join(','));\n            points.push('L', [textX, this.textY].join(','));\n            points.push('L', [textX + this.textLineLength, this.textY].join(','));\n\n            points.push('M', [textX + textWidth - this.textLineLength, this.textY].join(','));\n            points.push('L', [textX + textWidth, this.textY].join(','));\n            points.push('L', [textX + textWidth, this.textY + this.textLineLength].join(','));\n\n            points.push('M', [textX + textWidth, this.textY + this.textHeight - this.textLineLength].join(','));\n            points.push('L', [textX + textWidth, this.textY + this.textHeight].join(','));\n            points.push('L', [textX + textWidth - this.textLineLength, this.textY + this.textHeight].join(','));\n\n            points.push('M', [textX + this.textLineLength, this.textY + this.textHeight].join(','));\n            points.push('L', [textX, this.textY + this.textHeight].join(','));\n            points.push('L', [textX, this.textY + this.textHeight - this.textLineLength].join(','));\n\n            this.textLinePath = new _konva2.default.Path({\n                data: points.join(''),\n                stroke: this.lineColor,\n                strokeWidth: 1\n            });\n\n            this.layoutLayer.add(this.textLinePath);\n            this.layoutLayer.add(this.textRect);\n            this.layoutLayer.add(this.totalText);\n        }\n    }, {\n        key: 'drawArcText',\n        value: function drawArcText() {\n            var _this7 = this;\n\n            if (!(this.textAr && this.textAr.length)) return;\n\n            this.textAr.map(function (val) {\n                var text = new _konva2.default.Text({\n                    x: val.point.x + _this7.cx,\n                    y: val.point.y + _this7.cy,\n                    text: val.text + '',\n                    fontSize: 11\n                    //, rotation: val.angle\n                    , fontFamily: 'MicrosoftYaHei',\n                    fill: _this7.lineColor\n                });\n                text.rotation(val.angle + 90);\n\n                _this7.layoutLayer.add(text);\n            });\n        }\n    }, {\n        key: 'drawArcLine',\n        value: function drawArcLine() {\n\n            var points = [];\n            points.push('M');\n            for (var i = this.arcOffset; i <= this.arcOffset + this.arcAngle; i += 0.5) {\n                var tmp = geometry.distanceAngleToPoint(this.arcLineRaidus, i);\n                points.push([tmp.x, tmp.y].join(',') + ',');\n                if (i == 90) {\n                    points.push('L');\n                }\n            }\n\n            this.arcLine = new _konva2.default.Path({\n                data: points.join(''),\n                x: this.cx,\n                y: this.cy,\n                stroke: this.lineColor,\n                strokeWidth: 1,\n                fill: '#ffffff00'\n            });\n\n            this.arcPartLine = new _konva2.default.Path({\n                data: this.arcPartLineAr.join(''),\n                x: this.cx,\n                y: this.cy,\n                stroke: '#00000088',\n                strokeWidth: 1,\n                fill: '#ffffff00'\n            });\n\n            this.arcOutlinePart = new _konva2.default.Path({\n                data: this.arcOutlinePartAr.join(''),\n                x: this.cx,\n                y: this.cy,\n                stroke: this.lineColor,\n                strokeWidth: 1,\n                fill: '#ffffff00'\n            });\n\n            this.layoutLayer.add(this.arcLine);\n            this.layoutLayer.add(this.arcPartLine);\n            this.layoutLayer.add(this.arcOutlinePart);\n        }\n    }, {\n        key: 'drawArc',\n        value: function drawArc() {\n\n            var params = {\n                x: this.cx,\n                y: this.cy,\n                innerRadius: this.arcInRadius,\n                outerRadius: this.arcOutRadius,\n                angle: this.arcAngle\n                //, fill: 'red'\n                , stroke: '#ffffff00',\n                strokeWidth: 0,\n                rotation: this.arcOffset,\n                fillLinearGradientStartPoint: { x: -50, y: -50 },\n                fillLinearGradientEndPoint: { x: 50, y: 50 },\n                fillLinearGradientColorStops: [0, '#ff9000', .5, '#64b185', 1, '#5a78ca']\n            };\n            this.arc = new _konva2.default.Arc(params);\n\n            this.layoutLayer.add(this.arc);\n        }\n    }, {\n        key: 'initDataLayout',\n        value: function initDataLayout() {\n            this.layer = new _konva2.default.Layer();\n            this.layoutLayer = new _konva2.default.Layer();\n\n            this.roundLine = new _konva2.default.Circle({\n                x: this.cx,\n                y: this.cy,\n                radius: this.roundRadius,\n                stroke: this.lineColor,\n                strokeWidth: 2.5,\n                fill: 'rgba( 0, 0, 0, .5 )'\n            });\n\n            this.percentText = new _konva2.default.Text({\n                x: this.cx,\n                y: this.cy,\n                text: this.getAttackText(),\n                fontSize: 18,\n                fontFamily: 'HuXiaoBoKuHei',\n                fill: '#ffffff',\n                fontStyle: 'italic'\n            });\n            this.percentText.x(this.cx - this.percentText.textWidth / 2 + this.textOffsetX);\n            this.percentText.y(this.cy - this.percentText.textHeight / 2 + this.textOffsetY);\n\n            /*\n            this.percentSymbolText = new Konva.Text( {\n                x: this.cx\n                , y: this.cy\n                , text: '%'\n                , fontSize: 17\n                , fontFamily: 'Agency FB'\n                , fill: '#c7d6ff'\n                , fontStyle: 'italic'\n            });\n            this.percentSymbolText.x( this.percentText.attrs.x  + this.percentText.textWidth );\n            this.percentSymbolText.y( this.percentText.attrs.y  + this.percentText.textHeight -  this.percentSymbolText.textHeight - 2 );\n            */\n\n            //console.log( this.percentText );\n\n            var wedge = new _konva2.default.Wedge({\n                x: 0,\n                y: -3,\n                radius: 10,\n                angle: 20,\n                fill: '#ff5a00',\n                stroke: '#ff5a00',\n                strokeWidth: 1,\n                rotation: 90\n            });\n\n            var wedge1 = new _konva2.default.Wedge({\n                x: 0,\n                y: -3,\n                radius: 10,\n                angle: 20,\n                fill: '#973500',\n                stroke: '#973500',\n                strokeWidth: 1,\n                rotation: 65\n            });\n\n            var group = new _konva2.default.Group({\n                x: this.cx,\n                y: this.cy\n            });\n\n            group.add(wedge1);\n            group.add(wedge);\n\n            this.angle = this.arcOffset - 2;\n\n            this.group = group;\n\n            this.layer.add(group);\n            this.layer.add(this.roundLine);\n            this.layer.add(this.percentText);\n            //this.layer.add( this.percentSymbolText );\n\n\n            this.drawCircle();\n            this.drawCircleLine();\n            this.drawArc();\n            this.drawArcLine();\n            this.drawArcText();\n            this.drawText();\n            this.drawTextRect();\n\n            this.initRoundText();\n\n            this.stage.add(this.layer);\n            this.stage.add(this.layoutLayer);\n        }\n    }, {\n        key: 'animation',\n        value: function animation() {\n            var _this8 = this;\n\n            if (this.isDestroy) return;\n            if (this.angle > this.animationAngle) return;\n            this.angle += this.rateStep;\n            if (this.angle >= this.animationAngle) {\n                this.angle = this.animationAngle;\n            };\n\n            var point = geometry.distanceAngleToPoint(this.roundRadius + 6, this.angle);\n            this.group.x(this.cx + point.x);\n            this.group.y(this.cy + point.y);\n            this.group.rotation(this.angle + 90);\n            this.group.rotation(this.angle + 90);\n\n            this.stage.add(this.layer);\n\n            window.requestAnimationFrame(function () {\n                _this8.animation();\n            });\n        }\n    }, {\n        key: 'animationText',\n        value: function animationText() {\n            var _this9 = this;\n\n            if (this.isDestroy) return;\n            if (this.totalNumCount >= this.totalNum) return;\n            this.totalNumCount += this.totalNumStep;\n            if (this.totalNumCount >= this.totalNum) {\n                this.totalNumCount = this.totalNum;\n            };\n\n            this.totalText.text(this.totalNumCount);\n            this.totalText.x(this.cx - this.totalText.textWidth / 2);\n            this.stage.add(this.layoutLayer);\n\n            window.requestAnimationFrame(function () {\n                _this9.animationText();\n            });\n        }\n    }, {\n        key: 'calcDataPosition',\n        value: function calcDataPosition() {}\n    }, {\n        key: 'animationLine',\n        value: function animationLine() {}\n    }, {\n        key: 'addIcon',\n        value: function addIcon(path, layer) {}\n    }, {\n        key: 'addText',\n        value: function addText(path, layer) {}\n    }, {\n        key: 'calcLayoutPosition',\n        value: function calcLayoutPosition() {}\n    }, {\n        key: 'drawCircle',\n        value: function drawCircle() {\n            this.circleRadius = Math.ceil(this.circlePercent * this.max / 2);\n\n            this.circle = new _konva2.default.Circle({\n                x: this.cx,\n                y: this.cy,\n                radius: this.circleRadius,\n                stroke: this.lineColor,\n                strokeWidth: 1,\n                fill: '#ffffff00'\n            });\n            this.layoutLayer.add(this.circle);\n        }\n    }, {\n        key: 'drawCircleLine',\n        value: function drawCircleLine() {\n            this.circleLineRadius = Math.ceil(this.circleLinePercent * this.max / 2);\n\n            var points = [];\n            points.push('M');\n            for (var i = 90; i <= 180; i++) {\n                var tmp = geometry.distanceAngleToPoint(this.circleLineRadius, i + 90);\n                points.push([tmp.x, tmp.y].join(',') + ',');\n                if (i == 90) {\n                    points.push('L');\n                }\n            }\n            points.push('M');\n            for (var _i = 270; _i <= 360; _i++) {\n                var _tmp = geometry.distanceAngleToPoint(this.circleLineRadius, _i + 90);\n                points.push([_tmp.x, _tmp.y].join(',') + ',');\n                if (_i == 270) {\n                    points.push('L');\n                }\n            }\n\n            this.circleLine = new _konva2.default.Path({\n                data: points.join(''),\n                x: this.cx,\n                y: this.cy,\n                stroke: this.lineColor,\n                strokeWidth: 1.5,\n                fill: '#ffffff00'\n            });\n\n            this.layoutLayer.add(this.circleLine);\n        }\n    }, {\n        key: 'reset',\n        value: function reset() {}\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            _get(Gauge.prototype.__proto__ || Object.getPrototypeOf(Gauge.prototype), 'destroy', this).call(this);\n            this.textRoundAngle.map(function (val) {\n                if (val.ins) val.ins.destroy();\n            });\n        }\n    }]);\n\n    return Gauge;\n}(_vischartbase2.default);\n\nexports.default = Gauge;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _vischartbase = require('../common/vischartbase.js');\n\nvar _vischartbase2 = _interopRequireDefault(_vischartbase);\n\nvar _geometry = require('../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _utils = require('../common/utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar IconRound = function (_VisChartBase) {\n    _inherits(IconRound, _VisChartBase);\n\n    function IconRound(box, width, height) {\n        _classCallCheck(this, IconRound);\n\n        var _this = _possibleConstructorReturn(this, (IconRound.__proto__ || Object.getPrototypeOf(IconRound)).call(this, box, width, height));\n\n        _this.name = 'IconRound ' + Date.now();\n\n        _this.outRadius = 6;\n        _this.inRadius = 2;\n\n        _this.color = '#ffffff';\n\n        _this.max = 1.1;\n        _this.min = 0.8;\n\n        _this.step = .006;\n        _this.cur = 1;\n\n        _this.isplus = 1;\n\n        _this.init();\n        return _this;\n    }\n\n    _createClass(IconRound, [{\n        key: 'init',\n        value: function init() {\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(point) {\n            this.point = point;\n\n            this.group = new _konva2.default.Group({\n                x: this.point.x + this.cx,\n                y: this.point.y + this.cy,\n                width: this.outRadius * 2,\n                height: this.outRadius * 2\n            });\n\n            this.circle = new _konva2.default.Circle({\n                radius: this.inRadius,\n                fill: this.color,\n                stroke: this.color,\n                x: 0,\n                y: 0\n            });\n\n            this.outcircle = new _konva2.default.Circle({\n                radius: this.outRadius,\n                fill: '#ffffff00',\n                stroke: this.color,\n                strokeWidth: 1,\n                x: 0,\n                y: 0\n            });\n\n            this.group.add(this.circle);\n            this.group.add(this.outcircle);\n\n            this.group.scale({ x: this.cur, y: this.cur });\n\n            this.layer.add(this.group);\n\n            //window.requestAnimationFrame( ()=>{ this.animation() } );\n        }\n    }, {\n        key: 'reset',\n        value: function reset() {}\n    }, {\n        key: 'animation',\n        value: function animation() {\n            var _this2 = this;\n\n            if (this.plus) {\n                this.cur = this.cur + this.step;\n\n                if (this.cur > this.max) {\n                    this.cur = this.max;\n                    this.plus = 0;\n                }\n            } else {\n                this.cur = this.cur - this.step;\n                if (this.cur < this.min) {\n                    this.cur = this.min;\n                    this.plus = 1;\n                }\n            }\n\n            this.group.scale({ x: this.cur, y: this.cur });\n\n            this.stage.add(this.layer);\n\n            window.requestAnimationFrame(function () {\n                _this2.animation();\n            });\n        }\n    }, {\n        key: 'initDataLayout',\n        value: function initDataLayout() {}\n    }, {\n        key: 'calcDataPosition',\n        value: function calcDataPosition() {}\n    }, {\n        key: 'animationLine',\n        value: function animationLine() {}\n    }, {\n        key: 'calcLayoutPosition',\n        value: function calcLayoutPosition() {}\n    }]);\n\n    return IconRound;\n}(_vischartbase2.default);\n\nexports.default = IconRound;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _vischartbase = require('../common/vischartbase.js');\n\nvar _vischartbase2 = _interopRequireDefault(_vischartbase);\n\nvar _geometry = require('../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _utils = require('../common/utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar RoundStateText = function (_VisChartBase) {\n    _inherits(RoundStateText, _VisChartBase);\n\n    function RoundStateText(box, width, height) {\n        _classCallCheck(this, RoundStateText);\n\n        var _this = _possibleConstructorReturn(this, (RoundStateText.__proto__ || Object.getPrototypeOf(RoundStateText)).call(this, width, height));\n\n        _this.name = 'RoundStateText ' + Date.now();\n\n        _this.radius = 30;\n\n        _this.textOffsetX = -2;\n        _this.textOffsetY = -1;\n\n        _this.circleLineRotation = 0;\n        _this.circleLineRotationStep = 4;\n\n        _this.curColor = '#deaf5c';\n        return _this;\n    }\n\n    _createClass(RoundStateText, [{\n        key: 'animationCircleLine',\n        value: function animationCircleLine() {\n            var _this2 = this;\n\n            if (this.isDestroy) return;\n            if (!this.circleLine) return;\n\n            this.circleLineRotation += this.circleLineRotationStep;\n\n            this.circleLine.rotation(this.circleLineRotation);\n            this.stage.add(this.layer);\n\n            window.requestAnimationFrame(function () {\n                _this2.animationCircleLine();\n            });\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            //console.log( 'RoundStateText init', this );\n            this.circleRaidus = this.radius - 5;\n\n            //this.lineColor = this.curColor;\n\n            this.initDataLayout();\n\n            this.animationCircleLine();\n\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(rate) {\n            this.rate = rate;\n\n            var color = this.lineColor;\n\n            if (rate >= this.min && rate < this.max) {\n                color = this.curColor;\n            }\n\n            this.text.fill(color);\n            this.circle.stroke(color);\n            this.circleLine.stroke(color);\n\n            return this;\n        }\n    }, {\n        key: 'initDataLayout',\n        value: function initDataLayout() {\n            this.drawText();\n            this.drawCircle();\n            this.drawCircleLine();\n        }\n    }, {\n        key: 'drawText',\n        value: function drawText() {\n            this.text = new _konva2.default.Text({\n                x: this.point.x,\n                y: this.point.y,\n                text: this.text,\n                fontSize: 32,\n                fontFamily: 'HuXiaoBoKuHei',\n                fill: this.lineColor,\n                fontStyle: 'italic'\n            });\n\n            this.text.x(this.point.x - this.text.textWidth / 2 + this.textOffsetX);\n            this.text.y(this.point.y - this.text.textHeight / 2 + this.textOffsetY);\n\n            this.layer.add(this.text);\n        }\n    }, {\n        key: 'drawCircle',\n        value: function drawCircle() {\n            this.circle = new _konva2.default.Circle({\n                x: this.point.x,\n                y: this.point.y,\n                radius: this.circleRaidus,\n                stroke: this.lineColor,\n                strokeWidth: 2,\n                fill: '#ffffff00'\n            });\n\n            this.layer.add(this.circle);\n        }\n    }, {\n        key: 'drawCircleLine',\n        value: function drawCircleLine() {\n            this.circleLineRadius = this.radius - 1;\n\n            var points = [];\n            points.push('M');\n            for (var i = 90; i <= 180; i++) {\n                var tmp = geometry.distanceAngleToPoint(this.circleLineRadius, i + 90);\n                points.push([tmp.x, tmp.y].join(',') + ',');\n                if (i == 90) {\n                    points.push('L');\n                }\n            }\n            points.push('M');\n            for (var _i = 270; _i <= 360; _i++) {\n                var _tmp = geometry.distanceAngleToPoint(this.circleLineRadius, _i + 90);\n                points.push([_tmp.x, _tmp.y].join(',') + ',');\n                if (_i == 270) {\n                    points.push('L');\n                }\n            }\n\n            this.circleLine = new _konva2.default.Path({\n                data: points.join(''),\n                x: this.point.x,\n                y: this.point.y,\n                stroke: this.lineColor,\n                strokeWidth: 2,\n                fill: '#ffffff00'\n            });\n\n            this.layer.add(this.circleLine);\n        }\n    }, {\n        key: 'reset',\n        value: function reset() {}\n    }, {\n        key: 'calcDataPosition',\n        value: function calcDataPosition() {}\n    }, {\n        key: 'animationLine',\n        value: function animationLine() {}\n    }, {\n        key: 'calcLayoutPosition',\n        value: function calcLayoutPosition() {}\n    }]);\n\n    return RoundStateText;\n}(_vischartbase2.default);\n\nexports.default = RoundStateText;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar CHART_TYPE = exports.CHART_TYPE = {\n    dount: 'dount',\n    gauge: 'gauge'\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _vischartbase = require('../common/vischartbase.js');\n\nvar _vischartbase2 = _interopRequireDefault(_vischartbase);\n\nvar _geometry = require('../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _utils = require('../common/utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Legend = function (_VisChartBase) {\n    _inherits(Legend, _VisChartBase);\n\n    function Legend(box, width, height) {\n        _classCallCheck(this, Legend);\n\n        var _this = _possibleConstructorReturn(this, (Legend.__proto__ || Object.getPrototypeOf(Legend)).call(this, box, width, height));\n\n        _this.name = 'Legend ' + Date.now();\n\n        _this.textColor = '#24a3ea';\n\n        _this.iconSpace = 5;\n\n        _this.text = [];\n        _this.icon = [];\n        _this.group = [];\n\n        return _this;\n    }\n\n    _createClass(Legend, [{\n        key: 'setStage',\n        value: function setStage(stage) {\n            _get(Legend.prototype.__proto__ || Object.getPrototypeOf(Legend.prototype), 'setStage', this).call(this, stage);\n\n            this.layer = new _konva2.default.Layer({});\n\n            stage.add(this.layer);\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            var _this2 = this;\n\n            this.data.data.map(function (item, key) {\n                var x = 0,\n                    y = 0,\n                    count = key + 1,\n                    curRow = Math.floor(key / _this2.column());\n\n                switch (_this2.direction()) {\n                    case 'bottom':\n                        {\n                            x = _this2.space() + (_this2.space() + _this2.columnWidth()) * (key % _this2.column());\n                            y = _this2.height - (_this2.row() - curRow) * (_this2.spaceY() + _this2.rowHeight());\n                            console.log(x, y, key, _this2.direction(), curRow);\n                            break;\n                        }\n                }\n\n                var label = item.name || key + '';\n\n                var color = _this2.colors[key % _this2.colors.length];\n\n                if (_jsonUtilsx2.default.jsonInData(item, 'textStyle.color')) {\n                    //path.fill( val.itemStyle.color );\n                    color = item.textStyle.color;\n                }\n\n                var rect = new _konva2.default.Rect({\n                    x: x,\n                    y: y,\n                    width: _this2.itemWidth(),\n                    height: _this2.itemHeight(),\n                    fill: color\n                });\n\n                var bg = new _konva2.default.Rect({\n                    x: x,\n                    y: y,\n                    width: _this2.columnWidth(),\n                    height: _this2.rowHeight(),\n                    fill: '#ffffff00'\n                });\n\n                var text = new _konva2.default.Text({\n                    text: label,\n                    x: x + _this2.iconSpace + rect.width(),\n                    y: y,\n                    fill: _this2.textColor,\n                    fontFamily: 'MicrosoftYaHei',\n                    fontSize: 12\n                });\n\n                var group = new _konva2.default.Group();\n                group.add(bg);\n                group.add(rect);\n                group.add(text);\n\n                var data = {\n                    ele: group,\n                    item: item,\n                    text: text,\n                    disabled: false\n                };\n\n                _this2.group.push(data);\n\n                group.on('click', function () {\n                    //console.log( 'click', key, data, group, item );\n                    data.disabled = !data.disabled;\n\n                    if (data.disabled) {\n                        group.opacity(.6);\n                    } else {\n                        group.opacity(1);\n                    }\n\n                    _this2.stage.add(_this2.layer);\n\n                    _this2.onChange && _this2.onChange(_this2.group);\n                });\n\n                _this2.layer.add(group);\n            });\n            this.stage.add(this.layer);\n\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(data) {\n            this.data = data || {};\n            if (!(this.data && this.data.data && this.data.data.length)) return;\n\n            console.log(this.column(), this.row(), this.direction(), this.outerHeight(), 'columnWidth:', this.columnWidth());\n            console.log(this.width, this.width - (this.column() - 1 + 2) * this.space());\n\n            this.init();\n        }\n    }, {\n        key: 'outerHeight',\n        value: function outerHeight() {\n            return this.rowHeight() * this.row() + this.space();\n        }\n    }, {\n        key: 'total',\n        value: function total() {\n            var r = 0;\n\n            return r;\n        }\n    }, {\n        key: 'itemWidth',\n        value: function itemWidth() {\n            return this.data.itemWidth || 5;\n        }\n    }, {\n        key: 'itemHeight',\n        value: function itemHeight() {\n            return this.data.itemHeight || 5;\n        }\n    }, {\n        key: 'columnWidth',\n        value: function columnWidth() {\n            return (this.width - (this.column() - 1 + 2) * this.space()) / this.column();\n        }\n    }, {\n        key: 'column',\n        value: function column() {\n            return this.data.column || 1;\n        }\n    }, {\n        key: 'space',\n        value: function space() {\n            return this.data.space || 15;\n        }\n    }, {\n        key: 'spaceY',\n        value: function spaceY() {\n            return this.data.space || 0;\n        }\n    }, {\n        key: 'rowHeight',\n        value: function rowHeight() {\n            return this.data.rowHeight || 22;\n        }\n    }, {\n        key: 'row',\n        value: function row() {\n            return Math.ceil(this.data.data.length / this.column());\n        }\n    }, {\n        key: 'direction',\n        value: function direction() {\n            var r = 'top';\n\n            if (this.data.bottom) {\n                r = 'bottom';\n            } else if (this.data.left) {\n                r = 'left';\n            } else if (this.data.right) {\n                r = 'right';\n            }\n\n            return r;\n        }\n    }]);\n\n    return Legend;\n}(_vischartbase2.default);\n\nexports.default = Legend;","\n\nimport VisChart from 'vischart';\n\nimport fontfaceobserver from 'fontfaceobserver';\n\n\n\nlet font = new fontfaceobserver( 'HuXiaoBoKuHei' );\nfont.load().then(function () {\n\n    //let data = require( './data/dount.json' );\n    let data = require( './data/dount-tight1.json' );\n    let dmins = new VisChart( document.querySelector('#twoBox'), 410, 330 );\n        /*\n        dmins.addImage( './img/dount-in.png', 120, 120, 0, 1 );\n        dmins.addImage( './img/dount-big.png', 250, 248, 0, 1 );\n        */\n        dmins.update( data ); \n\n        setTimeout( ()=>{\n            //dmins.update( data ); \n        }, 5000 );\n\n}, function () {\n  console.log('Font is not available');\n});\n\n\n\n"],"sourceRoot":""}
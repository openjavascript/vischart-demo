{"version":3,"sources":["webpack:///../vischart/dist/common/vischartbase.js","webpack:///../vischart/dist/geometry/geometry.js","webpack:///../vischart/dist/common/utils.js","webpack:///../vischart/dist/common/pointat.js","webpack:///../vischart/dist/icon/round.js","webpack:///../vischart/dist/index.js","webpack:///../vischart/dist/dount/index.js","webpack:///../vischart/dist/gauge/index.js","webpack:///../vischart/dist/common/constant.js","webpack:///./src/assets/js/gauge.js"],"names":["Object","defineProperty","exports","value","obj","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_konva","__webpack_require__","__esModule","VisChartBase","box","width","height","instance","TypeError","_classCallCheck","this","customWidth","customHeight","offsetWidth","offsetHeight","max","Math","cx","cy","cpoint","x","y","totalAngle","angleOffset","countAngle","colors","data","options","layer","stage","default","pointRectangleIntersection","p","r","x2","y2","pointDistance","_p1","_p2","_dx","_dy","sqrt","distanceAngleToPoint","_distance","_angle","_radian","PI","cos","sin","radians","degree","_radians","intersectRect","r1","r2","fixEndAngle","startAngle","endAngle","pointPlus","p1","p2","parseFinance","_i","_dot","parseFloat","toFixed","_konva2","_interopRequireDefault","_jsonUtilsx2","geometry","newObj","hasOwnProperty","call","_interopRequireWildcard","PointAt","point","offsetX","offsetY","init","Layer","rects","item","params","clone","fill","rect","Rect","add","leftTop","rightTop","leftBottom","rightBottom","isLeftTop","isRightTop","isRightBottom","isLeftBottom","DIRE_NAME","topCenter","rightMid","bottomCenter","leftMid","DIRE_NUM","1","2","4","8","3","6","9","12","_vischartbase2","IconRound","_VisChartBase","_this","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","name","Date","now","outRadius","inRadius","color","min","step","cur","isplus","subClass","superClass","create","constructor","setPrototypeOf","_inherits","group","Group","circle","Circle","radius","stroke","outcircle","strokeWidth","scale","_this2","plus","window","requestAnimationFrame","animation","_index2","_index4","constant","VisChart","ins","images","rateWidth","rateHeight","Stage","container","style","loadImage","jsonInData","removeChildren","series","map","val","type","CHART_TYPE","dount","setOptions","setStage","update","gauge","push","imgUrl","arguments","undefined","rateW","rateH","url","_this3","iconLayer","remove","img","Image","onload","icon","image","src","_pointat2","utils","_round2","Dount","outPercent","inPercent","circleLinePercent","circlePercent","animationStep","angleStep","textHeight","lineOffset","path","textOffset","lineColor","calcLayoutPosition","allData","calcDataPosition","initDataLayout","pathData","isDone","tmppoint","reset","tmpAngle","itemData","join","_i2","setData","setZIndex","animationLine","circleRadius","ceil","layoutLayer","circleLineRadius","points","tmp","_i3","_tmp","circleLine","Path","line","drawCircle","drawCircleLine","itemStyle","on","evt","Line","_this4","total","_percent","_totalPercent","percent","parseInt","midAngle","lineStart","lineEnd","lineLength","textPoint","pointDirection","_this5","lineLengthCount","lineLengthStep","addIcon","addText","text","Text","fontFamily","fontSize","textX","textY","auto","textWidth","Gauge","roundRadiusPercent","arcLinePercent","arcOutPercent","arcInPercent","arcLabelLength","arcTextLength","arcAngle","part","arcTotal","arcOffset","partLabel","partAngle","partNum","textOffsetX","textOffsetY","textLineLength","textRectWidthPercent","textRectHeightPercent","roundRadius","arcInRadius","arcOutRadius","arcLineRaidus","arcPartLineAr","arcOutlinePartAr","textAr","angle","start","end","totalText","fontStyle","textRect","opacity","textLinePath","rotation","arcLine","arcPartLine","arcOutlinePart","innerRadius","outerRadius","fillLinearGradientStartPoint","fillLinearGradientEndPoint","fillLinearGradientColorStops","arc","Arc","roundLine","percentText","wedge","Wedge","wedge1","drawArc","drawArcLine","drawArcText","drawTextRect","drawText","a","load","then","dmins","vischart__WEBPACK_IMPORTED_MODULE_0___default","document","querySelector","addImage","setTimeout"],"mappings":"wFAEAA,OAAAC,eAAAC,EAAA,cACAC,MAAA,OAGA,IAMAC,EANAC,EAAA,WAAgC,SAAAC,EAAAC,EAAAC,GAA2C,QAAAC,EAAA,EAAgBA,EAAAD,EAAAE,OAAkBD,IAAA,CAAO,IAAAE,EAAAH,EAAAC,GAA2BE,EAAAC,WAAAD,EAAAC,YAAA,MAAwDD,EAAAE,aAAA,KAAgC,UAAAF,MAAAG,SAAA,MAAuDd,OAAAC,eAAAM,EAAAI,EAAAI,IAAAJ,IAA+D,gBAAAK,EAAAC,EAAAC,GAA2L,OAAlID,GAAAX,EAAAU,EAAAG,UAAAF,GAAqEC,GAAAZ,EAAAU,EAAAE,GAA6DF,GAAxhB,GAEAI,EAAaC,EAAQ,IAIrBjB,EAFAgB,IAEsChB,EAAAkB,WAItC,IAAAC,EAAA,WACA,SAAAA,EAAAC,EAAAC,EAAAC,IAHA,SAAAC,EAAAX,GAAiD,KAAAW,aAAAX,GAA0C,UAAAY,UAAA,qCAI3FC,CAAAC,KAAAP,GAEAO,KAAAN,MAEAM,KAAAC,YAAAN,EACAK,KAAAE,aAAAN,EAEAI,KAAAL,SAAAD,EAAAS,YACAH,KAAAJ,UAAAF,EAAAU,aAEAJ,KAAAK,IAAAC,KAAAD,IAAAL,KAAAL,MAAAK,KAAAJ,QAEAI,KAAAO,GAAAP,KAAAK,IAAA,EACAL,KAAAQ,GAAAR,KAAAK,IAAA,EACAL,KAAAS,QAAuBC,EAAAV,KAAAO,GAAAI,EAAAX,KAAAQ,IAEvBR,KAAAY,WAAA,IACAZ,KAAAa,YAAA,EACAb,KAAAc,WAAA,EAEAd,KAAAe,QAAA,6DAqEA,OAlEAxC,EAAAkB,IACAR,IAAA,SACAZ,MAAA,SAAA2C,GAGA,OAFAhB,KAAAgB,OAEAhB,QAGAf,IAAA,OACAZ,MAAA,WACA,OAAA2B,QAGAf,IAAA,aACAZ,MAAA,SAAA4C,GAEA,QAAAhC,KAAAgC,EACAjB,KAAAf,GAAAgC,EAAAhC,GAGAe,KAAAiB,aAGAhC,IAAA,qBACAZ,MAAA,WACA,OAAA2B,QAGAf,IAAA,mBACAZ,MAAA,WACA,OAAA2B,QAGAf,IAAA,iBACAZ,MAAA,WACA,OAAA2B,QAGAf,IAAA,OACAZ,MAAA,WACA,OAAA2B,QAGAf,IAAA,QACAZ,MAAA,eAEAY,IAAA,YACAZ,MAAA,eAEAY,IAAA,QACAZ,MAAA,WACA,OAAA2B,KAAAkB,SAGAjC,IAAA,WACAZ,MAAA,SAAA6C,GAEA,OADAlB,KAAAkB,QACAlB,QAGAf,IAAA,WACAZ,MAAA,SAAA8C,GACAnB,KAAAmB,YAIA1B,EA3FA,GA8FArB,EAAAgD,QAAA3B,gCC5GAvB,OAAAC,eAAAC,EAAA,cACAC,MAAA,OAEAD,EAAAiD,2BAiBA,SAAAC,EAAAC,GACA,OAAAD,EAAAZ,GAAAa,EAAAb,GAAAY,EAAAZ,GAAAa,EAAAC,IAAAF,EAAAX,GAAAY,EAAAZ,GAAAW,EAAAX,GAAAY,EAAAE,IAjBArD,EAAAsD,cA2BA,SAAAC,EAAAC,GACA,IAAAC,EAAAD,EAAAlB,EAAAiB,EAAAjB,EACAoB,EAAAF,EAAAjB,EAAAgB,EAAAhB,EAGA,OAFAL,KAAAyB,KAAAF,IAAAC,MA7BA1D,EAAA4D,qBAyCA,SAAAC,EAAAC,GACA,IAAAC,EAAAD,EAAA5B,KAAA8B,GAAA,IACA,OACA1B,EAAAJ,KAAA+B,IAAAF,GAAAF,EACAtB,EAAAL,KAAAgC,IAAAH,GAAAF,IA5CA7D,EAAAmE,QAsDA,SAAAL,GACA,OAAAA,EAAA5B,KAAA8B,GAAA,KAtDAhE,EAAAoE,OA+DA,SAAAC,GACA,OAAAA,EAAAnC,KAAA8B,GAAA,KA/DAhE,EAAAsE,cAwEA,SAAAC,EAAAC,GACA,QAAAA,EAAAlC,EAAAiC,EAAAjC,EAAAiC,EAAAhD,OAAAiD,EAAAlC,EAAAkC,EAAAjD,MAAAgD,EAAAjC,GAAAkC,EAAAjC,EAAAgC,EAAAhC,EAAAgC,EAAA/C,QAAAgD,EAAAjC,EAAAiC,EAAAhD,OAAA+C,EAAAhC,IAxEAvC,EAAAyE,YA2EA,SAAAC,EAAAC,GACAA,EAAAD,IACAC,GAAA,KAEA,OAAAA,GA9EA3E,EAAA4E,UAiFA,SAAAC,EAAAC,GACA,OACAxC,EAAAuC,EAAAvC,EAAAwC,EAAAxC,EACAC,EAAAsC,EAAAtC,EAAAuC,EAAAvC,kCC9FAzC,OAAAC,eAAAC,EAAA,cACAC,MAAA,OAEAD,EAAA+E,aAYA,SAAAC,EAAAC,GAIA,OAHAD,EAAAE,WAAAF,IAAA,OACA,IAAAC,MAAA,GACAD,MAAAE,WAAAF,EAAAG,QAAAF,KACAD,iCCnBAlF,OAAAC,eAAAC,EAAA,cACAC,MAAA,OAGA,IAAAE,EAAA,WAAgC,SAAAC,EAAAC,EAAAC,GAA2C,QAAAC,EAAA,EAAgBA,EAAAD,EAAAE,OAAkBD,IAAA,CAAO,IAAAE,EAAAH,EAAAC,GAA2BE,EAAAC,WAAAD,EAAAC,YAAA,MAAwDD,EAAAE,aAAA,KAAgC,UAAAF,MAAAG,SAAA,MAAuDd,OAAAC,eAAAM,EAAAI,EAAAI,IAAAJ,IAA+D,gBAAAK,EAAAC,EAAAC,GAA2L,OAAlID,GAAAX,EAAAU,EAAAG,UAAAF,GAAqEC,GAAAZ,EAAAU,EAAAE,GAA6DF,GAAxhB,GAIAsE,EAAAC,EAFalE,EAAQ,IAMrBmE,EAAAD,EAFkBlE,EAAQ,IAM1BoE,EAEA,SAAArF,GAAuC,GAAAA,KAAAkB,WAA6B,OAAAlB,EAAqB,IAAAsF,KAAiB,SAAAtF,EAAmB,QAAAW,KAAAX,EAAuBJ,OAAAmB,UAAAwE,eAAAC,KAAAxF,EAAAW,KAAA2E,EAAA3E,GAAAX,EAAAW,IAAsG,OAAtB2E,EAAAxC,QAAA9C,EAAsBsF,EAF1PG,CAFgBxE,EAAQ,IAMxB,SAAAkE,EAAAnF,GAAsC,OAAAA,KAAAkB,WAAAlB,GAAuC8C,QAAA9C,GAI7E,IAAA0F,EAAA,WACA,SAAAA,EAAArE,EAAAC,EAAAqE,IAHA,SAAApE,EAAAX,GAAiD,KAAAW,aAAAX,GAA0C,UAAAY,UAAA,qCAI3FC,CAAAC,KAAAgE,GAEAhE,KAAAL,QACAK,KAAAJ,SACAI,KAAAiE,QAEAjE,KAAAO,GAAAP,KAAAL,MAAA,EACAK,KAAAQ,GAAAR,KAAAJ,OAAA,EAEAI,KAAAkE,QAAA,GACAlE,KAAAmE,QAAA,GAEAnE,KAAAe,QAAA,6DAEAf,KAAAoE,OAqGA,OAlGA7F,EAAAyF,IACA/E,IAAA,WACAZ,MAAA,SAAA8C,GACAnB,KAAAmB,QAEAnB,KAAAkB,MAAA,IAAAsC,EAAApC,QAAAiD,MAEA,IAAA1F,EAAA,EAEA,QAAAM,KAAAe,KAAAsE,MAAA,CAEA,IAAAC,EAAAvE,KAAAsE,MAAArF,GACAuF,EAAAd,EAAAtC,QAAAqD,MAAAF,GACAC,EAAAE,KAAA1E,KAAAe,OAAApC,EAAAqB,KAAAe,OAAAnC,QAEA,IAAA+F,EAAA,IAAAnB,EAAApC,QAAAwD,KAAAJ,GAEAxE,KAAAkB,MAAA2D,IAAAF,GAEAhG,IAGAqB,KAAAmB,MAAA0D,IAAA7E,KAAAkB,UAGAjC,IAAA,OACAZ,MAAA,WACA2B,KAAA8E,SACApE,EAAA,EACAC,EAAA,EACAhB,MAAAK,KAAAO,GAAAP,KAAAkE,QACAtE,OAAAI,KAAAQ,GAAAR,KAAAmE,SAEAnE,KAAA8E,QAAAtD,GAAAxB,KAAA8E,QAAApE,EAAAV,KAAA8E,QAAAnF,MACAK,KAAA8E,QAAArD,GAAAzB,KAAA8E,QAAAnE,EAAAX,KAAA8E,QAAAlF,OAEAI,KAAA+E,UACArE,EAAAV,KAAAO,GAAAP,KAAAkE,QACAvD,EAAA,EACAhB,MAAAK,KAAAO,GAAAP,KAAAkE,QACAtE,OAAAI,KAAAQ,GAAAR,KAAAmE,SAEAnE,KAAA+E,SAAAvD,GAAAxB,KAAA+E,SAAArE,EAAAV,KAAA+E,SAAApF,MACAK,KAAA+E,SAAAtD,GAAAzB,KAAA+E,SAAApE,EAAAX,KAAA+E,SAAAnF,OAEAI,KAAAgF,YACAtE,EAAA,EACAC,EAAAX,KAAAQ,GAAAR,KAAAmE,QACAxE,MAAAK,KAAAO,GAAAP,KAAAkE,QACAtE,OAAAI,KAAAQ,GAAAR,KAAAmE,SAEAnE,KAAAgF,WAAAxD,GAAAxB,KAAAgF,WAAAtE,EAAAV,KAAAgF,WAAArF,MACAK,KAAAgF,WAAAvD,GAAAzB,KAAAgF,WAAArE,EAAAX,KAAAgF,WAAApF,OAEAI,KAAAiF,aACAvE,EAAAV,KAAAO,GAAAP,KAAAkE,QACAvD,EAAAX,KAAAQ,GAAAR,KAAAmE,QACAxE,MAAAK,KAAAO,GAAAP,KAAAkE,QACAtE,OAAAI,KAAAQ,GAAAR,KAAAmE,SAEAnE,KAAAiF,YAAAzD,GAAAxB,KAAAiF,YAAAvE,EAAAV,KAAAiF,YAAAtF,MACAK,KAAAiF,YAAAxD,GAAAzB,KAAAiF,YAAAtE,EAAAX,KAAAiF,YAAArF,OAEAI,KAAAsE,OACAQ,QAAA9E,KAAA8E,QACAC,SAAA/E,KAAA+E,SACAC,WAAAhF,KAAAgF,WACAC,YAAAjF,KAAAiF,gBAIAhG,IAAA,YACAZ,MAAA,WACA,OAAAsF,EAAAtC,2BAAArB,KAAAiE,MAAAjE,KAAA8E,SAAA,OAGA7F,IAAA,aACAZ,MAAA,WACA,OAAAsF,EAAAtC,2BAAArB,KAAAiE,MAAAjE,KAAA+E,UAAA,OAGA9F,IAAA,gBACAZ,MAAA,WACA,OAAAsF,EAAAtC,2BAAArB,KAAAiE,MAAAjE,KAAAiF,aAAA,OAGAhG,IAAA,eACAZ,MAAA,WACA,OAAAsF,EAAAtC,2BAAArB,KAAAiE,MAAAjE,KAAAgF,YAAA,OAGA/F,IAAA,OACAZ,MAAA,WAEA,OADA2B,KAAAkF,YAAAlF,KAAAmF,aAAAnF,KAAAoF,gBAAApF,KAAAqF,mBAKArB,EArHA,GAwHA5F,EAAAgD,QAAA4C,EAGAA,EAAAsB,WACAR,QAAA,EACAC,SAAA,EACAE,YAAA,EACAD,WAAA,EAEAO,UAAA,EACAC,SAAA,EACAC,aAAA,GACAC,QAAA,GAGA1B,EAAA2B,UACAC,EAAA,UACAC,EAAA,WACAC,EAAA,cACAC,EAAA,aAEAC,EAAA,YACAC,EAAA,WACAC,EAAA,UACAC,GAAA,8CCxKAjI,OAAAC,eAAAC,EAAA,cACAC,MAAA,OAGA,IAAAE,EAAA,WAAgC,SAAAC,EAAAC,EAAAC,GAA2C,QAAAC,EAAA,EAAgBA,EAAAD,EAAAE,OAAkBD,IAAA,CAAO,IAAAE,EAAAH,EAAAC,GAA2BE,EAAAC,WAAAD,EAAAC,YAAA,MAAwDD,EAAAE,aAAA,KAAgC,UAAAF,MAAAG,SAAA,MAAuDd,OAAAC,eAAAM,EAAAI,EAAAI,IAAAJ,IAA+D,gBAAAK,EAAAC,EAAAC,GAA2L,OAAlID,GAAAX,EAAAU,EAAAG,UAAAF,GAAqEC,GAAAZ,EAAAU,EAAAE,GAA6DF,GAAxhB,GAIAkH,EAAA3C,EAFoBlE,EAAQ,IAU5BiE,GAJAO,EAFgBxE,EAAQ,IAMxBkE,EAFalE,EAAQ,KAMrBkE,EAFkBlE,EAAQ,IAM1BwE,EAFaxE,EAAQ,IAIrB,SAAAwE,EAAAzF,GAAuC,GAAAA,KAAAkB,WAA6B,OAAAlB,EAAqB,IAAAsF,KAAiB,SAAAtF,EAAmB,QAAAW,KAAAX,EAAuBJ,OAAAmB,UAAAwE,eAAAC,KAAAxF,EAAAW,KAAA2E,EAAA3E,GAAAX,EAAAW,IAAsG,OAAtB2E,EAAAxC,QAAA9C,EAAsBsF,EAE1P,SAAAH,EAAAnF,GAAsC,OAAAA,KAAAkB,WAAAlB,GAAuC8C,QAAA9C,GAQ7E,IAAA+H,EAAA,SAAAC,GAGA,SAAAD,EAAA3G,EAAAC,EAAAC,IATA,SAAAC,EAAAX,GAAiD,KAAAW,aAAAX,GAA0C,UAAAY,UAAA,qCAU3FC,CAAAC,KAAAqG,GAEA,IAAAE,EAVA,SAAAC,EAAA1C,GAAiD,IAAA0C,EAAa,UAAAC,eAAA,6DAAyF,OAAA3C,GAAA,iBAAAA,GAAA,mBAAAA,EAAA0C,EAAA1C,EAUvJ4C,CAAA1G,MAAAqG,EAAAM,WAAAzI,OAAA0I,eAAAP,IAAAvC,KAAA9D,KAAAN,EAAAC,EAAAC,IAkBA,OAhBA2G,EAAAM,KAAA,aAAAC,KAAAC,MAEAR,EAAAS,UAAA,EACAT,EAAAU,SAAA,EAEAV,EAAAW,MAAA,UAEAX,EAAAlG,IAAA,IACAkG,EAAAY,IAAA,GAEAZ,EAAAa,KAAA,KACAb,EAAAc,IAAA,EAEAd,EAAAe,OAAA,EAEAf,EAAAnC,OACAmC,EA2FA,OArHA,SAAAgB,EAAAC,GAA0C,sBAAAA,GAAA,OAAAA,EAA+D,UAAA1H,UAAA,kEAAA0H,GAAuGD,EAAAlI,UAAAnB,OAAAuJ,OAAAD,KAAAnI,WAAyEqI,aAAerJ,MAAAkJ,EAAAzI,WAAA,MAAAE,SAAA,KAAAD,aAAA,QAA6EyI,IAAAtJ,OAAAyJ,eAAAzJ,OAAAyJ,eAAAJ,EAAAC,GAAAD,EAAAZ,UAAAa,GAGrXI,CAAAvB,EAmHCD,EAAAhF,SAzFD7C,EAAA8H,IACApH,IAAA,OACAZ,MAAA,WACA,OAAA2B,QAGAf,IAAA,SACAZ,MAAA,SAAA4F,GACAjE,KAAAiE,QAEAjE,KAAA6H,MAAA,IAAArE,EAAApC,QAAA0G,OACApH,EAAAV,KAAAiE,MAAAvD,EAAAV,KAAAO,GACAI,EAAAX,KAAAiE,MAAAtD,EAAAX,KAAAQ,GACAb,MAAA,EAAAK,KAAAgH,UACApH,OAAA,EAAAI,KAAAgH,YAGAhH,KAAA+H,OAAA,IAAAvE,EAAApC,QAAA4G,QACAC,OAAAjI,KAAAiH,SACAvC,KAAA1E,KAAAkH,MACAgB,OAAAlI,KAAAkH,MACAxG,EAAA,EACAC,EAAA,IAGAX,KAAAmI,UAAA,IAAA3E,EAAApC,QAAA4G,QACAC,OAAAjI,KAAAgH,UACAtC,KAAA,YACAwD,OAAAlI,KAAAkH,MACAkB,YAAA,EACA1H,EAAA,EACAC,EAAA,IAGAX,KAAA6H,MAAAhD,IAAA7E,KAAA+H,QACA/H,KAAA6H,MAAAhD,IAAA7E,KAAAmI,WAEAnI,KAAA6H,MAAAQ,OAA8B3H,EAAAV,KAAAqH,IAAA1G,EAAAX,KAAAqH,MAE9BrH,KAAAkB,MAAA2D,IAAA7E,KAAA6H,UAKA5I,IAAA,QACAZ,MAAA,eAEAY,IAAA,YACAZ,MAAA,WACA,IAAAiK,EAAAtI,KAEAA,KAAAuI,MACAvI,KAAAqH,IAAArH,KAAAqH,IAAArH,KAAAoH,KAEApH,KAAAqH,IAAArH,KAAAK,MACAL,KAAAqH,IAAArH,KAAAK,IACAL,KAAAuI,KAAA,KAGAvI,KAAAqH,IAAArH,KAAAqH,IAAArH,KAAAoH,KACApH,KAAAqH,IAAArH,KAAAmH,MACAnH,KAAAqH,IAAArH,KAAAmH,IACAnH,KAAAuI,KAAA,IAIAvI,KAAA6H,MAAAQ,OAA8B3H,EAAAV,KAAAqH,IAAA1G,EAAAX,KAAAqH,MAE9BrH,KAAAmB,MAAA0D,IAAA7E,KAAAkB,OAEAsH,OAAAC,sBAAA,WACAH,EAAAI,iBAIAzJ,IAAA,iBACAZ,MAAA,eAEAY,IAAA,mBACAZ,MAAA,eAEAY,IAAA,gBACAZ,MAAA,eAEAY,IAAA,qBACAZ,MAAA,gBAGAgI,EAnHA,GAsHAjI,EAAAgD,QAAAiF,gCC1JAnI,OAAAC,eAAAC,EAAA,cACAC,MAAA,OAGA,IAAAE,EAAA,WAAgC,SAAAC,EAAAC,EAAAC,GAA2C,QAAAC,EAAA,EAAgBA,EAAAD,EAAAE,OAAkBD,IAAA,CAAO,IAAAE,EAAAH,EAAAC,GAA2BE,EAAAC,WAAAD,EAAAC,YAAA,MAAwDD,EAAAE,aAAA,KAAgC,UAAAF,MAAAG,SAAA,MAAuDd,OAAAC,eAAAM,EAAAI,EAAAI,IAAAJ,IAA+D,gBAAAK,EAAAC,EAAAC,GAA2L,OAAlID,GAAAX,EAAAU,EAAAG,UAAAF,GAAqEC,GAAAZ,EAAAU,EAAAE,GAA6DF,GAAxhB,GAIAkH,EAAA3C,EAFoBlE,EAAQ,IAM5BoJ,EAAAlF,EAFalE,EAAQ,IAMrBqJ,EAAAnF,EAFclE,EAAQ,KAMtBiE,EAAAC,EAFalE,EAAQ,IAMrBmE,EAAAD,EAFkBlE,EAAQ,IAM1BsJ,EAEA,SAAAvK,GAAuC,GAAAA,KAAAkB,WAA6B,OAAAlB,EAAqB,IAAAsF,KAAiB,SAAAtF,EAAmB,QAAAW,KAAAX,EAAuBJ,OAAAmB,UAAAwE,eAAAC,KAAAxF,EAAAW,KAAA2E,EAAA3E,GAAAX,EAAAW,IAAsG,OAAtB2E,EAAAxC,QAAA9C,EAAsBsF,EAF1PG,CAFgBxE,EAAQ,KAMxB,SAAAkE,EAAAnF,GAAsC,OAAAA,KAAAkB,WAAAlB,GAAuC8C,QAAA9C,GAQ7E,IAAAwK,EAAA,SAAAxC,GAGA,SAAAwC,EAAApJ,EAAAC,EAAAC,IATA,SAAAC,EAAAX,GAAiD,KAAAW,aAAAX,GAA0C,UAAAY,UAAA,qCAU3FC,CAAAC,KAAA8I,GAEA,IAAAvC,EAVA,SAAAC,EAAA1C,GAAiD,IAAA0C,EAAa,UAAAC,eAAA,6DAAyF,OAAA3C,GAAA,iBAAAA,GAAA,mBAAAA,EAAA0C,EAAA1C,EAUvJ4C,CAAA1G,MAAA8I,EAAAnC,WAAAzI,OAAA0I,eAAAkC,IAAAhF,KAAA9D,KAAAN,EAAAC,EAAAC,IASA,OAPA2G,EAAAwC,OACAxC,EAAAyC,UAEAzC,EAAA0C,UAAA,IACA1C,EAAA2C,WAAA,IAEA3C,EAAAnC,OACAmC,EAyHA,OA1IA,SAAAgB,EAAAC,GAA0C,sBAAAA,GAAA,OAAAA,EAA+D,UAAA1H,UAAA,kEAAA0H,GAAuGD,EAAAlI,UAAAnB,OAAAuJ,OAAAD,KAAAnI,WAAyEqI,aAAerJ,MAAAkJ,EAAAzI,WAAA,MAAAE,SAAA,KAAAD,aAAA,QAA6EyI,IAAAtJ,OAAAyJ,eAAAzJ,OAAAyJ,eAAAJ,EAAAC,GAAAD,EAAAZ,UAAAa,GAGrXI,CAAAkB,EAwIC1C,EAAAhF,SAvHD7C,EAAAuK,IACA7J,IAAA,OACAZ,MAAA,WAGA,GAAA2B,KAAAN,IAWA,OATAM,KAAAmB,MAAA,IAAAqC,EAAApC,QAAA+H,OACAC,UAAApJ,KAAAN,IACAC,MAAAK,KAAAL,MACAC,OAAAI,KAAAJ,SAGAI,KAAAC,cAAAD,KAAAN,IAAA2J,MAAA1J,MAAAK,KAAAC,YAAA,MACAD,KAAAE,eAAAF,KAAAN,IAAA2J,MAAAzJ,OAAAI,KAAAE,aAAA,MAEAF,QAGAf,IAAA,SACAZ,MAAA,SAAA2C,GACA,IAAAsH,EAAAtI,KAMA,GAJAA,KAAAgB,OAEAhB,KAAAsJ,YAEA5F,EAAAtC,QAAAmI,WAAAvJ,KAAAgB,KAAA,UAoCA,OAhCAhB,KAAAmB,MAAAqI,iBAIAxJ,KAAAgB,KAAAyI,OAAAC,IAAA,SAAAC,EAAA1K,GAEA,IAAA8J,OAAA,EAEA,OAAAY,EAAAC,MACA,KAAAf,EAAAgB,WAAAC,MAEAf,EAAA,IAAAJ,EAAAvH,QAAAkH,EAAA5I,IAAA4I,EAAA3I,MAAA2I,EAAA1I,QACA0I,EAAArH,SAAA8H,EAAAgB,WAAAzB,EAAArH,SACA8H,EAAAiB,SAAA1B,EAAAnH,OACA4H,EAAAkB,OAAAvG,EAAAtC,QAAAqD,MAAAkF,GAAAjG,EAAAtC,QAAAqD,MAAA6D,EAAAtH,OACA,MAEA,KAAA6H,EAAAgB,WAAAK,MAEAnB,EAAA,IAAAH,EAAAxH,QAAAkH,EAAA5I,IAAA4I,EAAA3I,MAAA2I,EAAA1I,QACA0I,EAAArH,SAAA8H,EAAAgB,WAAAzB,EAAArH,SACA8H,EAAAiB,SAAA1B,EAAAnH,OACA4H,EAAAkB,OAAAvG,EAAAtC,QAAAqD,MAAAkF,GAAAjG,EAAAtC,QAAAqD,MAAA6D,EAAAtH,OAKA+H,GACAT,EAAAS,IAAAoB,KAAApB,KAIA/I,QAGAf,IAAA,WACAZ,MAAA,SAAA+L,EAAAzK,EAAAC,GACA,IAAAsE,EAAAmG,UAAAzL,OAAA,QAAA0L,IAAAD,UAAA,GAAAA,UAAA,KACAlG,EAAAkG,UAAAzL,OAAA,QAAA0L,IAAAD,UAAA,GAAAA,UAAA,KAGAE,EAAAvK,KAAAL,MAAAK,KAAAiJ,UACAuB,EAAAxK,KAAAJ,OAAAI,KAAAkJ,WASA,OARAlJ,KAAAgJ,OAAAmB,MACAM,IAAAL,EACAzK,QAAA4K,EACA3K,SAAA4K,EACAtG,UACAC,YAGAnE,QAGAf,IAAA,YACAZ,MAAA,WACA,IAAAqM,EAAA1K,KA2BA,OAzBAA,KAAA2K,WAAA3K,KAAA2K,UAAAC,SACA5K,KAAA2K,UAAA,IAAAnH,EAAApC,QAAAiD,MAEArE,KAAAgJ,OAAAU,IAAA,SAAAnF,GAEA,IAAAsG,EAAA,IAAAC,MACAD,EAAAE,OAAA,WACA,IAAApL,EAAA4E,EAAA5E,OAAAkL,EAAAlL,MACAC,EAAA2E,EAAA3E,QAAAiL,EAAAjL,OAEAoL,EAAA,IAAAxH,EAAApC,QAAA0J,OACAG,MAAAJ,EACAnK,EAAAgK,EAAAnK,GAAAZ,EAAA,EAAA4E,EAAAL,QACAvD,EAAA+J,EAAAlK,GAAAZ,EAAA,EAAA2E,EAAAJ,QACAxE,QACAC,WAGA8K,EAAAC,UAAA9F,IAAAmG,GAEAN,EAAAvJ,MAAA0D,IAAA6F,EAAAC,YAEAE,EAAAK,IAAA3G,EAAAkG,MAGAzK,SAIA8I,EAxIA,GA2IA1K,EAAAgD,QAAA0H,iCCnLA5K,OAAAC,eAAAC,EAAA,cACAC,MAAA,OAGA,IAAAE,EAAA,WAAgC,SAAAC,EAAAC,EAAAC,GAA2C,QAAAC,EAAA,EAAgBA,EAAAD,EAAAE,OAAkBD,IAAA,CAAO,IAAAE,EAAAH,EAAAC,GAA2BE,EAAAC,WAAAD,EAAAC,YAAA,MAAwDD,EAAAE,aAAA,KAAgC,UAAAF,MAAAG,SAAA,MAAuDd,OAAAC,eAAAM,EAAAI,EAAAI,IAAAJ,IAA+D,gBAAAK,EAAAC,EAAAC,GAA2L,OAAlID,GAAAX,EAAAU,EAAAG,UAAAF,GAAqEC,GAAAZ,EAAAU,EAAAE,GAA6DF,GAAxhB,GAIAkH,EAAA3C,EAFoBlE,EAAQ,IAM5BoE,EAAAI,EAFgBxE,EAAQ,IAMxB4L,EAAA1H,EAFelE,EAAQ,IAMvBiE,EAAAC,EAFalE,EAAQ,IAMrBmE,EAAAD,EAFkBlE,EAAQ,IAM1B6L,EAAArH,EAFaxE,EAAQ,IAMrB8L,EAAA5H,EAFalE,EAAQ,IAIrB,SAAAwE,EAAAzF,GAAuC,GAAAA,KAAAkB,WAA6B,OAAAlB,EAAqB,IAAAsF,KAAiB,SAAAtF,EAAmB,QAAAW,KAAAX,EAAuBJ,OAAAmB,UAAAwE,eAAAC,KAAAxF,EAAAW,KAAA2E,EAAA3E,GAAAX,EAAAW,IAAsG,OAAtB2E,EAAAxC,QAAA9C,EAAsBsF,EAE1P,SAAAH,EAAAnF,GAAsC,OAAAA,KAAAkB,WAAAlB,GAAuC8C,QAAA9C,GAQ7E,IAAAgN,EAAA,SAAAhF,GAGA,SAAAgF,EAAA5L,EAAAC,EAAAC,IATA,SAAAC,EAAAX,GAAiD,KAAAW,aAAAX,GAA0C,UAAAY,UAAA,qCAU3FC,CAAAC,KAAAsL,GAEA,IAAA/E,EAVA,SAAAC,EAAA1C,GAAiD,IAAA0C,EAAa,UAAAC,eAAA,6DAAyF,OAAA3C,GAAA,iBAAAA,GAAA,mBAAAA,EAAA0C,EAAA1C,EAUvJ4C,CAAA1G,MAAAsL,EAAA3E,WAAAzI,OAAA0I,eAAA0E,IAAAxH,KAAA9D,KAAAN,EAAAC,EAAAC,IAuBA,OArBA2G,EAAAM,KAAA,SAAAC,KAAAC,MAEAR,EAAAgF,WAAA,IACAhF,EAAAiF,UAAA,IAEAjF,EAAAkF,kBAAA,IACAlF,EAAAmF,cAAA,IAEAnF,EAAAoF,cAAA,EACApF,EAAAqF,UAAA,EAEArF,EAAAsF,WAAA,GACAtF,EAAAuF,WAAA,GAEAvF,EAAAwF,QAEAxF,EAAAyF,WAAA,EAEAzF,EAAA0F,UAAA,UAEA1F,EAAAnC,OACAmC,EAsaA,OArcA,SAAAgB,EAAAC,GAA0C,sBAAAA,GAAA,OAAAA,EAA+D,UAAA1H,UAAA,kEAAA0H,GAAuGD,EAAAlI,UAAAnB,OAAAuJ,OAAAD,KAAAnI,WAAyEqI,aAAerJ,MAAAkJ,EAAAzI,WAAA,MAAAE,SAAA,KAAAD,aAAA,QAA6EyI,IAAAtJ,OAAAyJ,eAAAzJ,OAAAyJ,eAAAJ,EAAAC,GAAAD,EAAAZ,UAAAa,GAGrXI,CAAA0D,EAmcClF,EAAAhF,SApaD7C,EAAA+M,IACArM,IAAA,OACAZ,MAAA,WAGA,OAFA2B,KAAAkM,qBAEAlM,QAGAf,IAAA,SACAZ,MAAA,SAAA2C,EAAAmL,GAIA,GAHAnM,KAAAgB,OACAhB,KAAAmM,UAEAzI,EAAAtC,QAAAmI,WAAAvJ,KAAAgB,KAAA,QASA,OAPAhB,KAAAoM,mBACApM,KAAAqM,iBAIArM,KAAA0I,YAEA1I,QAGAf,IAAA,QACAZ,MAAA,WACA2B,KAAA+L,KAAArC,IAAA,SAAAC,GACAA,EAAA2C,iBAIArN,IAAA,YACAZ,MAAA,WACA,IAAAiK,EAAAtI,KAEA,IAAAA,KAAAuM,OAAA,CAEA,IACAC,OAAA,EACApF,EAAApH,KAAA4L,UAEA5L,KAAAc,YAAAd,KAAA2L,cAGA3L,KAAAc,YAAAd,KAAAY,aACAZ,KAAAc,WAAAd,KAAAY,WACAZ,KAAAuM,OAAA,GAGAvM,KAAAyM,QAEA,QAAA9N,EAAAqB,KAAA+L,KAAAnN,OAAA,EAA8CD,GAAA,EAAQA,IAAA,CAGtD,IAAA4F,EAAAvE,KAAA+L,KAAApN,GAIA+N,EAAA1M,KAAAc,WAMA,GAJA4L,GAAAnI,EAAAoI,SAAA5J,WACA2J,EAAAnI,EAAAoI,SAAA5J,YAGA2J,EAAAnI,EAAAoI,SAAA7J,YAAA,CAEAyB,EAAA+H,SAAAnC,KAAA,KACA,QAAA/G,EAAAmB,EAAAoI,SAAA7J,WACAM,GAAAsJ,IAAAtJ,EAAAsJ,GAEAF,EAAA7I,EAAA3B,qBAAAhC,KAAAgH,UAAA5D,GACAmB,EAAA+H,SAAAnC,MAAAqC,EAAA9L,EAAA8L,EAAA7L,GAAAiM,KAAA,UACAxJ,GAAAmB,EAAAoI,SAAA7J,YAAAyB,EAAA+H,SAAAnC,KAAA,OAEA/G,GAAAsJ,GAPwDtJ,GAAAgE,GASxD,QAAAyF,EAAAH,EACAG,GAAAtI,EAAAoI,SAAA7J,aAAA+J,EAAAtI,EAAAoI,SAAA7J,YAEA0J,EAAA7I,EAAA3B,qBAAAhC,KAAAiH,SAAA4F,GACAtI,EAAA+H,SAAAnC,MAAAqC,EAAA9L,EAAA8L,EAAA7L,GAAAiM,KAAA,UACAC,GAAAtI,EAAAoI,SAAA7J,WALyC+J,GAAAzF,GAQzC7C,EAAA+H,SAAAnC,KAAA,KAEA5F,EAAAwH,KAAAe,QAAAvI,EAAA+H,SAAAM,KAAA,MAEA5M,KAAAkB,MAAAwI,IAAA,SAAAC,EAAA1K,GACAqJ,EAAAnH,MAAA0D,IAAA8E,GACAA,EAAAoD,UAAAzE,EAAApH,MAAAtC,OAAAK,KAGAuJ,OAAAC,sBAAA,WACAH,EAAAI,cAGA1I,KAAAuM,QACA/D,OAAAC,sBAAA,WACAH,EAAA0E,sBAKA/N,IAAA,aACAZ,MAAA,WACA2B,KAAAiN,aAAA3M,KAAA4M,KAAAlN,KAAA0L,cAAA1L,KAAAK,IAAA,GAEAL,KAAA+H,OAAA,IAAAvE,EAAApC,QAAA4G,QACAtH,EAAAV,KAAAO,GACAI,EAAAX,KAAAQ,GACAyH,OAAAjI,KAAAiN,aACA/E,OAAAlI,KAAAiM,UACA7D,YAAA,IACA1D,KAAA,cAEA1E,KAAAmN,YAAAtI,IAAA7E,KAAA+H,WAGA9I,IAAA,iBACAZ,MAAA,WACA2B,KAAAoN,iBAAA9M,KAAA4M,KAAAlN,KAAAyL,kBAAAzL,KAAAK,IAAA,GAEA,IAAAgN,KACAA,EAAAlD,KAAA,KACA,QAAAxL,EAAA,GAA4BA,GAAA,IAAUA,IAAA,CACtC,IAAA2O,EAAA3J,EAAA3B,qBAAAhC,KAAAoN,iBAAAzO,GACA0O,EAAAlD,MAAAmD,EAAA5M,EAAA4M,EAAA3M,GAAAiM,KAAA,UACA,IAAAjO,GACA0O,EAAAlD,KAAA,KAGAkD,EAAAlD,KAAA,KACA,QAAAoD,EAAA,IAA+BA,GAAA,IAAYA,IAAA,CAC3C,IAAAC,EAAA7J,EAAA3B,qBAAAhC,KAAAoN,iBAAAG,GACAF,EAAAlD,MAAAqD,EAAA9M,EAAA8M,EAAA7M,GAAAiM,KAAA,UACA,KAAAW,GACAF,EAAAlD,KAAA,KAIAnK,KAAAyN,WAAA,IAAAjK,EAAApC,QAAAsM,MACA1M,KAAAqM,EAAAT,KAAA,IACAlM,EAAAV,KAAAO,GACAI,EAAAX,KAAAQ,GACA0H,OAAAlI,KAAAiM,UACA7D,YAAA,IACA1D,KAAA,cAGA1E,KAAAmN,YAAAtI,IAAA7E,KAAAyN,eAGAxO,IAAA,iBACAZ,MAAA,WACA,IAAAqM,EAAA1K,KA4EA,OA1EAA,KAAAkB,SACAlB,KAAA+L,QACA/L,KAAA2N,QAEA3N,KAAAmN,YAAA,IAAA3J,EAAApC,QAAAiD,MAEArE,KAAA4N,aACA5N,KAAA6N,iBAEA7N,KAAAmB,MAAA0D,IAAA7E,KAAAmN,aAEAnN,KAAAgB,UAAA0I,IAAA,SAAAC,EAAA1K,GACA,IAAAiI,EAAAwD,EAAA3J,OAAA9B,EAAAyL,EAAA3J,OAAAnC,QAEA8E,EAAAtC,QAAAmI,WAAAI,EAAA,qBAEAzC,EAAAyC,EAAAmE,UAAA5G,OAGA,IAAA6E,EAAA,IAAAvI,EAAApC,QAAAsM,MACAhN,EAAAgK,EAAAnK,GACAI,EAAA+J,EAAAlK,GACA4H,YAAA,EACAF,OAAAhB,EACAlG,KAAA,GACA0D,KAAAwC,IAUAoG,GACAvB,OACAO,YACAK,SAAAhD,GAGAe,EAAAqB,KAAA5B,KAAAmD,GAEAvB,EAAAgC,GAAA,sBAAAC,MAIAjC,EAAAgC,GAAA,2BAIA,IAAAJ,EAAA,IAAAnK,EAAApC,QAAA6M,MACAvN,EAAAgK,EAAAnK,GACAI,EAAA+J,EAAAlK,GACA6M,QAAA,SACAnF,OAAA,UACAE,YAAA,IAEAsC,EAAAiD,KAAAxD,KAAAwD,GAEA,IAAAzM,EAAA,IAAAsC,EAAApC,QAAAiD,MACAnD,EAAA2D,IAAAkH,GACA7K,EAAA2D,IAAA8I,GAEAjD,EAAAxJ,MAAAiJ,KAAAjJ,KAEAlB,KAAAkB,MAAAwI,IAAA,SAAAC,EAAA1K,GACAyL,EAAAvJ,MAAA0D,IAAA8E,KAOA3J,QAGAf,IAAA,mBACAZ,MAAA,WACA,IAAA6P,EAAAlO,KAEA,GAAAA,KAAAgB,KAAA,CAEA,IAAAmN,EAAA,EACAb,EAAA,EAkBA,GAhBAtN,KAAAgB,UAAA0I,IAAA,SAAAC,GACAwE,GAAAxE,EAAAtL,QAEA2B,KAAAmO,QAEAnO,KAAAgB,UAAA0I,IAAA,SAAAC,GACAA,EAAAyE,SAAAhD,EAAAjI,aAAAwG,EAAAtL,MAAA8P,GACAb,EAAAlC,EAAAjI,aAAAmK,EAAA3D,EAAAyE,UACAzE,EAAA0E,cAAAf,EAEA3D,EAAA2E,QAAAC,SAAA,IAAA5E,EAAAyE,UAEAzE,EAAA5G,SAAAmL,EAAAtN,WAAA+I,EAAA0E,gBAIArO,KAAAgB,UAAApC,OAAA,CACA,IAAA2F,EAAAvE,KAAAgB,UAAAhB,KAAAgB,UAAApC,OAAA,GACA0O,GAAA/I,EAAA6J,SAEA7J,EAAA6J,SAAA,EAAAd,EACA/I,EAAA+J,QAAAC,SAAA,IAAAhK,EAAA6J,UACA7J,EAAA8J,cAAA,EACA9J,EAAAxB,SAAA/C,KAAAY,WAGAZ,KAAAgB,UAAA0I,IAAA,SAAAC,EAAA1K,GAIA0K,EAAA7G,WAHA7D,EAGAiP,EAAAlN,UAAA/B,EAAA,GAAA8D,SAFA,EAKA4G,EAAA6E,SAAA7E,EAAA7G,YAAA6G,EAAA5G,SAAA4G,EAAA7G,YAAA,EAEA6G,EAAA8E,UAAA9K,EAAA3B,qBAAAkM,EAAAlH,UAAA2C,EAAA6E,UACA7E,EAAA+E,QAAA/K,EAAA3B,qBAAAkM,EAAAlH,UAAAkH,EAAAS,WAAAhF,EAAA6E,UAEA7E,EAAAiF,UAAAjL,EAAA3B,qBAAAkM,EAAAlH,UAAAkH,EAAAS,WAAAhF,EAAA6E,UAEA7E,EAAAkF,eAAA,IAAA1D,EAAA/J,QAAA8M,EAAAvO,MAAAuO,EAAAtO,OAAA+D,EAAAX,UAAA2G,EAAAiF,UAAAV,EAAAzN,eAIAxB,IAAA,gBACAZ,MAAA,WACA,IAAAyQ,EAAA9O,KAEA,KAAAA,KAAA+O,iBAAA/O,KAAA2O,YAAA,CAIA3O,KAAA+O,iBAAA/O,KAAAgP,eAEAhP,KAAA+O,iBAAA/O,KAAA2O,aACA3O,KAAA+O,gBAAA/O,KAAA2O,YAGA,QAAAhQ,EAAA,EAA2BA,EAAAqB,KAAA+L,KAAAnN,OAAsBD,IAAA,CACjD,IAAAoN,EAAA/L,KAAA+L,KAAApN,GACAuC,EAAAlB,KAAAkB,MAAAvC,GAEA+P,EAAA/K,EAAA3B,qBAAAhC,KAAAgH,UAAAhH,KAAA+O,gBAAAhD,EAAAY,SAAA6B,UAEAxO,KAAA2N,KAAAhP,GACA0O,QAAAtB,EAAAY,SAAA8B,UAAA/N,EAAAqL,EAAAY,SAAA8B,UAAA9N,EAAA+N,EAAAhO,EAAAgO,EAAA/N,IAEAX,KAAA+O,iBAAA/O,KAAA2O,YAEA3O,KAAAiP,QAAAlD,EAAA7K,GACAlB,KAAAkP,QAAAnD,EAAA7K,IAEAsH,OAAAC,sBAAA,WACAqG,EAAA9B,kBAIAhN,KAAAmB,MAAA0D,IAAA3D,QAIAjC,IAAA,UACAZ,MAAA,SAAA0N,EAAA7K,GACA,IAAA8J,EAAA,IAAAK,EAAAjK,QAAApB,KAAAN,IAAAM,KAAAL,MAAAK,KAAAJ,QACAoL,EAAAjB,YACA5I,MAAAnB,KAAAmB,MACAD,UAEA8J,EAAAf,OAAA8B,EAAAY,SAAA+B,YAGAzP,IAAA,UACAZ,MAAA,SAAA0N,EAAA7K,GACA,IAAAiO,EAAA,IAAA3L,EAAApC,QAAAgO,MACA1O,EAAA,EACAC,EAAA,EACAwO,KAAApD,EAAAY,SAAA2B,QAAA,IACA5J,KAAA,UACA2K,WAAA,gBACAC,SAAA,KAEAC,EAAAvP,KAAAO,GAAAwL,EAAAY,SAAAiC,UAAAlO,EACA8O,EAAAxP,KAAAQ,GAAAuL,EAAAY,SAAAiC,UAAAjO,EAIA,OAHAoL,EAAAY,SAAAkC,eAAAY,QAIA,KAAAtE,EAAA/J,QAAAkE,UAAAR,QAEA0K,GAAAL,EAAAtD,WAAA7L,KAAAgM,WACAuD,GAAAJ,EAAAO,UAAA,EACA,MAEA,KAAAvE,EAAA/J,QAAAkE,UAAAP,SAEAyK,GAAAL,EAAAtD,WAAA7L,KAAAgM,WACA,MAEA,KAAAb,EAAA/J,QAAAkE,UAAAC,UAEAiK,GAAAL,EAAAtD,WAAA7L,KAAAgM,WACAuD,GAAAJ,EAAAO,UAAA,EACA,MAEA,KAAAvE,EAAA/J,QAAAkE,UAAAG,aAEA8J,GAAAJ,EAAAO,UAAA,EACA,MAEA,KAAAvE,EAAA/J,QAAAkE,UAAAE,SAEA+J,EAAAJ,EAAAO,WAAA1P,KAAAL,QACA4P,EAAAvP,KAAAL,MAAAwP,EAAAO,UAAA,GAEA,MAEA,KAAAvE,EAAA/J,QAAAkE,UAAAL,YAEA,MAEA,KAAAkG,EAAA/J,QAAAkE,UAAAN,WAEAuK,GAAAJ,EAAAO,UAAA,EACA,MAEA,KAAAvE,EAAA/J,QAAAkE,UAAAI,SAEA6J,GAAAJ,EAAAO,WACA,IAAAH,EAAA,GACAC,GAAAxP,KAAAgM,WAMAmD,EAAAzO,EAAA6O,GACAJ,EAAAxO,EAAA6O,GACAtO,EAAA2D,IAAAsK,MAGAlQ,IAAA,qBACAZ,MAAA,WAUA,OAPA2B,KAAAgH,UAAA1G,KAAA4M,KAAAlN,KAAAuL,WAAAvL,KAAAK,IAAA,GACAL,KAAAiH,SAAA3G,KAAA4M,KAAAlN,KAAAwL,UAAAxL,KAAAK,IAAA,GAEAL,KAAA2O,YAAArO,KAAA6G,IAAAnH,KAAAL,MAAAK,KAAAJ,QAAA,EAAAI,KAAAgH,WAAA,EAAAhH,KAAA8L,WACA9L,KAAA+O,gBAAA,EACA/O,KAAAgP,eAAA,GAEAhP,SAIAsL,EAncA,GAscAlN,EAAAgD,QAAAkK,gCClfApN,OAAAC,eAAAC,EAAA,cACAC,MAAA,OAGA,IAAAE,EAAA,WAAgC,SAAAC,EAAAC,EAAAC,GAA2C,QAAAC,EAAA,EAAgBA,EAAAD,EAAAE,OAAkBD,IAAA,CAAO,IAAAE,EAAAH,EAAAC,GAA2BE,EAAAC,WAAAD,EAAAC,YAAA,MAAwDD,EAAAE,aAAA,KAAgC,UAAAF,MAAAG,SAAA,MAAuDd,OAAAC,eAAAM,EAAAI,EAAAI,IAAAJ,IAA+D,gBAAAK,EAAAC,EAAAC,GAA2L,OAAlID,GAAAX,EAAAU,EAAAG,UAAAF,GAAqEC,GAAAZ,EAAAU,EAAAE,GAA6DF,GAAxhB,GAIAkH,EAAA3C,EAFoBlE,EAAQ,IAM5BoE,EAAAI,EAFgBxE,EAAQ,IAMxB4L,EAAA1H,EAFelE,EAAQ,IAMvBiE,EAAAC,EAFalE,EAAQ,IAMrBkE,EAFkBlE,EAAQ,IAM1BwE,EAFaxE,EAAQ,IAMrBkE,EAFalE,EAAQ,IAIrB,SAAAwE,EAAAzF,GAAuC,GAAAA,KAAAkB,WAA6B,OAAAlB,EAAqB,IAAAsF,KAAiB,SAAAtF,EAAmB,QAAAW,KAAAX,EAAuBJ,OAAAmB,UAAAwE,eAAAC,KAAAxF,EAAAW,KAAA2E,EAAA3E,GAAAX,EAAAW,IAAsG,OAAtB2E,EAAAxC,QAAA9C,EAAsBsF,EAE1P,SAAAH,EAAAnF,GAAsC,OAAAA,KAAAkB,WAAAlB,GAAuC8C,QAAA9C,GAQ7E,IAAAqR,EAAA,SAAArJ,GAGA,SAAAqJ,EAAAjQ,EAAAC,EAAAC,IATA,SAAAC,EAAAX,GAAiD,KAAAW,aAAAX,GAA0C,UAAAY,UAAA,qCAU3FC,CAAAC,KAAA2P,GAEA,IAAApJ,EAVA,SAAAC,EAAA1C,GAAiD,IAAA0C,EAAa,UAAAC,eAAA,6DAAyF,OAAA3C,GAAA,iBAAAA,GAAA,mBAAAA,EAAA0C,EAAA1C,EAUvJ4C,CAAA1G,MAAA2P,EAAAhJ,WAAAzI,OAAA0I,eAAA+I,IAAA7L,KAAA9D,KAAAN,EAAAC,EAAAC,IAsCA,OApCA2G,EAAAM,KAAA,QAAAC,KAAAC,MAEAR,EAAAqJ,mBAAA,KAEArJ,EAAA0F,UAAA,UAEA1F,EAAAkF,kBAAA,IACAlF,EAAAmF,cAAA,IAEAnF,EAAAsJ,eAAA,KAEAtJ,EAAAuJ,cAAA,IACAvJ,EAAAwJ,aAAA,MAEAxJ,EAAAyJ,eAAA,EACAzJ,EAAA0J,cAAA,GAEA1J,EAAA2J,SAAA,IACA3J,EAAA4J,KAAA,GACA5J,EAAA6J,SAAA,KAEA7J,EAAAyF,WAAA,EAEAzF,EAAA8J,UAAA,QAAA9J,EAAA2J,UAAA,EACA3J,EAAA+J,UAAA/J,EAAA4J,KAAA,EACA5J,EAAAgK,UAAAhK,EAAA2J,SAAA3J,EAAA4J,KACA5J,EAAAiK,QAAAjK,EAAA6J,SAAA7J,EAAA4J,KAEA5J,EAAAkK,aAAA,EACAlK,EAAAmK,aAAA,EACAnK,EAAAoK,eAAA,EAEApK,EAAAqK,qBAAA,GACArK,EAAAsK,sBAAA,IAEAtK,EAAAnC,OACAmC,EAwZA,OAtcA,SAAAgB,EAAAC,GAA0C,sBAAAA,GAAA,OAAAA,EAA+D,UAAA1H,UAAA,kEAAA0H,GAAuGD,EAAAlI,UAAAnB,OAAAuJ,OAAAD,KAAAnI,WAAyEqI,aAAerJ,MAAAkJ,EAAAzI,WAAA,MAAAE,SAAA,KAAAD,aAAA,QAA6EyI,IAAAtJ,OAAAyJ,eAAAzJ,OAAAyJ,eAAAJ,EAAAC,GAAAD,EAAAZ,UAAAa,GAGrXI,CAAA+H,EAocCvJ,EAAAhF,SAtZD7C,EAAAoR,IACA1Q,IAAA,OACAZ,MAAA,WACA2B,KAAA8Q,YAAA9Q,KAAAL,MAAAK,KAAA4P,mBAEA5P,KAAA+Q,YAAA/Q,KAAAL,MAAAK,KAAA+P,aACA/P,KAAAgR,aAAAhR,KAAAL,MAAAK,KAAA8P,cAEA9P,KAAAiR,cAAA3Q,KAAA4M,KAAAlN,KAAA6P,eAAA7P,KAAAK,KAEAL,KAAA0P,UAAA1P,KAAA4Q,qBAAA5Q,KAAAL,MACAK,KAAA6L,WAAA7L,KAAA6Q,sBAAA7Q,KAAAL,MACAK,KAAAuP,MAAAvP,KAAAO,GAAAP,KAAA0P,UAAA,EACA1P,KAAAwP,MAAAxP,KAAAQ,GAAAR,KAAAiR,cAAAjR,KAAAiQ,cAAA,IAEAjQ,KAAAkR,iBACAlR,KAAAmR,oBACAnR,KAAAoR,UACA,QAAAzS,EAAA,EAA2BA,GAAAqB,KAAAmQ,KAAgBxR,IAAA,CAC3C,IAEA0S,EAFAC,OAAA,EACAC,OAAA,EAsBA,GApBAF,EAAA1S,EAAAqB,KAAAuQ,UAAAvQ,KAAAqQ,UAEA1R,KAAAqB,KAAAmQ,OACAmB,EAAA3N,EAAA3B,qBAAAhC,KAAA+Q,YAAAM,GACAE,EAAA5N,EAAA3B,qBAAAhC,KAAAgR,aAAAK,GAEArR,KAAAkR,cAAA/G,KAAA,KACAnK,KAAAkR,cAAA/G,MAAAmH,EAAA5Q,EAAA4Q,EAAA3Q,GAAAiM,KAAA,MACA5M,KAAAkR,cAAA/G,KAAA,KACAnK,KAAAkR,cAAA/G,MAAAoH,EAAA7Q,EAAA6Q,EAAA5Q,GAAAiM,KAAA,OAGA0E,EAAA3N,EAAA3B,qBAAAhC,KAAAiR,cAAAI,GACAE,EAAA5N,EAAA3B,qBAAAhC,KAAAiR,cAAAjR,KAAAgQ,eAAAqB,GAEArR,KAAAmR,iBAAAhH,KAAA,KACAnK,KAAAmR,iBAAAhH,MAAAmH,EAAA5Q,EAAA4Q,EAAA3Q,GAAAiM,KAAA,MACA5M,KAAAmR,iBAAAhH,KAAA,KACAnK,KAAAmR,iBAAAhH,MAAAoH,EAAA7Q,EAAA6Q,EAAA5Q,GAAAiM,KAAA,QAEAjO,EAAAqB,KAAAwQ,QAAA,UAAA7R,EAAA,CACA,IAAAkC,EAAA,EAGA,IAAAlC,IACAkC,EAAA,GAGAlC,GAAA,KACAkC,EAAA,IAEAlC,GAAA,KACAkC,EAAA,IAEA,IAAAsO,GACAA,KAAAxQ,EAAAqB,KAAAwQ,QACAa,QAAAxQ,EACAoD,MAAAN,EAAA3B,qBAAAhC,KAAAiR,cAAAjR,KAAAiQ,cAfA,EAeAoB,EAAAxQ,IAEAsO,EAAAP,UAAA,IAAAzD,EAAA/J,QAAApB,KAAAL,MAAAK,KAAAJ,OAAA+D,EAAAX,UAAAmM,EAAAlL,MAAAjE,KAAAS,SAEAT,KAAAoR,OAAAjH,KAAAgF,QAKAlQ,IAAA,SACAZ,MAAA,SAAA2C,EAAAmL,GACAnM,KAAAmB,MAAAqI,iBAEAxJ,KAAAqM,oBAGApN,IAAA,WACAZ,MAAA,WAEA2B,KAAAwR,UAAA,IAAAhO,EAAApC,QAAAgO,MACAD,KAAA,UACAzO,EAAAV,KAAAO,GACAI,EAAAX,KAAAwP,MACAF,SAAA,GACAD,WAAA,gBACA3K,KAAA,UACA+M,UAAA,WAEAzR,KAAAwR,UAAA9Q,EAAAV,KAAAO,GAAAP,KAAAwR,UAAA9B,UAAA,GACA1P,KAAAwR,UAAA7Q,EAAAX,KAAAwP,MAAA,GAEAxP,KAAAmN,YAAAtI,IAAA7E,KAAAwR,cAGAvS,IAAA,eACAZ,MAAA,WACA2B,KAAA0R,SAAA,IAAAlO,EAAApC,QAAAwD,MACAF,KAAA,UACAwD,OAAA,YACAE,YAAA,EACAuJ,QAAA,GACAhS,MAAAK,KAAA0P,UACA9P,OAAAI,KAAA6L,WACAnL,EAAAV,KAAAuP,MACA5O,EAAAX,KAAAwP,QAGA,IAAAnC,KACAA,EAAAlD,KAAA,KAAAnK,KAAAuP,MAAAvP,KAAAwP,MAAAxP,KAAA2Q,gBAAA/D,KAAA,MACAS,EAAAlD,KAAA,KAAAnK,KAAAuP,MAAAvP,KAAAwP,OAAA5C,KAAA,MACAS,EAAAlD,KAAA,KAAAnK,KAAAuP,MAAAvP,KAAA2Q,eAAA3Q,KAAAwP,OAAA5C,KAAA,MAEAS,EAAAlD,KAAA,KAAAnK,KAAAuP,MAAAvP,KAAA0P,UAAA1P,KAAA2Q,eAAA3Q,KAAAwP,OAAA5C,KAAA,MACAS,EAAAlD,KAAA,KAAAnK,KAAAuP,MAAAvP,KAAA0P,UAAA1P,KAAAwP,OAAA5C,KAAA,MACAS,EAAAlD,KAAA,KAAAnK,KAAAuP,MAAAvP,KAAA0P,UAAA1P,KAAAwP,MAAAxP,KAAA2Q,gBAAA/D,KAAA,MAEAS,EAAAlD,KAAA,KAAAnK,KAAAuP,MAAAvP,KAAA0P,UAAA1P,KAAAwP,MAAAxP,KAAA6L,WAAA7L,KAAA2Q,gBAAA/D,KAAA,MACAS,EAAAlD,KAAA,KAAAnK,KAAAuP,MAAAvP,KAAA0P,UAAA1P,KAAAwP,MAAAxP,KAAA6L,YAAAe,KAAA,MACAS,EAAAlD,KAAA,KAAAnK,KAAAuP,MAAAvP,KAAA0P,UAAA1P,KAAA2Q,eAAA3Q,KAAAwP,MAAAxP,KAAA6L,YAAAe,KAAA,MAEAS,EAAAlD,KAAA,KAAAnK,KAAAuP,MAAAvP,KAAA2Q,eAAA3Q,KAAAwP,MAAAxP,KAAA6L,YAAAe,KAAA,MACAS,EAAAlD,KAAA,KAAAnK,KAAAuP,MAAAvP,KAAAwP,MAAAxP,KAAA6L,YAAAe,KAAA,MACAS,EAAAlD,KAAA,KAAAnK,KAAAuP,MAAAvP,KAAAwP,MAAAxP,KAAA6L,WAAA7L,KAAA2Q,gBAAA/D,KAAA,MAEA5M,KAAA4R,aAAA,IAAApO,EAAApC,QAAAsM,MACA1M,KAAAqM,EAAAT,KAAA,IACA1E,OAAAlI,KAAAiM,UACA7D,YAAA,IAGApI,KAAAmN,YAAAtI,IAAA7E,KAAA4R,cACA5R,KAAAmN,YAAAtI,IAAA7E,KAAA0R,aAGAzS,IAAA,cACAZ,MAAA,WACA,IAAAiK,EAAAtI,KAEAA,KAAAoR,QAAApR,KAAAoR,OAAAxS,QAEAoB,KAAAoR,OAAA1H,IAAA,SAAAC,GACA,IAAAwF,EAAA,IAAA3L,EAAApC,QAAAgO,MACA1O,EAAAiJ,EAAA1F,MAAAvD,EAAA4H,EAAA/H,GACAI,EAAAgJ,EAAA1F,MAAAtD,EAAA2H,EAAA9H,GACA2O,KAAAxF,EAAAwF,KAAA,GACAG,SAAA,GAEAD,WAAA,iBACA3K,KAAA4D,EAAA2D,YAEAkD,EAAA0C,SAAAlI,EAAA0H,MAAA,IAEA/I,EAAA6E,YAAAtI,IAAAsK,QAIAlQ,IAAA,cACAZ,MAAA,WAEA,IAAAgP,KACAA,EAAAlD,KAAA,KACA,QAAAxL,EAAAqB,KAAAqQ,UAAwC1R,GAAAqB,KAAAqQ,UAAArQ,KAAAkQ,SAAqCvR,GAAA,IAC7E,IAAA2O,EAAA3J,EAAA3B,qBAAAhC,KAAAiR,cAAAtS,GACA0O,EAAAlD,MAAAmD,EAAA5M,EAAA4M,EAAA3M,GAAAiM,KAAA,UACA,IAAAjO,GACA0O,EAAAlD,KAAA,KAIAnK,KAAA8R,QAAA,IAAAtO,EAAApC,QAAAsM,MACA1M,KAAAqM,EAAAT,KAAA,IACAlM,EAAAV,KAAAO,GACAI,EAAAX,KAAAQ,GACA0H,OAAAlI,KAAAiM,UACA7D,YAAA,EACA1D,KAAA,cAGA1E,KAAA+R,YAAA,IAAAvO,EAAApC,QAAAsM,MACA1M,KAAAhB,KAAAkR,cAAAtE,KAAA,IACAlM,EAAAV,KAAAO,GACAI,EAAAX,KAAAQ,GACA0H,OAAA,YACAE,YAAA,EACA1D,KAAA,cAGA1E,KAAAgS,eAAA,IAAAxO,EAAApC,QAAAsM,MACA1M,KAAAhB,KAAAmR,iBAAAvE,KAAA,IACAlM,EAAAV,KAAAO,GACAI,EAAAX,KAAAQ,GACA0H,OAAAlI,KAAAiM,UACA7D,YAAA,EACA1D,KAAA,cAGA1E,KAAAmN,YAAAtI,IAAA7E,KAAA8R,SACA9R,KAAAmN,YAAAtI,IAAA7E,KAAA+R,aACA/R,KAAAmN,YAAAtI,IAAA7E,KAAAgS,mBAGA/S,IAAA,UACAZ,MAAA,WAEA,IAAAmG,GACA9D,EAAAV,KAAAO,GACAI,EAAAX,KAAAQ,GACAyR,YAAAjS,KAAA+Q,YACAmB,YAAAlS,KAAAgR,aACAK,MAAArR,KAAAkQ,SAEAhI,OAAA,YACAE,YAAA,EACAyJ,SAAA7R,KAAAqQ,UACA8B,8BAA+CzR,GAAA,GAAAC,GAAA,IAC/CyR,4BAA6C1R,EAAA,GAAAC,EAAA,IAC7C0R,8BAAA,uCAEArS,KAAAsS,IAAA,IAAA9O,EAAApC,QAAAmR,IAAA/N,GAEAxE,KAAAmN,YAAAtI,IAAA7E,KAAAsS,QAGArT,IAAA,iBACAZ,MAAA,WACA,IAAAqM,EAAA1K,KAEAA,KAAAkB,MAAA,IAAAsC,EAAApC,QAAAiD,MACArE,KAAAmN,YAAA,IAAA3J,EAAApC,QAAAiD,MAEArE,KAAAwS,UAAA,IAAAhP,EAAApC,QAAA4G,QACAtH,EAAAV,KAAAO,GACAI,EAAAX,KAAAQ,GACAyH,OAAAjI,KAAA8Q,YACA5I,OAAAlI,KAAAiM,UACA7D,YAAA,IACA1D,KAAA,wBAGA1E,KAAAyS,YAAA,IAAAjP,EAAApC,QAAAgO,MACA1O,EAAAV,KAAAO,GACAI,EAAAX,KAAAQ,GACA2O,KAAA,SACAG,SAAA,GACAD,WAAA,gBACA3K,KAAA,UACA+M,UAAA,WAEAzR,KAAAyS,YAAA/R,EAAAV,KAAAO,GAAAP,KAAAyS,YAAA/C,UAAA,EAAA1P,KAAAyQ,aACAzQ,KAAAyS,YAAA9R,EAAAX,KAAAQ,GAAAR,KAAAyS,YAAA5G,WAAA,EAAA7L,KAAA0Q,aAkBA,IAAAgC,EAAA,IAAAlP,EAAApC,QAAAuR,OACAjS,EAAA,EACAC,GAAA,EACAsH,OAAA,GACAoJ,MAAA,GACA3M,KAAA,UACAwD,OAAA,UACAE,YAAA,EACAyJ,SAAA,KAGAe,EAAA,IAAApP,EAAApC,QAAAuR,OACAjS,EAAA,EACAC,GAAA,EACAsH,OAAA,GACAoJ,MAAA,GACA3M,KAAA,UACAwD,OAAA,UACAE,YAAA,EACAyJ,SAAA,KAGAhK,EAAA,IAAArE,EAAApC,QAAA0G,OACApH,EAAAV,KAAAO,GACAI,EAAAX,KAAAQ,KAGAqH,EAAAhD,IAAA+N,GACA/K,EAAAhD,IAAA6N,GAEA1S,KAAAqR,OAAA,GAEArR,KAAA6H,QAEA7H,KAAAkB,MAAA2D,IAAAgD,GACA7H,KAAAkB,MAAA2D,IAAA7E,KAAAwS,WACAxS,KAAAkB,MAAA2D,IAAA7E,KAAAyS,aAIAzS,KAAA4N,aACA5N,KAAA6N,iBACA7N,KAAA6S,UACA7S,KAAA8S,cACA9S,KAAA+S,cACA/S,KAAAgT,eACAhT,KAAAiT,WAEAjT,KAAAmB,MAAA0D,IAAA7E,KAAAkB,OACAlB,KAAAmB,MAAA0D,IAAA7E,KAAAmN,aAEA3E,OAAAC,sBAAA,WACAiC,EAAAhC,iBAIAzJ,IAAA,YACAZ,MAAA,WACA2B,KAAAqR,QAEA,IAAApN,EAAAN,EAAA3B,qBAAAhC,KAAA8Q,YAAA,EAAA9Q,KAAAqR,OACArR,KAAA6H,MAAAnH,EAAAV,KAAAO,GAAA0D,EAAAvD,GACAV,KAAA6H,MAAAlH,EAAAX,KAAAQ,GAAAyD,EAAAtD,GACAX,KAAA6H,MAAAgK,SAAA7R,KAAAqR,MAAA,IACArR,KAAA6H,MAAAgK,SAAA7R,KAAAqR,MAAA,IAEArR,KAAAmB,MAAA0D,IAAA7E,KAAAkB,UAKAjC,IAAA,mBACAZ,MAAA,eAEAY,IAAA,gBACAZ,MAAA,eAEAY,IAAA,UACAZ,MAAA,SAAA0N,EAAA7K,OAEAjC,IAAA,UACAZ,MAAA,SAAA0N,EAAA7K,OAEAjC,IAAA,qBACAZ,MAAA,eAEAY,IAAA,aACAZ,MAAA,WACA2B,KAAAiN,aAAA3M,KAAA4M,KAAAlN,KAAA0L,cAAA1L,KAAAK,IAAA,GAEAL,KAAA+H,OAAA,IAAAvE,EAAApC,QAAA4G,QACAtH,EAAAV,KAAAO,GACAI,EAAAX,KAAAQ,GACAyH,OAAAjI,KAAAiN,aACA/E,OAAAlI,KAAAiM,UACA7D,YAAA,EACA1D,KAAA,cAEA1E,KAAAmN,YAAAtI,IAAA7E,KAAA+H,WAGA9I,IAAA,iBACAZ,MAAA,WACA2B,KAAAoN,iBAAA9M,KAAA4M,KAAAlN,KAAAyL,kBAAAzL,KAAAK,IAAA,GAEA,IAAAgN,KACAA,EAAAlD,KAAA,KACA,QAAAxL,EAAA,GAA4BA,GAAA,IAAUA,IAAA,CACtC,IAAA2O,EAAA3J,EAAA3B,qBAAAhC,KAAAoN,iBAAAzO,EAAA,IACA0O,EAAAlD,MAAAmD,EAAA5M,EAAA4M,EAAA3M,GAAAiM,KAAA,UACA,IAAAjO,GACA0O,EAAAlD,KAAA,KAGAkD,EAAAlD,KAAA,KACA,QAAA/G,EAAA,IAA8BA,GAAA,IAAWA,IAAA,CACzC,IAAAoK,EAAA7J,EAAA3B,qBAAAhC,KAAAoN,iBAAAhK,EAAA,IACAiK,EAAAlD,MAAAqD,EAAA9M,EAAA8M,EAAA7M,GAAAiM,KAAA,UACA,KAAAxJ,GACAiK,EAAAlD,KAAA,KAIAnK,KAAAyN,WAAA,IAAAjK,EAAApC,QAAAsM,MACA1M,KAAAqM,EAAAT,KAAA,IACAlM,EAAAV,KAAAO,GACAI,EAAAX,KAAAQ,GACA0H,OAAAlI,KAAAiM,UACA7D,YAAA,IACA1D,KAAA,cAGA1E,KAAAmN,YAAAtI,IAAA7E,KAAAyN,eAGAxO,IAAA,QACAZ,MAAA,gBAGAsR,EApcA,GAucAvR,EAAAgD,QAAAuO,gCCnfAzR,OAAAC,eAAAC,EAAA,cACAC,MAAA,OAEAD,EAAAyL,YACAC,MAAA,QACAI,MAAA,gFCCA,WAAegJ,GAAgB,iBAC/BC,OAAAC,KAAA,WAEA,IAAApS,EAAezB,EAAS,IACxB8T,EAAA,IAAoBC,EAAAJ,EAAQK,SAAAC,cAAA,oBAC5BH,EAAAI,SAAA,kCACAJ,EAAApJ,OAAAjJ,GACA0S,WAAA,OAES,MAER","file":"assets/js/gauge.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar VisChartBase = function () {\n    function VisChartBase(box, width, height) {\n        _classCallCheck(this, VisChartBase);\n\n        this.box = box;\n\n        this.customWidth = width;\n        this.customHeight = height;\n\n        this.width = width || box.offsetWidth;\n        this.height = height || box.offsetHeight;\n\n        this.max = Math.max(this.width, this.height);\n\n        this.cx = this.max / 2;\n        this.cy = this.max / 2;\n        this.cpoint = { x: this.cx, y: this.cy };\n\n        this.totalAngle = 360;\n        this.angleOffset = 0;\n        this.countAngle = 0;\n\n        this.colors = ['#f12575', '#da432e', '#f3a42d', '#19af89', '#24a3ea', '#b56be8'];\n    }\n\n    _createClass(VisChartBase, [{\n        key: 'update',\n        value: function update(data) {\n            this.data = data;\n\n            return this;\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            return this;\n        }\n    }, {\n        key: 'setOptions',\n        value: function setOptions(options) {\n\n            for (var key in options) {\n                this[key] = options[key];\n            }\n\n            this.options = options;\n        }\n    }, {\n        key: 'calcLayoutPosition',\n        value: function calcLayoutPosition() {\n            return this;\n        }\n    }, {\n        key: 'calcDataPosition',\n        value: function calcDataPosition() {\n            return this;\n        }\n    }, {\n        key: 'initDataLayout',\n        value: function initDataLayout() {\n            return this;\n        }\n    }, {\n        key: 'draw',\n        value: function draw() {\n            return this;\n        }\n    }, {\n        key: 'reset',\n        value: function reset() {}\n    }, {\n        key: 'animation',\n        value: function animation() {}\n    }, {\n        key: 'layer',\n        value: function layer() {\n            return this.layer;\n        }\n    }, {\n        key: 'setLayer',\n        value: function setLayer(layer) {\n            this.layer = layer;\n            return this;\n        }\n    }, {\n        key: 'setStage',\n        value: function setStage(stage) {\n            this.stage = stage;\n        }\n    }]);\n\n    return VisChartBase;\n}();\n\nexports.default = VisChartBase;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.pointRectangleIntersection = pointRectangleIntersection;\nexports.pointDistance = pointDistance;\nexports.distanceAngleToPoint = distanceAngleToPoint;\nexports.radians = radians;\nexports.degree = degree;\nexports.intersectRect = intersectRect;\nexports.fixEndAngle = fixEndAngle;\nexports.pointPlus = pointPlus;\n\n/**\n * 判断一个点是否在矩形里面\n * @method  pointRectangleIntersection\n * @param   {point} _p\n * @param   {rect}  _r\n * @return  Boolean\n * @static\n */\nfunction pointRectangleIntersection(p, r) {\n    return p.x >= r.x && p.x <= r.x2 && p.y >= r.y && p.y <= r.y2;\n}\n/**\n * 计算两个坐标点之间的距离\n * @method pointDistance\n * @param   {point} _p1\n * @param   {point} _p2\n * @return  Boolean\n * @static\n */\nfunction pointDistance(_p1, _p2) {\n    var _dx = _p2.x - _p1.x,\n        _dy = _p2.y - _p1.y,\n        _dist = Math.sqrt(_dx * _dx + _dy * _dy);\n    ;\n    return _dist;\n}\n/**\n * 从长度和角度求坐标点\n * @method  distanceAngleToPoint\n * @param  {Number} _distance\n * @param  {Number} _angle\n * @return Point\n * @static\n */\nfunction distanceAngleToPoint(_distance, _angle) {\n    var _radian = _angle * Math.PI / 180;\n    return {\n        x: Math.cos(_radian) * _distance,\n        y: Math.sin(_radian) * _distance\n    };\n}\n/**\n * 从角度获取弧度\n * @method  radians\n * @param   {Number} _angle\n * @return  {Number}\n * @static\n */\nfunction radians(_angle) {\n    return _angle * Math.PI / 180;\n}\n/**\n * 从弧度获取角度\n * @method  degree\n * @param   {Number} _radians\n * @return  {Number}\n * @static\n */\nfunction degree(_radians) {\n    return _radians / Math.PI * 180;\n}\n/**\n * 判断两个矩形是否有交集\n * @method intersectRect\n * @param   {rect_Object}   r1\n * @param   {rect_Object}   r2\n * @return  {Boolean}\n */\nfunction intersectRect(r1, r2) {\n    return !(r2.x > r1.x + r1.width || r2.x + r2.width < r1.x || r2.y > r1.y + r1.height || r2.y + r2.height < r1.y);\n}\n\nfunction fixEndAngle(startAngle, endAngle) {\n    if (endAngle < startAngle) {\n        endAngle += 360;\n    }\n    return endAngle;\n}\n\nfunction pointPlus(p1, p2) {\n    return {\n        x: p1.x + p2.x,\n        y: p1.y + p2.y\n    };\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseFinance = parseFinance;\n\n\n/**\n * 取小数点的N位\n * <br />JS 解析 浮点数的时候，经常出现各种不可预知情况，这个函数就是为了解决这个问题\n * @method  parseFinance\n * @static\n * @param   {number}    _i\n * @param   {int}       _dot  default = 2\n * @return  number\n */\nfunction parseFinance(_i, _dot) {\n  _i = parseFloat(_i) || 0;\n  typeof _dot == 'undefined' && (_dot = 2);\n  _i && (_i = parseFloat(_i.toFixed(_dot)));\n  return _i;\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _geometry = require('../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar PointAt = function () {\n    function PointAt(width, height, point) {\n        _classCallCheck(this, PointAt);\n\n        this.width = width;\n        this.height = height;\n        this.point = point;\n\n        this.cx = this.width / 2;\n        this.cy = this.height / 2;\n\n        this.offsetX = 20;\n        this.offsetY = 20;\n\n        this.colors = ['#f12575', '#da432e', '#f3a42d', '#19af89', '#24a3ea', '#b56be8'];\n\n        this.init();\n    }\n\n    _createClass(PointAt, [{\n        key: 'setDebug',\n        value: function setDebug(stage) {\n            this.stage = stage;\n\n            this.layer = new _konva2.default.Layer();\n\n            var i = 0;\n\n            for (var key in this.rects) {\n\n                var item = this.rects[key];\n                var params = _jsonUtilsx2.default.clone(item);\n                params.fill = this.colors[i % this.colors.length];\n\n                var rect = new _konva2.default.Rect(params);\n\n                this.layer.add(rect);\n\n                i++;\n            }\n\n            this.stage.add(this.layer);\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            this.leftTop = {\n                x: 0,\n                y: 0,\n                width: this.cx + this.offsetX,\n                height: this.cy + this.offsetY\n            };\n            this.leftTop.x2 = this.leftTop.x + this.leftTop.width;\n            this.leftTop.y2 = this.leftTop.y + this.leftTop.height;\n\n            this.rightTop = {\n                x: this.cx - this.offsetX,\n                y: 0,\n                width: this.cx + this.offsetX,\n                height: this.cy + this.offsetY\n            };\n            this.rightTop.x2 = this.rightTop.x + this.rightTop.width;\n            this.rightTop.y2 = this.rightTop.y + this.rightTop.height;\n\n            this.leftBottom = {\n                x: 0,\n                y: this.cy - this.offsetY,\n                width: this.cx + this.offsetX,\n                height: this.cy + this.offsetY\n            };\n            this.leftBottom.x2 = this.leftBottom.x + this.leftBottom.width;\n            this.leftBottom.y2 = this.leftBottom.y + this.leftBottom.height;\n\n            this.rightBottom = {\n                x: this.cx - this.offsetX,\n                y: this.cy - this.offsetY,\n                width: this.cx + this.offsetX,\n                height: this.cy + this.offsetY\n            };\n            this.rightBottom.x2 = this.rightBottom.x + this.rightBottom.width;\n            this.rightBottom.y2 = this.rightBottom.y + this.rightBottom.height;\n\n            this.rects = {\n                leftTop: this.leftTop,\n                rightTop: this.rightTop,\n                leftBottom: this.leftBottom,\n                rightBottom: this.rightBottom\n            };\n        }\n    }, {\n        key: 'isLeftTop',\n        value: function isLeftTop() {\n            return geometry.pointRectangleIntersection(this.point, this.leftTop) ? 1 : 0;\n        }\n    }, {\n        key: 'isRightTop',\n        value: function isRightTop() {\n            return geometry.pointRectangleIntersection(this.point, this.rightTop) ? 2 : 0;\n        }\n    }, {\n        key: 'isRightBottom',\n        value: function isRightBottom() {\n            return geometry.pointRectangleIntersection(this.point, this.rightBottom) ? 4 : 0;\n        }\n    }, {\n        key: 'isLeftBottom',\n        value: function isLeftBottom() {\n            return geometry.pointRectangleIntersection(this.point, this.leftBottom) ? 8 : 0;\n        }\n    }, {\n        key: 'auto',\n        value: function auto() {\n            var r = this.isLeftTop() + this.isRightTop() + this.isRightBottom() + this.isLeftBottom();\n            return r;\n        }\n    }]);\n\n    return PointAt;\n}();\n\nexports.default = PointAt;\n\n\nPointAt.DIRE_NAME = {\n    leftTop: 1,\n    rightTop: 2,\n    rightBottom: 4,\n    leftBottom: 8,\n\n    topCenter: 3,\n    rightMid: 6,\n    bottomCenter: 12,\n    leftMid: 9\n};\n\nPointAt.DIRE_NUM = {\n    '1': 'leftTop',\n    '2': 'rightTop',\n    '4': 'rightBottom',\n    '8': 'leftBottom',\n\n    '3': 'topCenter',\n    '6': 'rightMid',\n    '9': 'leftMid',\n    '12': 'bottomCenter'\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _vischartbase = require('../common/vischartbase.js');\n\nvar _vischartbase2 = _interopRequireDefault(_vischartbase);\n\nvar _geometry = require('../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _utils = require('../common/utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar IconRound = function (_VisChartBase) {\n    _inherits(IconRound, _VisChartBase);\n\n    function IconRound(box, width, height) {\n        _classCallCheck(this, IconRound);\n\n        var _this = _possibleConstructorReturn(this, (IconRound.__proto__ || Object.getPrototypeOf(IconRound)).call(this, box, width, height));\n\n        _this.name = 'IconRound ' + Date.now();\n\n        _this.outRadius = 6;\n        _this.inRadius = 2;\n\n        _this.color = '#ffffff';\n\n        _this.max = 1.1;\n        _this.min = 0.8;\n\n        _this.step = .006;\n        _this.cur = 1;\n\n        _this.isplus = 1;\n\n        _this.init();\n        return _this;\n    }\n\n    _createClass(IconRound, [{\n        key: 'init',\n        value: function init() {\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(point) {\n            this.point = point;\n\n            this.group = new _konva2.default.Group({\n                x: this.point.x + this.cx,\n                y: this.point.y + this.cy,\n                width: this.outRadius * 2,\n                height: this.outRadius * 2\n            });\n\n            this.circle = new _konva2.default.Circle({\n                radius: this.inRadius,\n                fill: this.color,\n                stroke: this.color,\n                x: 0,\n                y: 0\n            });\n\n            this.outcircle = new _konva2.default.Circle({\n                radius: this.outRadius,\n                fill: '#ffffff00',\n                stroke: this.color,\n                strokeWidth: 1,\n                x: 0,\n                y: 0\n            });\n\n            this.group.add(this.circle);\n            this.group.add(this.outcircle);\n\n            this.group.scale({ x: this.cur, y: this.cur });\n\n            this.layer.add(this.group);\n\n            //window.requestAnimationFrame( ()=>{ this.animation() } );\n        }\n    }, {\n        key: 'reset',\n        value: function reset() {}\n    }, {\n        key: 'animation',\n        value: function animation() {\n            var _this2 = this;\n\n            if (this.plus) {\n                this.cur = this.cur + this.step;\n\n                if (this.cur > this.max) {\n                    this.cur = this.max;\n                    this.plus = 0;\n                }\n            } else {\n                this.cur = this.cur - this.step;\n                if (this.cur < this.min) {\n                    this.cur = this.min;\n                    this.plus = 1;\n                }\n            }\n\n            this.group.scale({ x: this.cur, y: this.cur });\n\n            this.stage.add(this.layer);\n\n            window.requestAnimationFrame(function () {\n                _this2.animation();\n            });\n        }\n    }, {\n        key: 'initDataLayout',\n        value: function initDataLayout() {}\n    }, {\n        key: 'calcDataPosition',\n        value: function calcDataPosition() {}\n    }, {\n        key: 'animationLine',\n        value: function animationLine() {}\n    }, {\n        key: 'calcLayoutPosition',\n        value: function calcLayoutPosition() {}\n    }]);\n\n    return IconRound;\n}(_vischartbase2.default);\n\nexports.default = IconRound;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _vischartbase = require('./common/vischartbase.js');\n\nvar _vischartbase2 = _interopRequireDefault(_vischartbase);\n\nvar _index = require('./dount/index.js');\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _index3 = require('./gauge/index.js');\n\nvar _index4 = _interopRequireDefault(_index3);\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _constant = require('./common/constant.js');\n\nvar constant = _interopRequireWildcard(_constant);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar VisChart = function (_VisChartBase) {\n    _inherits(VisChart, _VisChartBase);\n\n    function VisChart(box, width, height) {\n        _classCallCheck(this, VisChart);\n\n        var _this = _possibleConstructorReturn(this, (VisChart.__proto__ || Object.getPrototypeOf(VisChart)).call(this, box, width, height));\n\n        _this.ins = [];\n        _this.images = [];\n\n        _this.rateWidth = 330;\n        _this.rateHeight = 330;\n\n        _this.init();\n        return _this;\n    }\n\n    _createClass(VisChart, [{\n        key: 'init',\n        value: function init() {\n            //console.log( 'VisChartBase init', Date.now(), this.width, this.height, this.canvas );\n\n            if (!this.box) return;\n\n            this.stage = new _konva2.default.Stage({\n                container: this.box,\n                width: this.width,\n                height: this.height\n            });\n\n            this.customWidth && (this.box.style.width = this.customWidth + 'px');\n            this.customHeight && (this.box.style.height = this.customHeight + 'px');\n\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(data) {\n            var _this2 = this;\n\n            this.data = data;\n\n            this.loadImage();\n\n            if (!_jsonUtilsx2.default.jsonInData(this.data, 'series')) return;\n\n            //console.log( ju );\n\n            this.stage.removeChildren();\n\n            //console.log( 'update data', data );\n\n            this.data.series.map(function (val, key) {\n                //console.log( val, constant );\n                var ins = void 0;\n\n                switch (val.type) {\n                    case constant.CHART_TYPE.dount:\n                        {\n                            ins = new _index2.default(_this2.box, _this2.width, _this2.height);\n                            _this2.options && ins.setOptions(_this2.options);\n                            ins.setStage(_this2.stage);\n                            ins.update(_jsonUtilsx2.default.clone(val), _jsonUtilsx2.default.clone(_this2.data));\n                            break;\n                        }\n                    case constant.CHART_TYPE.gauge:\n                        {\n                            ins = new _index4.default(_this2.box, _this2.width, _this2.height);\n                            _this2.options && ins.setOptions(_this2.options);\n                            ins.setStage(_this2.stage);\n                            ins.update(_jsonUtilsx2.default.clone(val), _jsonUtilsx2.default.clone(_this2.data));\n                            break;\n                        }\n                }\n\n                if (ins) {\n                    _this2.ins.push(ins);\n                }\n            });\n\n            return this;\n        }\n    }, {\n        key: 'addImage',\n        value: function addImage(imgUrl, width, height) {\n            var offsetX = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n            var offsetY = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n\n            //console.log( this.rateWidth, this.width );\n            var rateW = this.width / this.rateWidth,\n                rateH = this.height / this.rateHeight;\n            this.images.push({\n                url: imgUrl,\n                width: width * rateW,\n                height: height * rateH,\n                offsetX: offsetX,\n                offsetY: offsetY\n            });\n\n            return this;\n        }\n    }, {\n        key: 'loadImage',\n        value: function loadImage() {\n            var _this3 = this;\n\n            if (this.iconLayer) this.iconLayer.remove();\n            this.iconLayer = new _konva2.default.Layer();\n\n            this.images.map(function (item) {\n\n                var img = new Image();\n                img.onload = function () {\n                    var width = item.width || img.width,\n                        height = item.height || img.height;\n\n                    var icon = new _konva2.default.Image({\n                        image: img,\n                        x: _this3.cx - width / 2 + item.offsetX,\n                        y: _this3.cy - height / 2 + item.offsetY,\n                        width: width,\n                        height: height\n                    });\n\n                    _this3.iconLayer.add(icon);\n\n                    _this3.stage.add(_this3.iconLayer);\n                };\n                img.src = item.url;\n            });\n\n            return this;\n        }\n    }]);\n\n    return VisChart;\n}(_vischartbase2.default);\n\nexports.default = VisChart;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _vischartbase = require('../common/vischartbase.js');\n\nvar _vischartbase2 = _interopRequireDefault(_vischartbase);\n\nvar _geometry = require('../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _pointat = require('../common/pointat.js');\n\nvar _pointat2 = _interopRequireDefault(_pointat);\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _utils = require('../common/utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nvar _round = require('../icon/round.js');\n\nvar _round2 = _interopRequireDefault(_round);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Dount = function (_VisChartBase) {\n    _inherits(Dount, _VisChartBase);\n\n    function Dount(box, width, height) {\n        _classCallCheck(this, Dount);\n\n        var _this = _possibleConstructorReturn(this, (Dount.__proto__ || Object.getPrototypeOf(Dount)).call(this, box, width, height));\n\n        _this.name = 'Dount ' + Date.now();\n\n        _this.outPercent = .53;\n        _this.inPercent = .37;\n\n        _this.circleLinePercent = .34;\n        _this.circlePercent = .31;\n\n        _this.animationStep = 8;\n        _this.angleStep = 5;\n\n        _this.textHeight = 26;\n        _this.lineOffset = 40;\n\n        _this.path = [];\n\n        _this.textOffset = 4;\n\n        _this.lineColor = '#24a3ea';\n\n        _this.init();\n        return _this;\n    }\n\n    _createClass(Dount, [{\n        key: 'init',\n        value: function init() {\n            this.calcLayoutPosition();\n\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(data, allData) {\n            this.data = data;\n            this.allData = allData;\n\n            if (!_jsonUtilsx2.default.jsonInData(this.data, 'data')) return;\n\n            this.calcDataPosition();\n            this.initDataLayout();\n\n            console.log('dount update', this.data, this, utils);\n\n            this.animation();\n\n            return this;\n        }\n    }, {\n        key: 'reset',\n        value: function reset() {\n            this.path.map(function (val) {\n                val.pathData = [];\n            });\n        }\n    }, {\n        key: 'animation',\n        value: function animation() {\n            var _this2 = this;\n\n            if (this.isDone) return;\n\n            var tmp = void 0,\n                tmppoint = void 0,\n                step = this.angleStep;\n\n            this.countAngle += this.animationStep;\n            //this.countAngle += 350;\n\n            if (this.countAngle >= this.totalAngle) {\n                this.countAngle = this.totalAngle;\n                this.isDone = 1;\n            }\n\n            this.reset();\n\n            for (var i = this.path.length - 1; i >= 0; i--) {\n                //for( let i = 0; i < this.path.length; i++ ){\n                //let i = 2;\n                var item = this.path[i];\n\n                //console.log( i, item );\n\n                var tmpAngle = this.countAngle;\n\n                if (tmpAngle >= item.itemData.endAngle) {\n                    tmpAngle = item.itemData.endAngle;\n                }\n\n                if (tmpAngle < item.itemData.startAngle) continue;\n\n                item.pathData.push('M');\n                for (var _i = item.itemData.startAngle;; _i += step) {\n                    if (_i >= tmpAngle) _i = tmpAngle;\n\n                    tmppoint = tmp = geometry.distanceAngleToPoint(this.outRadius, _i);\n                    item.pathData.push([tmppoint.x, tmppoint.y].join(',') + ',');\n                    if (_i == item.itemData.startAngle) item.pathData.push('L');\n\n                    if (_i >= tmpAngle) break;\n                }\n                for (var _i2 = tmpAngle;; _i2 -= step) {\n                    if (_i2 <= item.itemData.startAngle) _i2 = item.itemData.startAngle;\n\n                    tmppoint = tmp = geometry.distanceAngleToPoint(this.inRadius, _i2);\n                    item.pathData.push([tmppoint.x, tmppoint.y].join(',') + ',');\n                    if (_i2 == item.itemData.startAngle) break;\n                }\n\n                item.pathData.push('z');\n\n                item.path.setData(item.pathData.join(''));\n            }\n            this.layer.map(function (val, key) {\n                _this2.stage.add(val);\n                val.setZIndex(_this2.layer.length - key);\n            });\n\n            window.requestAnimationFrame(function () {\n                _this2.animation();\n            });\n\n            if (this.isDone) {\n                window.requestAnimationFrame(function () {\n                    _this2.animationLine();\n                });\n            }\n        }\n    }, {\n        key: 'drawCircle',\n        value: function drawCircle() {\n            this.circleRadius = Math.ceil(this.circlePercent * this.max / 2);\n\n            this.circle = new _konva2.default.Circle({\n                x: this.cx,\n                y: this.cy,\n                radius: this.circleRadius,\n                stroke: this.lineColor,\n                strokeWidth: 2.5,\n                fill: '#ffffff00'\n            });\n            this.layoutLayer.add(this.circle);\n        }\n    }, {\n        key: 'drawCircleLine',\n        value: function drawCircleLine() {\n            this.circleLineRadius = Math.ceil(this.circleLinePercent * this.max / 2);\n\n            var points = [];\n            points.push('M');\n            for (var i = 90; i <= 180; i++) {\n                var tmp = geometry.distanceAngleToPoint(this.circleLineRadius, i);\n                points.push([tmp.x, tmp.y].join(',') + ',');\n                if (i == 90) {\n                    points.push('L');\n                }\n            }\n            points.push('M');\n            for (var _i3 = 270; _i3 <= 360; _i3++) {\n                var _tmp = geometry.distanceAngleToPoint(this.circleLineRadius, _i3);\n                points.push([_tmp.x, _tmp.y].join(',') + ',');\n                if (_i3 == 270) {\n                    points.push('L');\n                }\n            }\n\n            this.circleLine = new _konva2.default.Path({\n                data: points.join(''),\n                x: this.cx,\n                y: this.cy,\n                stroke: this.lineColor,\n                strokeWidth: 2.5,\n                fill: '#ffffff00'\n            });\n\n            this.layoutLayer.add(this.circleLine);\n        }\n    }, {\n        key: 'initDataLayout',\n        value: function initDataLayout() {\n            var _this3 = this;\n\n            this.layer = [];\n            this.path = [];\n            this.line = [];\n\n            this.layoutLayer = new _konva2.default.Layer();\n\n            this.drawCircle();\n            this.drawCircleLine();\n\n            this.stage.add(this.layoutLayer);\n\n            this.data.data.map(function (val, key) {\n                var color = _this3.colors[key % _this3.colors.length];\n\n                if (_jsonUtilsx2.default.jsonInData(val, 'itemStyle.color')) {\n                    //path.fill( val.itemStyle.color );\n                    color = val.itemStyle.color;\n                }\n\n                var path = new _konva2.default.Path({\n                    x: _this3.cx,\n                    y: _this3.cy,\n                    strokeWidth: 1,\n                    stroke: color,\n                    data: '',\n                    fill: color\n                });\n\n                /*\n                console.log( \n                    key % this.colors.length\n                    , this.colors[ key % this.colors.length] \n                );\n                */\n\n                var tmp = {\n                    path: path,\n                    pathData: [],\n                    itemData: val\n                };\n\n                _this3.path.push(tmp);\n\n                path.on('mouseenter', function (evt) {\n                    //console.log( 'path mouseenter', Date.now() );\n                });\n\n                path.on('mouseleave', function () {\n                    //console.log( 'path mouseleave', Date.now() );\n                });\n\n                var line = new _konva2.default.Line({\n                    x: _this3.cx,\n                    y: _this3.cy,\n                    points: [0, 0, 0, 0],\n                    stroke: '#ffffff',\n                    strokeWidth: 2\n                });\n                _this3.line.push(line);\n\n                var layer = new _konva2.default.Layer();\n                layer.add(path);\n                layer.add(line);\n\n                _this3.layer.push(layer);\n            });\n            this.layer.map(function (val, key) {\n                _this3.stage.add(val);\n            });\n\n            /*\n            window.requestAnimationFrame( ()=>{ this.tmpfunc() } );\n            */\n\n            return this;\n        }\n    }, {\n        key: 'calcDataPosition',\n        value: function calcDataPosition() {\n            var _this4 = this;\n\n            if (!this.data) return;\n\n            var total = 0,\n                tmp = 0;\n\n            this.data.data.map(function (val) {\n                total += val.value;\n            });\n            this.total = total;\n\n            this.data.data.map(function (val) {\n                val._percent = utils.parseFinance(val.value / total);\n                tmp = utils.parseFinance(tmp + val._percent);\n                val._totalPercent = tmp;\n\n                val.percent = parseInt(val._percent * 100);\n\n                val.endAngle = _this4.totalAngle * val._totalPercent;\n            });\n\n            //修正浮点数精确度\n            if (this.data.data.length) {\n                var item = this.data.data[this.data.data.length - 1];\n                tmp = tmp - item._percent;\n\n                item._percent = 1 - tmp;\n                item.percent = parseInt(item._percent * 100);\n                item._totalPercent = 1;\n                item.endAngle = this.totalAngle;\n            }\n            //计算开始角度, 计算指示线的2端\n            this.data.data.map(function (val, key) {\n                if (!key) {\n                    val.startAngle = 0;\n                } else {\n                    val.startAngle = _this4.data.data[key - 1].endAngle;\n                }\n\n                val.midAngle = val.startAngle + (val.endAngle - val.startAngle) / 2;\n\n                val.lineStart = geometry.distanceAngleToPoint(_this4.outRadius, val.midAngle);\n                val.lineEnd = geometry.distanceAngleToPoint(_this4.outRadius + _this4.lineLength, val.midAngle);\n\n                val.textPoint = geometry.distanceAngleToPoint(_this4.outRadius + _this4.lineLength, val.midAngle);\n\n                val.pointDirection = new _pointat2.default(_this4.width, _this4.height, geometry.pointPlus(val.textPoint, _this4.cpoint));\n            });\n        }\n    }, {\n        key: 'animationLine',\n        value: function animationLine() {\n            var _this5 = this;\n\n            if (this.lineLengthCount >= this.lineLength) {\n                return;\n            }\n\n            this.lineLengthCount += this.lineLengthStep;\n\n            if (this.lineLengthCount >= this.lineLength) {\n                this.lineLengthCount = this.lineLength;\n            }\n\n            for (var i = 0; i < this.path.length; i++) {\n                var path = this.path[i];\n                var layer = this.layer[i];\n\n                var lineEnd = geometry.distanceAngleToPoint(this.outRadius + this.lineLengthCount, path.itemData.midAngle);\n\n                var line = this.line[i];\n                line.points([path.itemData.lineStart.x, path.itemData.lineStart.y, lineEnd.x, lineEnd.y]);\n\n                if (this.lineLengthCount >= this.lineLength) {\n\n                    this.addIcon(path, layer);\n                    this.addText(path, layer);\n                } else {\n                    window.requestAnimationFrame(function () {\n                        _this5.animationLine();\n                    });\n                }\n\n                this.stage.add(layer);\n            }\n        }\n    }, {\n        key: 'addIcon',\n        value: function addIcon(path, layer) {\n            var icon = new _round2.default(this.box, this.width, this.height);\n            icon.setOptions({\n                stage: this.stage,\n                layer: layer\n            });\n            icon.update(path.itemData.lineEnd);\n        }\n    }, {\n        key: 'addText',\n        value: function addText(path, layer) {\n            var text = new _konva2.default.Text({\n                x: 0,\n                y: 0,\n                text: path.itemData.percent + '%',\n                fill: '#a3a7f3',\n                fontFamily: 'HuXiaoBoKuHei',\n                fontSize: 31\n            });\n            var textX = this.cx + path.itemData.textPoint.x,\n                textY = this.cy + path.itemData.textPoint.y,\n                direct = path.itemData.pointDirection.auto();\n\n            //console.log( 'direct', direct );\n            switch (direct) {\n                case _pointat2.default.DIRE_NAME.leftTop:\n                    {\n                        textY -= text.textHeight + this.textOffset;\n                        textX -= text.textWidth / 2;\n                        break;\n                    }\n                case _pointat2.default.DIRE_NAME.rightTop:\n                    {\n                        textY -= text.textHeight + this.textOffset;\n                        break;\n                    }\n                case _pointat2.default.DIRE_NAME.topCenter:\n                    {\n                        textY -= text.textHeight + this.textOffset;\n                        textX -= text.textWidth / 2;\n                        break;\n                    }\n                case _pointat2.default.DIRE_NAME.bottomCenter:\n                    {\n                        textX -= text.textWidth / 2;\n                        break;\n                    }\n                case _pointat2.default.DIRE_NAME.rightMid:\n                    {\n                        if (textX + text.textWidth >= this.width) {\n                            textX = this.width - text.textWidth - 5;\n                        }\n                        break;\n                    }\n                case _pointat2.default.DIRE_NAME.rightBottom:\n                    {\n                        break;\n                    }\n                case _pointat2.default.DIRE_NAME.leftBottom:\n                    {\n                        textX -= text.textWidth / 2;\n                        break;\n                    }\n                case _pointat2.default.DIRE_NAME.leftMid:\n                    {\n                        textX -= text.textWidth;\n                        if (textX < 1) textX = 1;\n                        textY += this.textOffset;\n                        break;\n                    }\n\n            }\n\n            text.x(textX);\n            text.y(textY);\n            layer.add(text);\n        }\n    }, {\n        key: 'calcLayoutPosition',\n        value: function calcLayoutPosition() {\n            //console.log( 'calcLayoutPosition', Date.now() );\n\n            this.outRadius = Math.ceil(this.outPercent * this.max / 2);\n            this.inRadius = Math.ceil(this.inPercent * this.max / 2);\n\n            this.lineLength = (Math.min(this.width, this.height) - this.outRadius * 2) / 2 - this.lineOffset;\n            this.lineLengthCount = 1;\n            this.lineLengthStep = .5;\n\n            return this;\n        }\n    }]);\n\n    return Dount;\n}(_vischartbase2.default);\n\nexports.default = Dount;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _vischartbase = require('../common/vischartbase.js');\n\nvar _vischartbase2 = _interopRequireDefault(_vischartbase);\n\nvar _geometry = require('../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _pointat = require('../common/pointat.js');\n\nvar _pointat2 = _interopRequireDefault(_pointat);\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _utils = require('../common/utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nvar _round = require('../icon/round.js');\n\nvar _round2 = _interopRequireDefault(_round);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Gauge = function (_VisChartBase) {\n    _inherits(Gauge, _VisChartBase);\n\n    function Gauge(box, width, height) {\n        _classCallCheck(this, Gauge);\n\n        var _this = _possibleConstructorReturn(this, (Gauge.__proto__ || Object.getPrototypeOf(Gauge)).call(this, box, width, height));\n\n        _this.name = 'Gauge' + Date.now();\n\n        _this.roundRadiusPercent = .085;\n\n        _this.lineColor = '#596ea7';\n\n        _this.circleLinePercent = .26;\n        _this.circlePercent = .28;\n\n        _this.arcLinePercent = .39 / 2;\n\n        _this.arcOutPercent = .38 / 2;\n        _this.arcInPercent = .305 / 2;\n\n        _this.arcLabelLength = 6;\n        _this.arcTextLength = 20;\n\n        _this.arcAngle = 280;\n        _this.part = 22;\n        _this.arcTotal = 1100;\n\n        _this.textOffset = 0;\n\n        _this.arcOffset = 90 + (360 - _this.arcAngle) / 2;\n        _this.partLabel = _this.part / 2;\n        _this.partAngle = _this.arcAngle / _this.part;\n        _this.partNum = _this.arcTotal / _this.part;\n\n        _this.textOffsetX = -1;\n        _this.textOffsetY = -8;\n        _this.textLineLength = 6;\n\n        _this.textRectWidthPercent = .5;\n        _this.textRectHeightPercent = .11;\n\n        _this.init();\n        return _this;\n    }\n\n    _createClass(Gauge, [{\n        key: 'init',\n        value: function init() {\n            this.roundRadius = this.width * this.roundRadiusPercent;\n\n            this.arcInRadius = this.width * this.arcInPercent;\n            this.arcOutRadius = this.width * this.arcOutPercent;\n\n            this.arcLineRaidus = Math.ceil(this.arcLinePercent * this.max);\n\n            this.textWidth = this.textRectWidthPercent * this.width;\n            this.textHeight = this.textRectHeightPercent * this.width;\n            this.textX = this.cx - this.textWidth / 2;\n            this.textY = this.cy + this.arcLineRaidus + this.arcTextLength / 2 + 2;\n\n            this.arcPartLineAr = [];\n            this.arcOutlinePartAr = [];\n            this.textAr = [];\n            for (var i = 0; i <= this.part; i++) {\n                var start = void 0,\n                    end = void 0,\n                    angle = void 0;\n                angle = i * this.partAngle + this.arcOffset;\n\n                if (i && i < this.part) {\n                    start = geometry.distanceAngleToPoint(this.arcInRadius, angle);\n                    end = geometry.distanceAngleToPoint(this.arcOutRadius, angle);\n\n                    this.arcPartLineAr.push('M');\n                    this.arcPartLineAr.push([start.x, start.y].join(','));\n                    this.arcPartLineAr.push('L');\n                    this.arcPartLineAr.push([end.x, end.y].join(','));\n                }\n\n                start = geometry.distanceAngleToPoint(this.arcLineRaidus, angle);\n                end = geometry.distanceAngleToPoint(this.arcLineRaidus + this.arcLabelLength, angle);\n\n                this.arcOutlinePartAr.push('M');\n                this.arcOutlinePartAr.push([start.x, start.y].join(','));\n                this.arcOutlinePartAr.push('L');\n                this.arcOutlinePartAr.push([end.x, end.y].join(','));\n\n                if (!(i * this.partNum % 100) || i === 0) {\n                    var angleOffset = 8,\n                        lengthOffset = 0;\n\n                    if (i === 0) {\n                        angleOffset = 1;\n                    }\n\n                    if (i >= 19) {\n                        angleOffset = 14;\n                    }\n                    if (i >= 21) {\n                        angleOffset = 18;\n                    }\n                    var text = {\n                        text: i * this.partNum,\n                        angle: angle - angleOffset,\n                        point: geometry.distanceAngleToPoint(this.arcLineRaidus + this.arcTextLength + lengthOffset, angle - angleOffset)\n                    };\n                    text.textPoint = new _pointat2.default(this.width, this.height, geometry.pointPlus(text.point, this.cpoint));\n\n                    this.textAr.push(text);\n                }\n            }\n        }\n    }, {\n        key: 'update',\n        value: function update(data, allData) {\n            this.stage.removeChildren();\n\n            this.initDataLayout();\n        }\n    }, {\n        key: 'drawText',\n        value: function drawText() {\n\n            this.totalText = new _konva2.default.Text({\n                text: \"2345678\",\n                x: this.cx,\n                y: this.textY,\n                fontSize: 26,\n                fontFamily: 'HuXiaoBoKuHei',\n                fill: '#ffffff',\n                fontStyle: 'italic'\n            });\n            this.totalText.x(this.cx - this.totalText.textWidth / 2);\n            this.totalText.y(this.textY + 5);\n\n            this.layoutLayer.add(this.totalText);\n        }\n    }, {\n        key: 'drawTextRect',\n        value: function drawTextRect() {\n            this.textRect = new _konva2.default.Rect({\n                fill: '#596ea7',\n                stroke: '#ffffff00',\n                strokeWidth: 0,\n                opacity: .3,\n                width: this.textWidth,\n                height: this.textHeight,\n                x: this.textX,\n                y: this.textY\n            });\n\n            var points = [];\n            points.push('M', [this.textX, this.textY + this.textLineLength].join(','));\n            points.push('L', [this.textX, this.textY].join(','));\n            points.push('L', [this.textX + this.textLineLength, this.textY].join(','));\n\n            points.push('M', [this.textX + this.textWidth - this.textLineLength, this.textY].join(','));\n            points.push('L', [this.textX + this.textWidth, this.textY].join(','));\n            points.push('L', [this.textX + this.textWidth, this.textY + this.textLineLength].join(','));\n\n            points.push('M', [this.textX + this.textWidth, this.textY + this.textHeight - this.textLineLength].join(','));\n            points.push('L', [this.textX + this.textWidth, this.textY + this.textHeight].join(','));\n            points.push('L', [this.textX + this.textWidth - this.textLineLength, this.textY + this.textHeight].join(','));\n\n            points.push('M', [this.textX + this.textLineLength, this.textY + this.textHeight].join(','));\n            points.push('L', [this.textX, this.textY + this.textHeight].join(','));\n            points.push('L', [this.textX, this.textY + this.textHeight - this.textLineLength].join(','));\n\n            this.textLinePath = new _konva2.default.Path({\n                data: points.join(''),\n                stroke: this.lineColor,\n                strokeWidth: 1\n            });\n\n            this.layoutLayer.add(this.textLinePath);\n            this.layoutLayer.add(this.textRect);\n        }\n    }, {\n        key: 'drawArcText',\n        value: function drawArcText() {\n            var _this2 = this;\n\n            if (!(this.textAr && this.textAr.length)) return;\n\n            this.textAr.map(function (val) {\n                var text = new _konva2.default.Text({\n                    x: val.point.x + _this2.cx,\n                    y: val.point.y + _this2.cy,\n                    text: val.text + '',\n                    fontSize: 11\n                    //, rotation: val.angle\n                    , fontFamily: 'MicrosoftYaHei',\n                    fill: _this2.lineColor\n                });\n                text.rotation(val.angle + 90);\n\n                _this2.layoutLayer.add(text);\n            });\n        }\n    }, {\n        key: 'drawArcLine',\n        value: function drawArcLine() {\n\n            var points = [];\n            points.push('M');\n            for (var i = this.arcOffset; i <= this.arcOffset + this.arcAngle; i += 0.5) {\n                var tmp = geometry.distanceAngleToPoint(this.arcLineRaidus, i);\n                points.push([tmp.x, tmp.y].join(',') + ',');\n                if (i == 90) {\n                    points.push('L');\n                }\n            }\n\n            this.arcLine = new _konva2.default.Path({\n                data: points.join(''),\n                x: this.cx,\n                y: this.cy,\n                stroke: this.lineColor,\n                strokeWidth: 1,\n                fill: '#ffffff00'\n            });\n\n            this.arcPartLine = new _konva2.default.Path({\n                data: this.arcPartLineAr.join(''),\n                x: this.cx,\n                y: this.cy,\n                stroke: '#00000088',\n                strokeWidth: 1,\n                fill: '#ffffff00'\n            });\n\n            this.arcOutlinePart = new _konva2.default.Path({\n                data: this.arcOutlinePartAr.join(''),\n                x: this.cx,\n                y: this.cy,\n                stroke: this.lineColor,\n                strokeWidth: 1,\n                fill: '#ffffff00'\n            });\n\n            this.layoutLayer.add(this.arcLine);\n            this.layoutLayer.add(this.arcPartLine);\n            this.layoutLayer.add(this.arcOutlinePart);\n        }\n    }, {\n        key: 'drawArc',\n        value: function drawArc() {\n\n            var params = {\n                x: this.cx,\n                y: this.cy,\n                innerRadius: this.arcInRadius,\n                outerRadius: this.arcOutRadius,\n                angle: this.arcAngle\n                //, fill: 'red'\n                , stroke: '#ffffff00',\n                strokeWidth: 0,\n                rotation: this.arcOffset,\n                fillLinearGradientStartPoint: { x: -50, y: -50 },\n                fillLinearGradientEndPoint: { x: 50, y: 50 },\n                fillLinearGradientColorStops: [0, '#ff9000', .5, '#64b185', 1, '#5a78ca']\n            };\n            this.arc = new _konva2.default.Arc(params);\n\n            this.layoutLayer.add(this.arc);\n        }\n    }, {\n        key: 'initDataLayout',\n        value: function initDataLayout() {\n            var _this3 = this;\n\n            this.layer = new _konva2.default.Layer();\n            this.layoutLayer = new _konva2.default.Layer();\n\n            this.roundLine = new _konva2.default.Circle({\n                x: this.cx,\n                y: this.cy,\n                radius: this.roundRadius,\n                stroke: this.lineColor,\n                strokeWidth: 2.5,\n                fill: 'rgba( 0, 0, 0, .5 )'\n            });\n\n            this.percentText = new _konva2.default.Text({\n                x: this.cx,\n                y: this.cy,\n                text: \"高频\\n攻击\",\n                fontSize: 18,\n                fontFamily: 'HuXiaoBoKuHei',\n                fill: '#ffffff',\n                fontStyle: 'italic'\n            });\n            this.percentText.x(this.cx - this.percentText.textWidth / 2 + this.textOffsetX);\n            this.percentText.y(this.cy - this.percentText.textHeight / 2 + this.textOffsetY);\n\n            /*\n            this.percentSymbolText = new Konva.Text( {\n                x: this.cx\n                , y: this.cy\n                , text: '%'\n                , fontSize: 17\n                , fontFamily: 'Agency FB'\n                , fill: '#c7d6ff'\n                , fontStyle: 'italic'\n            });\n            this.percentSymbolText.x( this.percentText.attrs.x  + this.percentText.textWidth );\n            this.percentSymbolText.y( this.percentText.attrs.y  + this.percentText.textHeight -  this.percentSymbolText.textHeight - 2 );\n            */\n\n            console.log(this.percentText);\n\n            var wedge = new _konva2.default.Wedge({\n                x: 0,\n                y: -3,\n                radius: 10,\n                angle: 20,\n                fill: '#ff5a00',\n                stroke: '#ff5a00',\n                strokeWidth: 1,\n                rotation: 90\n            });\n\n            var wedge1 = new _konva2.default.Wedge({\n                x: 0,\n                y: -3,\n                radius: 10,\n                angle: 20,\n                fill: '#973500',\n                stroke: '#973500',\n                strokeWidth: 1,\n                rotation: 65\n            });\n\n            var group = new _konva2.default.Group({\n                x: this.cx,\n                y: this.cy\n            });\n\n            group.add(wedge1);\n            group.add(wedge);\n\n            this.angle = -90;\n\n            this.group = group;\n\n            this.layer.add(group);\n            this.layer.add(this.roundLine);\n            this.layer.add(this.percentText);\n            //this.layer.add( this.percentSymbolText );\n\n\n            this.drawCircle();\n            this.drawCircleLine();\n            this.drawArc();\n            this.drawArcLine();\n            this.drawArcText();\n            this.drawTextRect();\n            this.drawText();\n\n            this.stage.add(this.layer);\n            this.stage.add(this.layoutLayer);\n\n            window.requestAnimationFrame(function () {\n                _this3.animation();\n            });\n        }\n    }, {\n        key: 'animation',\n        value: function animation() {\n            this.angle++;\n\n            var point = geometry.distanceAngleToPoint(this.roundRadius + 6, this.angle);\n            this.group.x(this.cx + point.x);\n            this.group.y(this.cy + point.y);\n            this.group.rotation(this.angle + 90);\n            this.group.rotation(this.angle + 90);\n\n            this.stage.add(this.layer);\n\n            //window.requestAnimationFrame( ()=>{ this.animation() } );\n        }\n    }, {\n        key: 'calcDataPosition',\n        value: function calcDataPosition() {}\n    }, {\n        key: 'animationLine',\n        value: function animationLine() {}\n    }, {\n        key: 'addIcon',\n        value: function addIcon(path, layer) {}\n    }, {\n        key: 'addText',\n        value: function addText(path, layer) {}\n    }, {\n        key: 'calcLayoutPosition',\n        value: function calcLayoutPosition() {}\n    }, {\n        key: 'drawCircle',\n        value: function drawCircle() {\n            this.circleRadius = Math.ceil(this.circlePercent * this.max / 2);\n\n            this.circle = new _konva2.default.Circle({\n                x: this.cx,\n                y: this.cy,\n                radius: this.circleRadius,\n                stroke: this.lineColor,\n                strokeWidth: 1,\n                fill: '#ffffff00'\n            });\n            this.layoutLayer.add(this.circle);\n        }\n    }, {\n        key: 'drawCircleLine',\n        value: function drawCircleLine() {\n            this.circleLineRadius = Math.ceil(this.circleLinePercent * this.max / 2);\n\n            var points = [];\n            points.push('M');\n            for (var i = 90; i <= 180; i++) {\n                var tmp = geometry.distanceAngleToPoint(this.circleLineRadius, i + 90);\n                points.push([tmp.x, tmp.y].join(',') + ',');\n                if (i == 90) {\n                    points.push('L');\n                }\n            }\n            points.push('M');\n            for (var _i = 270; _i <= 360; _i++) {\n                var _tmp = geometry.distanceAngleToPoint(this.circleLineRadius, _i + 90);\n                points.push([_tmp.x, _tmp.y].join(',') + ',');\n                if (_i == 270) {\n                    points.push('L');\n                }\n            }\n\n            this.circleLine = new _konva2.default.Path({\n                data: points.join(''),\n                x: this.cx,\n                y: this.cy,\n                stroke: this.lineColor,\n                strokeWidth: 1.5,\n                fill: '#ffffff00'\n            });\n\n            this.layoutLayer.add(this.circleLine);\n        }\n    }, {\n        key: 'reset',\n        value: function reset() {}\n    }]);\n\n    return Gauge;\n}(_vischartbase2.default);\n\nexports.default = Gauge;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar CHART_TYPE = exports.CHART_TYPE = {\n    dount: 'dount',\n    gauge: 'gauge'\n};","\n\nimport VisChart from 'vischart';\n\nimport fontfaceobserver from 'fontfaceobserver';\n\n\n\nlet font = new fontfaceobserver( 'HuXiaoBoKuHei' );\nfont.load().then(function () {\n\n    let data = require( './data/gauge.json' );\n    let dmins = new VisChart( document.querySelector('#twoBox'), 330, 330 );\n        dmins.addImage( './img/rate-out.png', 170, 170, 0, 0 );\n        dmins.update( data ); \n        setTimeout( ()=>{\n            //dmins.update( data ); \n        }, 5000 );\n\n}, function () {\n  console.log('Font is not available');\n});\n\n\n\n"],"sourceRoot":""}
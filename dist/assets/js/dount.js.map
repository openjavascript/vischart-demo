{"version":3,"sources":["webpack:///../vischart/dist/common/vischartbase.js","webpack:///../vischart/dist/geometry/geometry.js","webpack:///../vischart/dist/common/utils.js","webpack:///./src/assets/js/data/base64img.js","webpack:///../vischart/dist/common/pointat.js","webpack:///../vischart/dist/index.js","webpack:///../vischart/dist/dount/index.js","webpack:///../vischart/dist/icon/iconcircle.js","webpack:///../vischart/dist/gauge/index.js","webpack:///../vischart/dist/icon/roundstatetext.js","webpack:///../vischart/dist/common/constant.js","webpack:///../vischart/dist/common/legend.js","webpack:///./src/assets/js/dount.js"],"names":["Object","defineProperty","exports","value","obj","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_konva","__webpack_require__","_konva2","__esModule","default","VisChartBase","box","width","height","instance","TypeError","_classCallCheck","this","name","Date","now","colors","_setSize","destroyList","customWidth","customHeight","offsetWidth","offsetHeight","max","maxSize","Math","min","minSize","cx","cy","cpoint","x","y","totalAngle","angleOffset","countAngle","images","rateWidth","rateHeight","rotationBg","rotationBgCount","rotationBgStep","sizeRate","standSize","data","allData","loadImage","legend","_this","isDestroy","isAnimation","map","item","rotation","stage","add","iconLayer","window","requestAnimationFrame","animationBg","imgUrl","offsetX","arguments","undefined","offsetY","isbase64","rateW","rateH","push","url","_this2","remove","Layer","addDestroy","background","val","addImage","img","Image","onload","icon","image","fixCx","fixCy","offset","src","base64prefix","r","direction","outerHeight","options","layer","animation","setDestroy","destroy","_this3","_len","Array","_key","pointRectangleIntersection","p","x2","y2","pointDistance","_p1","_p2","_dx","_dy","sqrt","pointAngle","angle","atan2","PI","distanceAngleToPoint","_distance","_angle","_radian","cos","sin","radians","degree","_radians","intersectRect","r1","r2","fixEndAngle","startAngle","endAngle","pointPlus","p1","p2","parseFinance","_i","_dot","parseFloat","toFixed","dountBig","dountIn","rateOut","_interopRequireDefault","_jsonUtilsx2","geometry","newObj","hasOwnProperty","call","_interopRequireWildcard","PointAt","point","init","rects","params","clone","fill","rect","Rect","leftTop","rightTop","leftBottom","rightBottom","isLeftTop","isRightTop","isRightBottom","isLeftBottom","DIRE_NAME","topCenter","rightMid","bottomCenter","leftMid","DIRE_NUM","1","2","4","8","3","6","9","12","_get","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","getter","_vischartbase2","_index2","_index4","constant","_legend2","VisChart","_VisChartBase","self","ReferenceError","_possibleConstructorReturn","__proto__","ins","subClass","superClass","create","constructor","setPrototypeOf","_inherits","Stage","container","style","ignoreLegend","jsonInData","clearUpdate","setStage","setOptions","onChange","group","initChart","update","series","type","CHART_TYPE","dount","gauge","setLegend","getLegendData","tmp","disabled","_pointat2","utils","_iconcircle2","Dount","outPercent","inPercent","circleLinePercent","circlePercent","circleLineRotation","circleLineRotationStep","animationStep","angleStep","textHeight","lineOffset","path","textOffset","lineColor","lineRange","lineWidth","lineSpace","lineAngle","lineHeight","lineCurveLength","loopSort","calcLayoutPosition","calcDataPosition","initDataLayout","animationCircleLine","pathData","circleLine","layoutLayer","isDone","reset","tmpAngle","itemData","arc","arcLayer","animationLine","circleRadius","ceil","circle","Circle","radius","stroke","strokeWidth","circleLineRadius","points","join","_tmp","Path","line","drawCircle","drawCircleLine","ii","color","itemStyle","innerRadius","inRadius","outerRadius","outRadius","Arc","Line","_this4","total","_percent","_totalPercent","percent","parseInt","midAngle","lineStart","lineEnd","lineLength","textPoint","pointDirection","fixWidth","fixHeight","autoAngle","lineExpend","tmpPoint","_tmpAngle","_tmpPoint","pre","cur","abs","tmpY","_i2","_pre","_cur","_tmpY","_i3","_pre2","_cur2","_tmpY2","_i4","_pre3","_cur3","_tmpY3","_i5","_pre4","_cur4","_this5","lineLengthCount","lineLengthStep","addText","addIcon","text","Text","fontFamily","fontSize","fontStyle","angleDirect","textWidth","textX","textY","auto","lineLeft","lineRight","IconCircle","step","isplus","Group","outcircle","scale","plus","_roundstatetext2","Gauge","offsetCy","curRate","totalNum","totalNumStep","roundRadiusPercent","arcLinePercent","arcOutPercent","arcInPercent","arcLabelLength","arcTextLength","arcAngle","part","arcTotal","arcOffset","arcOffsetPad","partLabel","partAngle","partNum","textOffsetX","textOffsetY","textLineLength","textRectWidthPercent","textRectHeightPercent","textRoundPercent","textRoundOffsetAngle","textRoundPlusAngle","textRoundMaxAngle","roundStatusRaidus","textRoundAngle","pow","getAttackRatePercent","textRoundRadius","roundRadius","arcInRadius","arcOutRadius","arcLineRaidus","arcPartLineAr","arcOutlinePartAr","textAr","start","end","assign","removeChildren","animationAngle","getAttackRateAngle","updateWedge","rateStep","floor","totalNumCount","animationText","_this6","totalText","tmpTotalText","textRect","opacity","textLinePath","_this7","arcLine","arcPartLine","arcOutlinePart","fillLinearGradientStartPoint","fillLinearGradientEndPoint","fillLinearGradientColorStops","roundLine","percentText","getAttackText","wedge","Wedge","wedge1","drawArc","drawArcLine","drawArcText","drawText","drawTextRect","initRoundText","_this8","_this9","RoundStateText","curColor","circleRaidus","rate","Legend","textColor","iconSpace","curRow","column","space","columnWidth","row","spaceY","rowHeight","label","textStyle","itemWidth","itemHeight","bg","ele","on","bottom","left","right","off","_data_base64img_js__WEBPACK_IMPORTED_MODULE_2__","fontfaceobserver__WEBPACK_IMPORTED_MODULE_1___default","a","load","then","document","querySelector","dmins","vischart__WEBPACK_IMPORTED_MODULE_0___default","setInterval","setTimeout"],"mappings":"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","file":"assets/js/dount.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar VisChartBase = function () {\n    function VisChartBase(box, width, height) {\n        _classCallCheck(this, VisChartBase);\n\n        this.box = box;\n\n        this.name = 'VisChartBase_' + Date.now();\n\n        this.colors = ['#f12575', '#da432e', '#f3a42d', '#19af89', '#24a3ea', '#b56be8'];\n\n        this._setSize(width, height);\n    }\n\n    _createClass(VisChartBase, [{\n        key: '_setSize',\n        value: function _setSize(width, height) {\n\n            this.destroyList = [];\n\n            this.customWidth = width;\n            this.customHeight = height;\n\n            this.width = width || this.box.offsetWidth;\n            this.height = height || this.box.offsetHeight;\n\n            this.max = this.maxSize = Math.max(this.width, this.height);\n            this.min = this.minSize = Math.min(this.width, this.height);\n\n            this.cx = this.width / 2;\n            this.cy = this.height / 2;\n            this.cpoint = { x: this.cx, y: this.cy };\n\n            this.totalAngle = 360;\n            this.angleOffset = 0;\n            this.countAngle = 0;\n\n            this.images = [];\n\n            this.rateWidth = 330;\n            this.rateHeight = 330;\n\n            this.rotationBg = [];\n\n            this.rotationBgCount = 0;\n            this.rotationBgStep = 1;\n\n            this.sizeRate = 1;\n\n            this.standSize = 330;\n\n            if (this.min < this.standSize) {\n                this.sizeRate = this.min / this.standSize;\n            }\n        }\n    }, {\n        key: 'update',\n        value: function update(data, allData) {\n            this.data = data;\n            this.allData = allData;\n\n            this.loadImage();\n\n            console.log(this.isAnimation(), allData);\n\n            return this;\n        }\n    }, {\n        key: 'setLegend',\n        value: function setLegend(legend) {\n            this.legend = legend;\n        }\n    }, {\n        key: 'animation',\n        value: function animation() {}\n    }, {\n        key: 'animationBg',\n        value: function animationBg() {\n            var _this = this;\n\n            //console.log( 'animationBg', Date.now(), this.isDestroy, this.rotationBg.length, this.rotationBgCount );\n            if (this.isDestroy) return;\n            if (!this.rotationBg.length) return;\n            if (!this.isAnimation()) return;\n\n            this.rotationBg.map(function (item) {\n                _this.rotationBgCount = (_this.rotationBgCount - _this.rotationBgStep) % 360;\n                item.rotation(_this.rotationBgCount);\n            });\n\n            this.stage.add(this.iconLayer);\n\n            window.requestAnimationFrame(function () {\n                _this.animationBg();\n            });\n        }\n    }, {\n        key: 'addImage',\n        value: function addImage(imgUrl, width, height) {\n            var offsetX = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n            var offsetY = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n            var rotation = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n            var isbase64 = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;\n\n            //console.log( this.rateWidth, this.width );\n            var rateW = this.min / this.rateWidth,\n                rateH = this.min / this.rateHeight;\n            this.images.push({\n                url: imgUrl,\n                width: width * rateW,\n                height: height * rateH,\n                offsetX: offsetX,\n                offsetY: offsetY,\n                rotation: rotation,\n                isbase64: isbase64\n            });\n\n            return this;\n        }\n\n        /*\n            \"background\": [\n                { \n                    \"url\": \"./img/dount-in.png\"\n                    , \"width\": 120\n                    , \"height\": 120\n                    , \"offsetX\": 0\n                    , \"offsetY\": 1\n                }\n                , { \n                    \"url\": \"./img/dount-big.png\"\n                    , \"width\": 250\n                    , \"height\": 248\n                    , \"offsetX\": 0\n                    , \"offsetY\": 1\n                }\n            ],\n        */\n\n    }, {\n        key: 'loadImage',\n        value: function loadImage() {\n            var _this2 = this;\n\n            if (this.iconLayer) this.iconLayer.remove();\n            this.iconLayer = new _konva2.default.Layer();\n            this.addDestroy(this.iconLayer);\n\n            this.images = [];\n\n            if (this.data && this.data.background && this.data.background.length) {\n                this.data.background.map(function (val) {\n                    _this2.addImage(val.url, val.width, val.height, val.offsetX || 0, val.offsetY || 0, val.rotation || 0, val.isbase64);\n                });\n            }\n\n            this.rotationBg = [];\n\n            this.images.map(function (item) {\n                //console.log( 'item', item );\n\n                var img = new Image();\n                img.onload = function () {\n                    var width = item.width || img.width,\n                        height = item.height || img.height;\n\n                    var icon = new _konva2.default.Image({\n                        image: img,\n                        x: _this2.fixCx() - width / 2 + item.offsetX,\n                        y: _this2.fixCy() - height / 2 + item.offsetY,\n                        width: width,\n                        height: height\n                    });\n                    _this2.addDestroy(icon);\n\n                    _this2.iconLayer.add(icon);\n\n                    if (item.rotation) {\n                        _this2.rotationBg.push(icon);\n                        icon.x(_this2.fixCx() - width / 2 + item.offsetX + width / 2);\n                        icon.y(_this2.fixCy() - height / 2 + item.offsetY + height / 2);\n                        icon.offset({ x: width / 2, y: height / 2 });\n                        if (_this2.rotationBg.length === 1) _this2.animationBg();\n                    }\n                    _this2.stage.add(_this2.iconLayer);\n                };\n                if (item.isbase64) {\n                    img.src = (item.base64prefix || 'data:image/png;base64,') + item.url;\n                } else {\n                    img.src = item.url;\n                }\n            });\n\n            return this;\n        }\n    }, {\n        key: 'hasLegend',\n        value: function hasLegend() {\n            var r = void 0;\n\n            if (this.data && this.data.legend && this.data.legend.data && this.data.legend.data.length) {\n                r = true;\n            }\n\n            return r;\n        }\n    }, {\n        key: 'fixCx',\n        value: function fixCx() {\n            var r = this.cx;\n            return r;\n        }\n    }, {\n        key: 'fixCy',\n        value: function fixCy() {\n            var r = this.cy;\n\n            if (this.legend) {\n                switch (this.legend.direction()) {\n                    case 'bottom':\n                        {\n                            r = (this.height - this.legend.outerHeight() / 2) / 2 - 5;\n                            break;\n                        }\n                }\n            }\n\n            return r;\n        }\n    }, {\n        key: 'fixWidth',\n        value: function fixWidth() {\n            var r = this.width;\n            return r;\n        }\n    }, {\n        key: 'fixHeight',\n        value: function fixHeight() {\n            var r = this.height;\n            return r;\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            return this;\n        }\n    }, {\n        key: 'setOptions',\n        value: function setOptions(options) {\n\n            for (var key in options) {\n                this[key] = options[key];\n            }\n\n            this.options = options;\n        }\n    }, {\n        key: 'calcLayoutPosition',\n        value: function calcLayoutPosition() {\n            return this;\n        }\n    }, {\n        key: 'calcDataPosition',\n        value: function calcDataPosition() {\n            return this;\n        }\n    }, {\n        key: 'initDataLayout',\n        value: function initDataLayout() {\n            return this;\n        }\n    }, {\n        key: 'draw',\n        value: function draw() {\n            return this;\n        }\n    }, {\n        key: 'reset',\n        value: function reset() {}\n    }, {\n        key: 'getData',\n        value: function getData() {\n            return this.data || {};\n        }\n    }, {\n        key: 'layer',\n        value: function layer() {\n            return this.layer;\n        }\n    }, {\n        key: 'isAnimation',\n        value: function isAnimation() {\n            var r = true;\n\n            if (this.allData && 'animation' in this.allData) {\n                r = this.allData.animation;\n            }\n\n            if (this.data && 'animation' in this.data) {\n                r = this.data.animation;\n            }\n\n            return r;\n        }\n    }, {\n        key: 'setLayer',\n        value: function setLayer(layer) {\n            this.layer = layer;\n            return this;\n        }\n    }, {\n        key: 'setStage',\n        value: function setStage(stage) {\n            this.stage = stage;\n        }\n    }, {\n        key: 'resize',\n        value: function resize(width, height) {\n            var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n            var allData = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n            this.data = data || this.data;\n            this.allData = allData || this.allData;\n\n            this.width = width || this.box.offsetWidth || this.width;\n            this.height = height || this.box.offsetHeight || this.height;\n\n            this._setSize(this.width, this.height);\n        }\n    }, {\n        key: 'setDestroy',\n        value: function setDestroy() {\n            this.isDestroy = 1;\n        }\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            this.setDestroy();\n\n            //console.log( 'base destroyList.length', this.destroyList.length );\n\n            this.destroyList.map(function (item) {\n                if (item) {\n                    item.remove();\n                    item.destroy();\n                }\n            });\n        }\n    }, {\n        key: 'addDestroy',\n        value: function addDestroy() {\n            var _this3 = this;\n\n            for (var _len = arguments.length, item = Array(_len), _key = 0; _key < _len; _key++) {\n                item[_key] = arguments[_key];\n            }\n\n            item && item.length && item.map(function (val) {\n                _this3.destroyList.push(val);\n            });\n        }\n    }]);\n\n    return VisChartBase;\n}();\n\nexports.default = VisChartBase;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.pointRectangleIntersection = pointRectangleIntersection;\nexports.pointDistance = pointDistance;\nexports.pointAngle = pointAngle;\nexports.distanceAngleToPoint = distanceAngleToPoint;\nexports.radians = radians;\nexports.degree = degree;\nexports.intersectRect = intersectRect;\nexports.fixEndAngle = fixEndAngle;\nexports.pointPlus = pointPlus;\n\n/**\n * 判断一个点是否在矩形里面\n * @method  pointRectangleIntersection\n * @param   {point} _p\n * @param   {rect}  _r\n * @return  Boolean\n * @static\n */\nfunction pointRectangleIntersection(p, r) {\n    return p.x >= r.x && p.x <= r.x2 && p.y >= r.y && p.y <= r.y2;\n}\n/**\n * 计算两个坐标点之间的距离\n * @method pointDistance\n * @param   {point} _p1\n * @param   {point} _p2\n * @return  Boolean\n * @static\n */\nfunction pointDistance(_p1, _p2) {\n    var _dx = _p2.x - _p1.x,\n        _dy = _p2.y - _p1.y,\n        _dist = Math.sqrt(_dx * _dx + _dy * _dy);\n    ;\n    return _dist;\n}\n/**\n * 计算两个坐标点之间的角度\n * @method pointAngle\n * @param   {point} _p1\n * @param   {point} _p2\n * @return  Boolean\n * @static\n */\nfunction pointAngle(_p1, _p2) {\n    var angle = Math.atan2(_p2.y - _p1.y, _p2.x - _p1.x) * 180 / Math.PI;\n    if (angle < 0) {\n        angle = 360 + angle;\n    }\n\n    return angle;\n}\n\n/**\n * 从长度和角度求坐标点\n * @method  distanceAngleToPoint\n * @param  {Number} _distance\n * @param  {Number} _angle\n * @return Point\n * @static\n */\nfunction distanceAngleToPoint(_distance, _angle) {\n    var _radian = _angle * Math.PI / 180;\n    return {\n        x: Math.cos(_radian) * _distance,\n        y: Math.sin(_radian) * _distance\n    };\n}\n/**\n * 从角度获取弧度\n * @method  radians\n * @param   {Number} _angle\n * @return  {Number}\n * @static\n */\nfunction radians(_angle) {\n    return _angle * Math.PI / 180;\n}\n/**\n * 从弧度获取角度\n * @method  degree\n * @param   {Number} _radians\n * @return  {Number}\n * @static\n */\nfunction degree(_radians) {\n    return _radians / Math.PI * 180;\n}\n/**\n * 判断两个矩形是否有交集\n * @method intersectRect\n * @param   {rect_Object}   r1\n * @param   {rect_Object}   r2\n * @return  {Boolean}\n */\nfunction intersectRect(r1, r2) {\n    return !(r2.x > r1.x + r1.width || r2.x + r2.width < r1.x || r2.y > r1.y + r1.height || r2.y + r2.height < r1.y);\n}\n\nfunction fixEndAngle(startAngle, endAngle) {\n    if (endAngle < startAngle) {\n        endAngle += 360;\n    }\n    return endAngle;\n}\n\nfunction pointPlus(p1, p2) {\n    return {\n        x: p1.x + p2.x,\n        y: p1.y + p2.y\n    };\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseFinance = parseFinance;\n\n\n/**\n * 取小数点的N位\n * <br />JS 解析 浮点数的时候，经常出现各种不可预知情况，这个函数就是为了解决这个问题\n * @method  parseFinance\n * @static\n * @param   {number}    _i\n * @param   {int}       _dot  default = 2\n * @return  number\n */\nfunction parseFinance(_i, _dot) {\n  _i = parseFloat(_i) || 0;\n  typeof _dot == 'undefined' && (_dot = 2);\n  _i && (_i = parseFloat(_i.toFixed(_dot)));\n  return _i;\n}","\nexport const dountBig = '';\n\n\nexport const dountIn = 'iVBORw0KGgoAAAANSUhEUgAAAHYAAAB1CAYAAACbMxW/AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAA3FpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMC1jMDYwIDYxLjEzNDc3NywgMjAxMC8wMi8xMi0xNzozMjowMCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iIHhtbG5zOnN0UmVmPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VSZWYjIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDoyNzI0ZGMwNS03YzE0LTMwNGUtYTMxZC02Y2NkNDM5NTRjNmUiIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6MEI1QkNFMUZDMjA2MTFFODhGOTNFOUM0REJFQ0YyQTciIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6MEI1QkNFMUVDMjA2MTFFODhGOTNFOUM0REJFQ0YyQTciIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENDIChXaW5kb3dzKSI+IDx4bXBNTTpEZXJpdmVkRnJvbSBzdFJlZjppbnN0YW5jZUlEPSJ4bXAuaWlkOmY0NTY1MTdhLTI1ZDQtNzA0Zi05ZmY0LWMxMGFjNTFkODc3ZiIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1wLmRpZDoyNzI0ZGMwNS03YzE0LTMwNGUtYTMxZC02Y2NkNDM5NTRjNmUiLz4gPC9yZGY6RGVzY3JpcHRpb24+IDwvcmRmOlJERj4gPC94OnhtcG1ldGE+IDw/eHBhY2tldCBlbmQ9InIiPz5fq2TSAAAOvElEQVR42uxdDYxcVRW+063QSstMa5tUAXeq4A9aOhXEmAA7VMEihk5Ro0FMp0ajGE0XEw2EALNKgppot2JIRMNug5oQjJ2ixopCZ5BIQsROaWk0LXVWKzQp0FlZWX7ajudsv7tz9s69b2Zn3+y+Ge5JTmf63pv37j3fPb/33rexarWqPHUfzfMi8MB68sB68sB68sB68sB6YL0IPLCePLCePLCePLCePLAeWC8CD6wnD6wnD6wnD6wnD6wH1ovAA+vJA+vJA+vJA+vJA+uB9SLwwHrywHrywHrywHrywHpgvQi6k+bPdQPO+/lR81CWOEec7DBZVogHwZVmf3Tg+uXdCSzTq0f+qU5fsTIDofQSj/KxMInuPxtduZ24HwNz8A1hikkzVxGf6xD6MH1sB6hMhZAffz4NlM+fGKvcRt9vIL6wDV3UbY4Tb8H/E5br0gC+a0zxb4jL6JikPPF6h5BaJQbuCuJLiPuIF00cjcUepX8vwzUniIvEj+GziGOtktmPPvQjbZjmYQA+LZMdSY0lTc1CG/voe1ocH7SAqjs/HWLgNhD/gvgF4r8S30l89SSo9dRDvJaYtfhh4peId8DHL20R2FHj2GqjL2nIIY7ndLwp7jeCIwWAN1uu3UZms5mRfBru9VuA+Wvi61oEhWkh8TXEQ7jfQ8RfCxgYruDJpPXCSmUdMuk8YAnAJEaupoylk5pGm+jwQgj8EEC4GiCHTWzK7yIeIb4FWtaIBnG9a2BnxDHW3FQna6zpU+MAO225NhOgraw534DgWOBnzZK1YQtwB557RwOLUAF4oxYZpCyDo6OBTTqO9Yr/s9DWEKiuoIkFsJv4B8TL1dxQHJr7FAIjF5UAZNH4baJJ2XRWumOhLxFfS3wBAcodTFHakyc2O8tm9y/E50akEHEWgq3bEICZQGlg2dUsJl4J7s481jRZB65f/jP63EX8SQKzAn/JgcaYCI4egNldGLEqEwM6gABLmtfnEU9wHssVlh/jeLmdqc2sAUs+dAHxImGapgRIBGqJzqdw7nYhHK44PQ8gOfX4lIo2rTXAHTOCp43oYxafIxazzfI6i7kTNPYm4n3U2ASSdBlMDCKv3W34WR1VngZQ16nOoIthmuOOHDwOa5Q1zjHIeQSSTxN/sxOA1Yl4nrSTTVAOx/dACEOOVGcQAdIVqrPoQtEnV8ozhEFeNFKgPMBPdQKwOmrkSlOWwOXOnkN8EfF3XEUMpDrrVGfSFSLlceXirLEfJV4CQPtFjt8XaWBhfiVNaCuBe5g+3u/oAFebhkXU2Ym0SJhjBm2T5ZpeyKCC9CdnKeZEVmNNk9ILn+pKyAcI1KyIhBeqzqW4oZ2bHMUKXYWKtyuvna3ZnbQIHLSP2Ue8l/gn4rpOBlUPTNP0ngltfheAqwhg20axsN8wDlN8zDhcJFOcFtekRdAQE5Pq8aB8r/qHn6rqM3+bUfsW3DikXn/oXnXi6T/P+D6xJW+t6z7xQbPZqlYDl1FxwXRLJKNYZDWWo2ACbsSSymhQ+5HA6yjZjIzd9OrLte9nLlMx4mnR+EtjBMai6itjtZFN4MSWrpi+RtSDOvEEy7EiABwSFSkbjYSJQ7tMcQHJuQkqR8dyqq7iEI7VJFeP/qsm2A9vULF3fmB6nV28lNX9suqzB2rHLv20mn/Rx8Pq92iD81omWUfEHL2omECbZ0TCspNcacqo+vnXkuVW/7E+4L/PT9HYaWurHhzHnlPV8ZrGznvbeWGJYFzVyqHmIDfB7TeO6xxey3JZZIAlOkENGmYfS+a4bORy9zpGZMFyzLqKrcrASlr+9taAffHIVAGEB6xr9Z1t8PLA/xMAZU7DhaWIWSZHo2SKRzAaMyhKMMi8nojnL9daQnuuGecty0/tAhJmmOnk3TdMzyee/R6lPjegTgozHCKoyhI0KZHTmjFHHIUKnrF6heQwhpRwyBF7zCmwZVVbz7OdGrqJwYVp+b7letfyzP1273V0ZoHTOe+FKT7SLmD3B5wbFAGjEulOjtcVs6UzYpJKlIA1w/ch1kaAa1abeER+j85zAf0J49zjDQOn912qYmuubKmRUmNjS1aECeyTjuNcIn0AQEo5rBZZwsYmXNSc+VhbYwYtZTIGdT0AvMfhk8YDTXGL/tUENmSNfdxx/Lvq1OzNrerUrJUMmJIWTdbmOxoaS5pZsOSvcQQKnMtNrKWF7y2pqQvcJL2G0X+Jy7+2HBH/e/+UFYcnKUJWz0wzf6Wc15LDHnRG87V+3oU8dhk+X1D2heMjPF8dtTw2p+qn5DjiS4pQPmeAmrD4lN9JYKdExKe/ecLHthYRPzclP379wR9N+x6nfeYW1VMP7B8dlycNgHPIFnSgNeSQ4YypHSXFOm3UpTKYZTPqvdyyiI3XCB2aBOTw32taS8DGzr+kNb/z7IG9sf9VVrXaN65Y9ZB/t5jwT2AwmsSaucvSt7K+pVmlkqXXqFWe0vC3NlNrm6esOHJCHiCpyVSFeaYBxbs/dKznjHjY/X2ReKfjXMWhkbbK0x4V4sTAvJC0NEm8AsWJCsDdZimzZZtM4JnuV51B3M4T0yhOZIzcn+UzQHLjQTwPm9fWEV8XhaiYUxqKRNQxalAV/8/j/m8RZjhuKWq46JdqZpukZovuaXDeLDbIZTAr4YcrcGEcUPG65d8TXxkFYE0Ty+kMb4vkBWurLIHElLD+9BUrbdNV7FR/FXFQiwEWJwa2pS4JIacSUp7VYQZRoQCL8HyrI9QvYKlpXS0JjWft3hyQA0aZfhhwbgsG96Cqn/WpwC1tV/bpzQHU2+e+QEEN6Vf2GmccwZTZ0Cx88UblnqMsRVhruSDxYMD5DDRS93NUDOiKI9Vh2kGynHHKE/aap3QAuDkEVOxXLwfYw1qzyRwnHPe8GUWLqNG3As4lhCbmAGQKpns4wMzuUSHtmw013cHUUxqNNzc0Z+h8wihUyGAqpexlyYMweTdFCFQO7B4LOJ+yDGqtua40aCusXnTSHRNc4gy0cocwQfEGAVci4La8DeQfEQGVp5m+HhAw2QLFjUb/9HaPImKTlQwqDfYe4vnEscgAS43ZwKmOZoxS9qs8NxuTC7WwmsK6V5RfNEJsVl/YFG+KiEn+MooSNp+6PSADyBguKwXLxteWILPjxK8TfyxKGrvT8K99iHZ5brYMMG2manIUYwvlRocPeryBX5utKHi745x+n0bSkQIlDWtVVrUdhnKQ7yEl2BkZYKkx4/AjtgVdvQC4X4xYk8rCPPdZtFbBbN03R6A+EjCwskawVHYElrqYs0XZX30w6pDN3PpY5LNp5V6ttwWaawYPvH2yZJgrV3T4RQh5NokXtl8bUAnLGN9tWyb1wN3ouMfk2qeoBk8a3JEAk2WaqkHS0JSRrGd0VcqoTL0GIT85S6DyhMRVlsG6AKyMDCCu7C/pKiv3Zi12Yakw5mHbBqwANwXTOWoxyzKxL5K25iwmKA6wWWi7jTyX7/kR5V61EBZxJH6pqp9E53bx4ql1DtOpA6Nt4th9lioTD35eG5aaaaWprXmsmfbwCEW+mhYBE4O+G6mQHMUJR6LPv5soTbLfFW+VYXC5UM4v7bqmDV14AoPqiAW0gqoV8wuOdmt3wgEST/DzWo014hz3o9RxL8lELvZBdWpb5Nnq1MwF0zkI52+lTu21LD910WoIUUbUYxD+nSEXMO5DWjNuAWxYNffOJ7Oa9BUxUPUAV1hHzLXhaqdoLOezXw0IFhTWSLHG5h3VGPMYlx5zMN2SboagtHbMhPhersmHnKqfhak4Inyd1uQcA0GvWCyHDWrbfKwAN2v4GWsaRGBlLSZNR8p1VSjLK4OYeML7ogalviDaD3/qAjWp7LNQtgi4oGpriYO0ewAyUh0FrAD3xgaXDaFUVzSiZxf1W6JlCc4m1XiDlCY2t7fD/z3msGoxFbysR1qQIn6zOeCZ3LYNqo2vt52V9zzhHRQrG2jvVRAed3qPMLcFR7LPmnCSwC2jDClzSfaD5zVRzHgEgH5b1cqVCfhEdg9VlPjOcES/BfG8bWg7//biAEAHoP35dso89FWKTQRVSeSoKXSwDAHdT2COE0A82Kr0fbJheMHXFJNG51ljy6r+1X38khIptLXQ/lXzFy99tOeM+GVIX262AJ/D4IobGphW9SsKR1R9TZjbflLk4SnDZBdMn9yuqHjW38zG+Ro0WO7w5lH+MgHFwjsk/G4js5xz+OxhkfeyVl4wET1Xq08h2n2HAWpC1b9MzPUMs036JSElVKaq4O1Cy/MBAWJ3aCy0djgoWrakClqrV4uiRhraXFD2N9FMXoPrgp7j2pmwQ5QL5XP2QBtlTtuIijZz3jUaK0Z7M1sFV2Okj6mpqzP4ZZoarKwjUOKJhKy4Tk0jhdGmNmv4bQnQgmmAKgdI92qs0NwsBNvbIILkfaR6n8cKfD/uqAY18oO2nLPX8sy0qq9p96jaRADvA9rXoO1F9K8Q4Jq6D1iAqwONDEDoE0IpQbsXA9yzxU8P45oXBbh5i6DnicBHmnV97oQFjKwoMqQRD+hJilG0Kw8/ejnaLkuFBZwvNxFzdDWwLmpGowdEgKNTlawwr2+CdqeEsPsBDmvgwwKQYSMNaRQL6HdHtPwXObrNxzailCgR9jZxrSwYDOKYXrB9HADpt6324fsGaGsanGkht4wjki6rkCbIuxnYhHJv6rIFJVmY8EH8TqcbZRxL4pqi8TudjuTFb6pCc9P43dYmAd6lmv+LH90dPAWY4pTQIvOPJIyqWi1W++BG5nIp8tkkBg6D+QXVeG9QUUTG2s/2ifuWhM9uKU/t6r9t58grSyq4XpyGUBulG3lUgz6rTs2tzge4J6GNQTXdPrSjX7X57+S8UXxsI8rC9DUCdavQOD1hflykTv0IvhqZ2SE1x3+E8I0CbBJmctRherchDWlGyzii5grGjYYf1vfSi7pLnSSgOfexnrzGevLAevLAemA9eWA9eWA9eWA9eWA9eWA9sJ48sJ48sJ48sJ48sJ48sB5YTx5YTx5YTx5YTx5YT/8XYACBsr4gI3Oh8AAAAABJRU5ErkJggg==';\n\nexport const rateOut = '';\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _geometry = require('../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar PointAt = function () {\n    function PointAt(width, height, point) {\n        _classCallCheck(this, PointAt);\n\n        this.width = width;\n        this.height = height;\n        this.point = point;\n\n        this.cx = this.width / 2;\n        this.cy = this.height / 2;\n\n        this.cpoint = { x: this.cx, y: this.cy };\n\n        this.offsetX = 20;\n        this.offsetY = 20;\n\n        this.colors = ['#f12575', '#da432e', '#f3a42d', '#19af89', '#24a3ea', '#b56be8'];\n\n        this.init();\n    }\n\n    _createClass(PointAt, [{\n        key: 'setDebug',\n        value: function setDebug(stage) {\n            this.stage = stage;\n\n            this.layer = new _konva2.default.Layer();\n\n            var i = 0;\n\n            for (var key in this.rects) {\n\n                var item = this.rects[key];\n                var params = _jsonUtilsx2.default.clone(item);\n                params.fill = this.colors[i % this.colors.length];\n\n                var rect = new _konva2.default.Rect(params);\n\n                this.layer.add(rect);\n\n                i++;\n            }\n\n            this.stage.add(this.layer);\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            this.leftTop = {\n                x: 0,\n                y: 0,\n                width: this.cx + this.offsetX,\n                height: this.cy + this.offsetY\n            };\n            this.leftTop.x2 = this.leftTop.x + this.leftTop.width;\n            this.leftTop.y2 = this.leftTop.y + this.leftTop.height;\n\n            this.rightTop = {\n                x: this.cx - this.offsetX,\n                y: 0,\n                width: this.cx + this.offsetX,\n                height: this.cy + this.offsetY\n            };\n            this.rightTop.x2 = this.rightTop.x + this.rightTop.width;\n            this.rightTop.y2 = this.rightTop.y + this.rightTop.height;\n\n            this.leftBottom = {\n                x: 0,\n                y: this.cy - this.offsetY,\n                width: this.cx + this.offsetX,\n                height: this.cy + this.offsetY\n            };\n            this.leftBottom.x2 = this.leftBottom.x + this.leftBottom.width;\n            this.leftBottom.y2 = this.leftBottom.y + this.leftBottom.height;\n\n            this.rightBottom = {\n                x: this.cx - this.offsetX,\n                y: this.cy - this.offsetY,\n                width: this.cx + this.offsetX,\n                height: this.cy + this.offsetY\n            };\n            this.rightBottom.x2 = this.rightBottom.x + this.rightBottom.width;\n            this.rightBottom.y2 = this.rightBottom.y + this.rightBottom.height;\n\n            this.rects = {\n                leftTop: this.leftTop,\n                rightTop: this.rightTop,\n                leftBottom: this.leftBottom,\n                rightBottom: this.rightBottom\n            };\n        }\n    }, {\n        key: 'isLeftTop',\n        value: function isLeftTop() {\n            return geometry.pointRectangleIntersection(this.point, this.leftTop) ? 1 : 0;\n        }\n    }, {\n        key: 'isRightTop',\n        value: function isRightTop() {\n            return geometry.pointRectangleIntersection(this.point, this.rightTop) ? 2 : 0;\n        }\n    }, {\n        key: 'isRightBottom',\n        value: function isRightBottom() {\n            return geometry.pointRectangleIntersection(this.point, this.rightBottom) ? 4 : 0;\n        }\n    }, {\n        key: 'isLeftBottom',\n        value: function isLeftBottom() {\n            return geometry.pointRectangleIntersection(this.point, this.leftBottom) ? 8 : 0;\n        }\n    }, {\n        key: 'auto',\n        value: function auto() {\n            var r = this.isLeftTop() + this.isRightTop() + this.isRightBottom() + this.isLeftBottom();\n            return r;\n        }\n    }, {\n        key: 'autoAngle',\n        value: function autoAngle() {\n            var angle = geometry.pointAngle(this.cpoint, this.point),\n                r = '';\n\n            if (angle >= 0 && angle <= 90) {\n                r = PointAt.DIRE_NAME.rightBottom;\n            } else if (angle > 90 && angle <= 180) {\n                r = PointAt.DIRE_NAME.leftBottom;\n            } else if (angle > 180 && angle <= 270) {\n                r = PointAt.DIRE_NAME.leftTop;\n            } else {\n                r = PointAt.DIRE_NAME.rightTop;\n            }\n\n            return r;\n        }\n    }]);\n\n    return PointAt;\n}();\n\nexports.default = PointAt;\n\n\nPointAt.DIRE_NAME = {\n    leftTop: 1,\n    rightTop: 2,\n    rightBottom: 4,\n    leftBottom: 8,\n\n    topCenter: 3,\n    rightMid: 6,\n    bottomCenter: 12,\n    leftMid: 9\n};\n\nPointAt.DIRE_NUM = {\n    '1': 'leftTop',\n    '2': 'rightTop',\n    '4': 'rightBottom',\n    '8': 'leftBottom',\n\n    '3': 'topCenter',\n    '6': 'rightMid',\n    '9': 'leftMid',\n    '12': 'bottomCenter'\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _vischartbase = require('./common/vischartbase.js');\n\nvar _vischartbase2 = _interopRequireDefault(_vischartbase);\n\nvar _index = require('./dount/index.js');\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _index3 = require('./gauge/index.js');\n\nvar _index4 = _interopRequireDefault(_index3);\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _constant = require('./common/constant.js');\n\nvar constant = _interopRequireWildcard(_constant);\n\nvar _legend = require('./common/legend.js');\n\nvar _legend2 = _interopRequireDefault(_legend);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar VisChart = function (_VisChartBase) {\n    _inherits(VisChart, _VisChartBase);\n\n    function VisChart(box, width, height) {\n        _classCallCheck(this, VisChart);\n\n        var _this = _possibleConstructorReturn(this, (VisChart.__proto__ || Object.getPrototypeOf(VisChart)).call(this, box, width, height));\n\n        _this.ins = [];\n        _this.legend = null;\n\n        _this._setSize(width, height);\n        return _this;\n    }\n\n    _createClass(VisChart, [{\n        key: '_setSize',\n        value: function _setSize(width, height) {\n            _get(VisChart.prototype.__proto__ || Object.getPrototypeOf(VisChart.prototype), '_setSize', this).call(this, width, height);\n            this.init();\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            //console.log( 'VisChartBase init', Date.now(), this.width, this.height, this.canvas );\n\n            if (!this.box) return;\n\n            this.stage = new _konva2.default.Stage({\n                container: this.box,\n                width: this.width,\n                height: this.height\n            });\n\n            this.customWidth && (this.box.style.width = this.customWidth + 'px');\n            this.customHeight && (this.box.style.height = this.customHeight + 'px');\n\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(data, ignoreLegend) {\n            var _this2 = this;\n\n            this.data = data;\n            this.ignoreLegend = ignoreLegend;\n\n            if (!_jsonUtilsx2.default.jsonInData(this.data, 'series')) return;\n\n            this.clearUpdate();\n\n            //console.log( ju );\n\n            //this.stage.removeChildren();\n\n            //console.log( 'update data', data );\n\n            if (_jsonUtilsx2.default.jsonInData(this.data, 'legend.data') && this.data.legend.data.length) {\n                if (this.legend && ignoreLegend) {} else {\n                    this.legend = new _legend2.default(this.box, this.width, this.height);\n                    this.legend.setStage(this.stage);\n                    this.legend.setOptions({\n                        onChange: function onChange(group) {\n                            //console.log( 'legend onchange', group );\n                            _this2.initChart();\n                        }\n                    });\n                    this.legend.update(this.data.legend);\n                }\n            }\n            this.initChart();\n            return this;\n        }\n    }, {\n        key: 'initChart',\n        value: function initChart() {\n            var _this3 = this;\n\n            this.ins.map(function (item) {\n                item.destroy();\n            });\n\n            this.ins = [];\n\n            this.data.series.map(function (val, key) {\n                //console.log( val, constant );\n                var ins = void 0;\n\n                switch (val.type) {\n                    case constant.CHART_TYPE.dount:\n                        {\n                            ins = new _index2.default(_this3.box, _this3.width, _this3.height);\n                            break;\n                        }\n                    case constant.CHART_TYPE.gauge:\n                        {\n                            ins = new _index4.default(_this3.box, _this3.width, _this3.height);\n                            break;\n                        }\n                }\n\n                if (ins) {\n                    _this3.legend && ins.setLegend(_this3.legend);\n                    _this3.options && ins.setOptions(_this3.options);\n                    ins.setStage(_this3.stage);\n                    ins.update(_this3.getLegendData(val), _jsonUtilsx2.default.clone(_this3.data));\n                    _this3.ins.push(ins);\n                }\n            });\n        }\n    }, {\n        key: 'getLegendData',\n        value: function getLegendData(data) {\n            data = _jsonUtilsx2.default.clone(data);\n\n            var tmp = [];\n\n            if (this.legend && this.legend.group && this.legend.group.length) {\n                //console.log( 'getLegendData', this.legend.group, 111111111 );\n                this.legend.group.map(function (item, key) {\n                    if (!item.disabled) {\n                        tmp.push(data.data[key]);\n                    }\n                });\n                data.data = tmp;\n            }\n\n            return data;\n        }\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            _get(VisChart.prototype.__proto__ || Object.getPrototypeOf(VisChart.prototype), 'destroy', this).call(this);\n\n            this.clearUpdate();\n\n            this.stage && this.stage.destroy();\n            this.stage = null;\n        }\n    }, {\n        key: 'clearUpdate',\n        value: function clearUpdate() {\n            this.ins.map(function (item) {\n                item.destroy();\n            });\n            this.legend && !this.ignoreLegend && this.legend.destroy();\n        }\n    }]);\n\n    return VisChart;\n}(_vischartbase2.default);\n\nexports.default = VisChart;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _vischartbase = require('../common/vischartbase.js');\n\nvar _vischartbase2 = _interopRequireDefault(_vischartbase);\n\nvar _geometry = require('../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _pointat = require('../common/pointat.js');\n\nvar _pointat2 = _interopRequireDefault(_pointat);\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _utils = require('../common/utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nvar _iconcircle = require('../icon/iconcircle.js');\n\nvar _iconcircle2 = _interopRequireDefault(_iconcircle);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Dount = function (_VisChartBase) {\n    _inherits(Dount, _VisChartBase);\n\n    function Dount(box, width, height) {\n        _classCallCheck(this, Dount);\n\n        var _this = _possibleConstructorReturn(this, (Dount.__proto__ || Object.getPrototypeOf(Dount)).call(this, box, width, height));\n\n        _this.name = 'Dount_' + Date.now();\n\n        _this._setSize(width, height);\n        return _this;\n    }\n\n    _createClass(Dount, [{\n        key: '_setSize',\n        value: function _setSize(width, height) {\n            _get(Dount.prototype.__proto__ || Object.getPrototypeOf(Dount.prototype), '_setSize', this).call(this, width, height);\n\n            this.outPercent = .53;\n            this.inPercent = .37;\n\n            this.circleLinePercent = .34;\n            this.circlePercent = .31;\n            this.circleLineRotation = 0;\n            this.circleLineRotationStep = 4;\n\n            this.animationStep = 8;\n            this.angleStep = 5;\n\n            this.textHeight = 26;\n            this.lineOffset = 50;\n\n            this.path = [];\n\n            this.textOffset = 4;\n\n            this.lineColor = '#24a3ea';\n\n            this.lineRange = {\n                \"1\": [],\n                \"2\": [],\n                \"4\": [],\n                \"8\": []\n            };\n\n            this.lineWidth = 40;\n            this.lineSpace = 10;\n            this.lineAngle = 35;\n            this.lineHeight = 21;\n            this.lineCurveLength = 30;\n\n            this.loopSort = [4, 8, 1, 2];\n\n            this.init();\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            this.calcLayoutPosition();\n\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(data, allData) {\n            _get(Dount.prototype.__proto__ || Object.getPrototypeOf(Dount.prototype), 'update', this).call(this, data, allData);\n\n            this.data = data;\n            this.allData = allData;\n\n            if (!_jsonUtilsx2.default.jsonInData(this.data, 'data')) return;\n\n            this.calcDataPosition();\n            this.initDataLayout();\n\n            //console.log( 'dount update', this.data, this, utils );\n\n            this.animation();\n            this.animationCircleLine();\n\n            return this;\n        }\n    }, {\n        key: 'reset',\n        value: function reset() {\n            this.path.map(function (val) {\n                val.pathData = [];\n            });\n        }\n    }, {\n        key: 'animationCircleLine',\n        value: function animationCircleLine() {\n            var _this2 = this;\n\n            if (this.isDestroy) return;\n            if (!this.circleLine) return;\n\n            if (!this.isAnimation()) {\n                return;\n            }\n\n            this.circleLineRotation += this.circleLineRotationStep;\n\n            this.circleLine.rotation(this.circleLineRotation);\n            this.stage.add(this.layoutLayer);\n\n            window.requestAnimationFrame(function () {\n                _this2.animationCircleLine();\n            });\n        }\n    }, {\n        key: 'animation',\n        value: function animation() {\n            var _this3 = this;\n\n            if (this.isDestroy) return;\n            if (this.isDone) return;\n\n            var tmp = void 0,\n                tmppoint = void 0,\n                step = this.angleStep;\n\n            this.countAngle += this.animationStep;\n            //this.countAngle += 350;\n\n            if (this.countAngle >= this.totalAngle || !this.isAnimation()) {\n                this.countAngle = this.totalAngle;\n                this.isDone = 1;\n            }\n\n            this.reset();\n\n            for (var i = this.path.length - 1; i >= 0; i--) {\n                //for( let i = 0; i < this.path.length; i++ ){\n                //let i = 2;\n                var item = this.path[i];\n\n                //console.log( i, item );\n\n                var tmpAngle = this.countAngle;\n\n                if (tmpAngle >= item.itemData.endAngle) {\n                    tmpAngle = item.itemData.endAngle;\n                }\n\n                if (tmpAngle < item.itemData.startAngle) continue;\n\n                item.arc.angle(tmpAngle);\n            }\n            this.stage.add(this.arcLayer);\n\n            window.requestAnimationFrame(function () {\n                _this3.animation();\n            });\n\n            if (this.isDone) {\n                window.requestAnimationFrame(function () {\n                    _this3.animationLine();\n                });\n            }\n        }\n    }, {\n        key: 'drawCircle',\n        value: function drawCircle() {\n            this.circleRadius = Math.ceil(this.circlePercent * this.min / 2);\n\n            this.circle = new _konva2.default.Circle({\n                x: this.fixCx(),\n                y: this.fixCy(),\n                radius: this.circleRadius,\n                stroke: this.lineColor,\n                strokeWidth: 2.5,\n                fill: '#ffffff00'\n            });\n            this.addDestroy(this.circle);\n            this.layoutLayer.add(this.circle);\n        }\n    }, {\n        key: 'drawCircleLine',\n        value: function drawCircleLine() {\n            this.circleLineRadius = Math.ceil(this.circleLinePercent * this.min / 2);\n\n            var points = [];\n            points.push('M');\n            for (var i = 90; i <= 180; i++) {\n                var tmp = geometry.distanceAngleToPoint(this.circleLineRadius, i);\n                points.push([tmp.x, tmp.y].join(',') + ',');\n                if (i == 90) {\n                    points.push('L');\n                }\n            }\n            points.push('M');\n            for (var _i = 270; _i <= 360; _i++) {\n                var _tmp = geometry.distanceAngleToPoint(this.circleLineRadius, _i);\n                points.push([_tmp.x, _tmp.y].join(',') + ',');\n                if (_i == 270) {\n                    points.push('L');\n                }\n            }\n\n            this.circleLine = new _konva2.default.Path({\n                data: points.join(''),\n                x: this.fixCx(),\n                y: this.fixCy(),\n                stroke: this.lineColor,\n                strokeWidth: 2.5,\n                fill: '#ffffff00'\n            });\n            this.addDestroy(this.circleLine);\n\n            this.layoutLayer.add(this.circleLine);\n        }\n    }, {\n        key: 'initDataLayout',\n        value: function initDataLayout() {\n\n            this.path = [];\n            this.line = [];\n\n            this.layoutLayer = new _konva2.default.Layer();\n            this.addDestroy(this.layoutLayer);\n\n            this.drawCircle();\n            this.drawCircleLine();\n\n            this.stage.add(this.layoutLayer);\n\n            this.arcLayer = new _konva2.default.Layer();\n            this.addDestroy(this.arcLayer);\n\n            for (var ii = this.data.data.length - 1; ii >= 0; ii--) {\n                var val = this.data.data[ii],\n                    key = ii;\n\n                var color = this.colors[key % this.colors.length];\n\n                if (_jsonUtilsx2.default.jsonInData(val, 'itemStyle.color')) {\n                    //path.fill( val.itemStyle.color );\n                    color = val.itemStyle.color;\n                }\n\n                var params = {\n                    x: this.fixCx(),\n                    y: this.fixCy(),\n                    innerRadius: this.inRadius,\n                    outerRadius: this.outRadius,\n                    angle: this.countAngle,\n                    fill: color,\n                    stroke: '#ffffff00',\n                    strokeWidth: 0\n                    //, rotation: this.arcOffset\n                };\n                var arc = new _konva2.default.Arc(params);\n                this.addDestroy(arc);\n\n                var tmp = {\n                    arc: arc,\n                    pathData: [],\n                    itemData: val\n                };\n\n                this.path.push(tmp);\n\n                var line = new _konva2.default.Line({\n                    x: this.fixCx(),\n                    y: this.fixCy(),\n                    points: [0, 0, 0, 0],\n                    stroke: '#ffffff',\n                    strokeWidth: 2\n                });\n                this.line.push(line);\n                this.addDestroy(line);\n\n                this.arcLayer.add(arc);\n                this.arcLayer.add(line);\n            };\n            this.stage.add(this.arcLayer);\n\n            return this;\n        }\n    }, {\n        key: 'calcDataPosition',\n        value: function calcDataPosition() {\n            var _this4 = this;\n\n            if (!this.data) return;\n\n            var total = 0,\n                tmp = 0;\n\n            this.data.data.map(function (val) {\n                total += val.value;\n            });\n            this.total = total;\n\n            this.data.data.map(function (val) {\n                val._percent = utils.parseFinance(val.value / total);\n                tmp = utils.parseFinance(tmp + val._percent);\n                val._totalPercent = tmp;\n\n                val.percent = parseInt(val._percent * 100);\n\n                val.endAngle = _this4.totalAngle * val._totalPercent;\n            });\n\n            //修正浮点数精确度\n            if (this.data.data.length) {\n                var item = this.data.data[this.data.data.length - 1];\n                tmp = tmp - item._percent;\n\n                item._percent = 1 - tmp;\n                item.percent = parseInt(item._percent * 100);\n                item._totalPercent = 1;\n                item.endAngle = this.totalAngle;\n            }\n\n            this.lineRange = {\n                \"1\": [],\n                \"2\": [],\n                \"4\": [],\n                \"8\": []\n                //计算开始角度, 计算指示线的2端\n            };this.data.data.map(function (val, key) {\n                if (!key) {\n                    val.startAngle = 0;\n                } else {\n                    val.startAngle = _this4.data.data[key - 1].endAngle;\n                }\n\n                val.midAngle = val.startAngle + (val.endAngle - val.startAngle) / 2;\n\n                val.lineStart = geometry.distanceAngleToPoint(_this4.outRadius, val.midAngle);\n                val.lineEnd = geometry.distanceAngleToPoint(_this4.outRadius + _this4.lineLength, val.midAngle);\n\n                val.textPoint = geometry.distanceAngleToPoint(_this4.outRadius + _this4.lineLength, val.midAngle);\n\n                val.pointDirection = new _pointat2.default(_this4.fixWidth(), _this4.fixHeight(), geometry.pointPlus(val.textPoint, _this4.cpoint));\n                var lineAngle = val.pointDirection.autoAngle();\n                val.lineExpend = _jsonUtilsx2.default.clone(val.lineEnd);\n\n                switch (lineAngle) {\n                    case 1:\n                    case 8:\n                        {\n                            //val.lineEnd.x = this.lineLeft;\n                            val.lineEnd.x = -(_this4.outRadius + _this4.lineSpace);\n\n                            var _tmp2 = geometry.pointDistance(val.lineStart, val.lineEnd);\n                            if (_tmp2 > _this4.lineCurveLength) {\n                                var tmpAngle = geometry.pointAngle(val.lineStart, val.lineEnd),\n                                    tmpPoint = geometry.distanceAngleToPoint(_this4.lineCurveLength, tmpAngle);\n                                tmpPoint = geometry.pointPlus(tmpPoint, val.lineStart);\n\n                                val.lineEnd.x = tmpPoint.x;\n                            }\n\n                            val.lineExpend.x = val.lineEnd.x - _this4.lineWidth;\n\n                            break;\n                        }\n                    default:\n                        {\n                            val.lineEnd.x = _this4.outRadius + _this4.lineSpace;\n                            var _tmp3 = geometry.pointDistance(val.lineStart, val.lineEnd);\n                            if (_tmp3 > _this4.lineCurveLength) {\n                                var _tmpAngle = geometry.pointAngle(val.lineStart, val.lineEnd),\n                                    _tmpPoint = geometry.distanceAngleToPoint(_this4.lineCurveLength, _tmpAngle);\n                                _tmpPoint = geometry.pointPlus(_tmpPoint, val.lineStart);\n\n                                val.lineEnd.x = _tmpPoint.x;\n                            }\n\n                            val.lineExpend.x = val.lineEnd.x + _this4.lineWidth;\n                            break;\n                        }\n                }\n\n                _this4.lineRange[lineAngle].push(val);\n            });\n\n            this.loopSort.map(function (key) {\n                var item = _this4.lineRange[key];\n                if (!(item && item.length && item.length > 1)) return;\n                var needFix = void 0;\n                for (var i = 1; i < item.length; i++) {\n                    var pre = item[i - 1],\n                        cur = item[i];\n                    if (Math.abs(cur.lineEnd.y - pre.lineEnd.y) < _this4.lineHeight) {\n                        needFix = 1;\n                        break;\n                    }\n                }\n                switch (key) {\n                    case 1:\n                        {\n                            var tmpY = item[0].lineEnd.y;\n                            //console.log( item );\n                            for (var _i2 = item.length - 2; _i2 >= 0; _i2--) {\n                                var _pre = item[_i2 + 1],\n                                    _cur = item[_i2];\n                                if (Math.abs(_pre.lineEnd.y - _cur.lineEnd.y) < _this4.lineHeight || _cur.lineEnd.y <= _pre.lineEnd.y) {\n                                    tmpY = _pre.lineEnd.y + _this4.lineHeight;\n                                    _cur.lineEnd.y = tmpY;\n\n                                    /*\n                                    if( cur.lineEnd.y < cur.lineStart.y ){\n                                        //tmpY = cur.lineStart.y + this.lineHeight;\n                                        //cur.lineEnd.y = tmpY;\n                                    }\n                                    */\n                                    _cur.lineExpend.y = tmpY;\n                                }\n                            }\n                            break;\n                        }\n                    case 2:\n                        {\n                            var _tmpY = item[0].lineEnd.y;\n                            for (var _i3 = 1; _i3 < item.length; _i3++) {\n                                var _pre2 = item[_i3 - 1],\n                                    _cur2 = item[_i3],\n                                    zero = item[0];\n\n                                if (Math.abs(_pre2.lineEnd.y + _this4.fixCy()) < _this4.lineHeight) {\n                                    _pre2.lineExpend.y = _pre2.lineEnd.y = _pre2.lineExpend.y + _this4.lineHeight;\n                                }\n                                if (Math.abs(_pre2.lineEnd.y - _cur2.lineEnd.y) < _this4.lineHeight || _cur2.lineEnd.y <= _pre2.lineEnd.y) {\n\n                                    _tmpY = _pre2.lineEnd.y + _this4.lineHeight;\n                                    _cur2.lineEnd.y = _tmpY;\n\n                                    /*\n                                    if( cur.lineEnd.y < cur.lineStart.y ){\n                                        //tmpY = cur.lineStart.y + this.lineHeight;\n                                        //cur.lineEnd.y = tmpY;\n                                    }\n                                    */\n                                    _cur2.lineExpend.y = _tmpY;\n                                }\n                            }\n\n                            break;\n                        }\n                    case 4:\n                        {\n                            var _tmpY2 = 0;\n                            for (var _i4 = item.length - 2; _i4 >= 0; _i4--) {\n                                var _pre3 = item[_i4 + 1],\n                                    _cur3 = item[_i4];\n                                if (Math.abs(_pre3.lineEnd.y - _cur3.lineEnd.y) < _this4.lineHeight || _cur3.lineEnd.y <= _pre3.lineEnd.y) {\n                                    //console.log( pre.lineEnd.y, cur.lineEnd.y );\n                                    _tmpY2 = _pre3.lineEnd.y - _this4.lineHeight;\n                                    _cur3.lineEnd.y = _tmpY2;\n\n                                    /*\n                                    if( cur.lineEnd.y < cur.lineStart.y ){\n                                    }\n                                    */\n                                    _cur3.lineExpend.y = _tmpY2;\n                                }\n                            }\n                            break;\n                        }\n                    case 8:\n                        {\n                            var _tmpY3 = 0;\n                            for (var _i5 = 1; _i5 < item.length; _i5++) {\n                                var _pre4 = item[_i5 - 1],\n                                    _cur4 = item[_i5];\n                                if (Math.abs(_pre4.lineEnd.y - _cur4.lineEnd.y) < _this4.lineHeight || _cur4.lineEnd.y <= _pre4.lineEnd.y) {\n                                    _tmpY3 = _pre4.lineEnd.y - _this4.lineHeight;\n                                    _cur4.lineEnd.y = _tmpY3;\n\n                                    /*\n                                    if( cur.lineEnd.y < cur.lineStart.y ){\n                                        //cur.lineEnd.y = cur.lineStart.y + this.lineHeight;\n                                    }\n                                    */\n                                    _cur4.lineExpend.y = _cur4.lineEnd.y;\n                                }\n                            }\n\n                            break;\n                        }\n                }\n            });\n        }\n    }, {\n        key: 'animationLine',\n        value: function animationLine() {\n            var _this5 = this;\n\n            if (this.lineLengthCount >= this.lineLength) {\n                return;\n            }\n            this.lineLengthCount = this.lineLength;\n\n            this.lineLengthCount += this.lineLengthStep;\n\n            if (this.lineLengthCount >= this.lineLength || !this.isAnimation()) {\n                this.lineLengthCount = this.lineLength;\n            }\n\n            for (var i = 0; i < this.path.length; i++) {\n                var path = this.path[i];\n                var layer = this.arcLayer;\n\n                var lineEnd = path.itemData.lineEnd;\n                var lineExpend = path.itemData.lineExpend;\n\n                var line = this.line[i];\n                line.points([path.itemData.lineStart.x, path.itemData.lineStart.y, lineEnd.x, lineEnd.y, lineExpend.x, lineExpend.y]);\n\n                if (this.lineLengthCount >= this.lineLength) {\n\n                    /*\n                    */\n                    this.addText(path, layer);\n                    this.addIcon(path, layer);\n                } else {\n                    window.requestAnimationFrame(function () {\n                        _this5.animationLine();\n                    });\n                }\n\n                this.stage.add(layer);\n            }\n        }\n    }, {\n        key: 'addIcon',\n        value: function addIcon(path, layer) {\n            var icon = new _iconcircle2.default(this.box, this.fixWidth(), this.fixHeight());\n            icon.setOptions({\n                stage: this.stage,\n                layer: layer,\n                cx: this.fixCx(),\n                cy: this.fixCy()\n            });\n            icon.update(path.itemData.lineExpend);\n        }\n    }, {\n        key: 'addText',\n        value: function addText(path, layer) {\n            var text = new _konva2.default.Text({\n                x: 0,\n                y: 0,\n                text: path.itemData.percent + '%',\n                fill: '#a3a7f3',\n                fontFamily: 'MicrosoftYaHei',\n                fontSize: 16,\n                fontStyle: 'italic'\n            });\n            this.addDestroy(text);\n\n            var textPoint = path.itemData.textPoint,\n                angleDirect = path.itemData.pointDirection.autoAngle();\n\n            textPoint = _jsonUtilsx2.default.clone(path.itemData.lineEnd);\n            textPoint.y -= text.textHeight + 1;\n\n            switch (angleDirect) {\n                case 1:\n                    {\n                        textPoint.x -= text.textWidth;\n                        break;\n                    }\n                case 2:\n                    {\n                        break;\n                    }\n                case 4:\n                    {\n                        break;\n                    }\n                case 8:\n                    {\n                        textPoint.x -= text.textWidth;\n                        break;\n                    }\n            }\n\n            var textX = this.fixCx() + textPoint.x,\n                textY = this.fixCy() + textPoint.y,\n                direct = path.itemData.pointDirection.auto();\n\n            text.x(textX);\n            text.y(textY);\n            layer.add(text);\n        }\n    }, {\n        key: 'calcLayoutPosition',\n        value: function calcLayoutPosition() {\n            //console.log( 'calcLayoutPosition', Date.now() );\n\n            this.outRadius = Math.ceil(this.outPercent * this.min / 2);\n            this.inRadius = Math.ceil(this.inPercent * this.min / 2);\n\n            this.lineLength = (Math.min(this.fixWidth(), this.fixHeight()) - this.outRadius * 2) / 2 - this.lineOffset;\n            this.lineLengthCount = 1;\n            this.lineLengthStep = .5;\n\n            this.lineLeft = this.fixCx() - this.outRadius - this.lineSpace;\n            this.lineRight = this.fixCx() + this.outRadius + this.lineSpace;\n\n            return this;\n        }\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            _get(Dount.prototype.__proto__ || Object.getPrototypeOf(Dount.prototype), 'destroy', this).call(this);\n        }\n    }]);\n\n    return Dount;\n}(_vischartbase2.default);\n\nexports.default = Dount;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _vischartbase = require('../common/vischartbase.js');\n\nvar _vischartbase2 = _interopRequireDefault(_vischartbase);\n\nvar _geometry = require('../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _utils = require('../common/utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar IconCircle = function (_VisChartBase) {\n    _inherits(IconCircle, _VisChartBase);\n\n    function IconCircle(box, width, height) {\n        _classCallCheck(this, IconCircle);\n\n        var _this = _possibleConstructorReturn(this, (IconCircle.__proto__ || Object.getPrototypeOf(IconCircle)).call(this, box, width, height));\n\n        _this.name = 'IconRound ' + Date.now();\n\n        _this.outRadius = 6;\n        _this.inRadius = 2.5;\n\n        _this.color = '#ffffff';\n\n        _this.max = 1.1;\n        _this.min = 0.8;\n\n        _this.step = .006;\n        _this.cur = 1;\n\n        _this.isplus = 1;\n\n        _this.init();\n        return _this;\n    }\n\n    _createClass(IconCircle, [{\n        key: 'init',\n        value: function init() {\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(point) {\n            this.point = point;\n\n            this.group = new _konva2.default.Group({\n                x: this.point.x + this.cx,\n                y: this.point.y + this.cy,\n                width: this.outRadius * 2,\n                height: this.outRadius * 2\n            });\n            this.addDestroy(this.group);\n\n            this.circle = new _konva2.default.Circle({\n                radius: this.inRadius,\n                fill: this.color,\n                stroke: this.color,\n                x: 0,\n                y: 0\n            });\n            this.addDestroy(this.circle);\n\n            this.outcircle = new _konva2.default.Circle({\n                radius: this.outRadius,\n                fill: '#ffffff00',\n                stroke: this.color,\n                strokeWidth: 1,\n                x: 0,\n                y: 0\n            });\n            this.addDestroy(this.outcircle);\n\n            this.group.add(this.circle);\n            //this.group.add( this.outcircle );\n\n            this.group.scale({ x: this.cur, y: this.cur });\n\n            this.layer.add(this.group);\n\n            //window.requestAnimationFrame( ()=>{ this.animation() } );\n        }\n    }, {\n        key: 'reset',\n        value: function reset() {}\n    }, {\n        key: 'animation',\n        value: function animation() {\n            var _this2 = this;\n\n            if (this.plus) {\n                this.cur = this.cur + this.step;\n\n                if (this.cur > this.max) {\n                    this.cur = this.max;\n                    this.plus = 0;\n                }\n            } else {\n                this.cur = this.cur - this.step;\n                if (this.cur < this.min) {\n                    this.cur = this.min;\n                    this.plus = 1;\n                }\n            }\n\n            this.group.scale({ x: this.cur, y: this.cur });\n\n            this.stage.add(this.layer);\n\n            window.requestAnimationFrame(function () {\n                _this2.animation();\n            });\n        }\n    }, {\n        key: 'initDataLayout',\n        value: function initDataLayout() {}\n    }, {\n        key: 'calcDataPosition',\n        value: function calcDataPosition() {}\n    }, {\n        key: 'animationLine',\n        value: function animationLine() {}\n    }, {\n        key: 'calcLayoutPosition',\n        value: function calcLayoutPosition() {}\n    }]);\n\n    return IconCircle;\n}(_vischartbase2.default);\n\nexports.default = IconCircle;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _vischartbase = require('../common/vischartbase.js');\n\nvar _vischartbase2 = _interopRequireDefault(_vischartbase);\n\nvar _geometry = require('../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _pointat = require('../common/pointat.js');\n\nvar _pointat2 = _interopRequireDefault(_pointat);\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _utils = require('../common/utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nvar _roundstatetext = require('../icon/roundstatetext.js');\n\nvar _roundstatetext2 = _interopRequireDefault(_roundstatetext);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Gauge = function (_VisChartBase) {\n    _inherits(Gauge, _VisChartBase);\n\n    function Gauge(box, width, height) {\n        _classCallCheck(this, Gauge);\n\n        var _this = _possibleConstructorReturn(this, (Gauge.__proto__ || Object.getPrototypeOf(Gauge)).call(this, box, width, height));\n\n        _this.name = 'Gauge' + Date.now();\n\n        _this._setSize(width, height);\n        return _this;\n    }\n\n    _createClass(Gauge, [{\n        key: '_setSize',\n        value: function _setSize(width, height) {\n            _get(Gauge.prototype.__proto__ || Object.getPrototypeOf(Gauge.prototype), '_setSize', this).call(this, width, height);\n\n            this.offsetCy = 15;\n\n            this.cy += this.offsetCy;\n\n            this.curRate = 0;\n            this.totalNum = 0;\n            this.totalNumStep = 5;\n\n            this.animationStep = 40 * 1;\n\n            this.roundRadiusPercent = .085;\n\n            this.lineColor = '#596ea7';\n\n            this.circleLinePercent = .26;\n            this.circlePercent = .28;\n\n            this.circleLineRotation = 0;\n            this.circleLineRotationStep = 4;\n\n            this.arcLinePercent = .39 / 2;\n\n            this.arcOutPercent = .38 / 2;\n            this.arcInPercent = .305 / 2;\n\n            this.arcLabelLength = 6;\n            this.arcTextLength = 20;\n\n            this.arcAngle = 280;\n            this.part = 22;\n            this.arcTotal = 1100;\n\n            this.textOffset = 0;\n\n            this.arcOffset = 90 + (360 - this.arcAngle) / 2;\n            this.arcOffsetPad = -5;\n            this.partLabel = this.part / 2;\n            this.partAngle = this.arcAngle / this.part;\n            this.partNum = this.arcTotal / this.part;\n\n            this.textOffsetX = -1;\n            this.textOffsetY = -8;\n            this.textLineLength = 6;\n\n            this.textRectWidthPercent = .5;\n            this.textRectHeightPercent = .11;\n\n            this.textRoundPercent = .38;\n            this.textRoundOffsetAngle = 160;\n            this.textRoundPlusAngle = 110;\n            this.textRoundMaxAngle = this.textRoundOffsetAngle + this.textRoundPlusAngle * 2;\n            this.roundStatusRaidus = 30;\n            this.textRoundAngle = [{\n                angle: this.textRoundOffsetAngle,\n                text: '低',\n                point: {},\n                min: 0,\n                max: 100,\n                radius: this.roundStatusRaidus,\n                lineColor: this.lineColor\n            }, {\n                angle: this.textRoundOffsetAngle + this.textRoundPlusAngle,\n                text: '中',\n                point: {},\n                min: 101,\n                max: 500,\n                radius: this.roundStatusRaidus,\n                lineColor: this.lineColor\n            }, {\n                angle: this.textRoundOffsetAngle + this.textRoundPlusAngle * 2,\n                text: '高',\n                point: {},\n                min: 501,\n                max: Math.pow(10, 10),\n                radius: this.roundStatusRaidus,\n                lineColor: this.lineColor\n            }];\n\n            this.init();\n        }\n    }, {\n        key: 'getAttackRateAngle',\n        value: function getAttackRateAngle() {\n            var r = 0;\n\n            r = this.arcOffset + this.arcAngle * this.getAttackRatePercent();\n\n            return r;\n        }\n    }, {\n        key: 'getAttackRatePercent',\n        value: function getAttackRatePercent() {\n            var r = 0,\n                tmp = void 0;\n            if (this.curRate) {\n                tmp = this.curRate;\n                if (tmp > this.arcTotal) {\n                    tmp = this.arcTotal;\n                }\n\n                r = tmp / this.arcTotal;\n            }\n            return r;\n        }\n    }, {\n        key: 'getAttackText',\n        value: function getAttackText() {\n            var _this2 = this;\n\n            var text = '低';\n\n            if (this.curRate) {\n                this.textRoundAngle.map(function (val) {\n                    if (_this2.curRate >= val.min && _this2.curRate <= val.max) {\n                        text = val.text;\n                    }\n                });\n            }\n\n            return text + '\\u9891\\n\\u653B\\u51FB';\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            var _this3 = this;\n\n            this.textRoundRadius = this.width * this.textRoundPercent * this.sizeRate;\n\n            this.roundRadius = this.width * this.roundRadiusPercent * this.sizeRate;\n\n            this.arcInRadius = this.width * this.arcInPercent * this.sizeRate;\n            this.arcOutRadius = this.width * this.arcOutPercent * this.sizeRate;\n\n            this.arcLineRaidus = Math.ceil(this.arcLinePercent * this.max) * this.sizeRate;\n\n            this.textWidth = this.textRectWidthPercent * this.width;\n            this.textHeight = 38 * this.sizeRate;\n            this.textX = this.cx - this.textWidth / 2;\n            this.textY = this.cy + this.arcLineRaidus + this.arcTextLength / 2 + 2;\n\n            this.textRoundAngle.map(function (val, key) {\n                var point = geometry.distanceAngleToPoint(_this3.textRoundRadius, val.angle);\n                val.point = geometry.pointPlus(point, _this3.cpoint);\n                val.point.y += _this3.offsetCy;\n            });\n\n            this.arcPartLineAr = [];\n            this.arcOutlinePartAr = [];\n            this.textAr = [];\n            for (var i = 0; i <= this.part; i++) {\n                var start = void 0,\n                    end = void 0,\n                    angle = void 0;\n                angle = i * this.partAngle + this.arcOffset;\n\n                if (i && i < this.part) {\n                    start = geometry.distanceAngleToPoint(this.arcInRadius, angle);\n                    end = geometry.distanceAngleToPoint(this.arcOutRadius, angle);\n\n                    this.arcPartLineAr.push('M');\n                    this.arcPartLineAr.push([start.x, start.y].join(','));\n                    this.arcPartLineAr.push('L');\n                    this.arcPartLineAr.push([end.x, end.y].join(','));\n                }\n\n                start = geometry.distanceAngleToPoint(this.arcLineRaidus, angle);\n                end = geometry.distanceAngleToPoint(this.arcLineRaidus + this.arcLabelLength, angle);\n\n                this.arcOutlinePartAr.push('M');\n                this.arcOutlinePartAr.push([start.x, start.y].join(','));\n                this.arcOutlinePartAr.push('L');\n                this.arcOutlinePartAr.push([end.x, end.y].join(','));\n\n                if (!(i * this.partNum % 100) || i === 0) {\n                    var angleOffset = 8,\n                        lengthOffset = 0;\n\n                    if (i === 0) {\n                        angleOffset = 1;\n                    }\n\n                    if (i >= 19) {\n                        angleOffset = 14;\n                    }\n                    if (i >= 21) {\n                        angleOffset = 18;\n                    }\n                    var text = {\n                        text: i * this.partNum,\n                        angle: angle - angleOffset,\n                        point: geometry.distanceAngleToPoint(this.arcLineRaidus + this.arcTextLength + lengthOffset, angle - angleOffset)\n                    };\n                    text.textPoint = new _pointat2.default(this.width, this.height, geometry.pointPlus(text.point, this.cpoint));\n\n                    this.textAr.push(text);\n                }\n            }\n        }\n    }, {\n        key: 'initRoundText',\n        value: function initRoundText() {\n            var _this4 = this;\n\n            this.textRoundAngle.map(function (val) {\n\n                val.ins = new _roundstatetext2.default(_this4.box, _this4.width, _this4.height);\n                val.ins.setOptions(Object.assign(val, {\n                    stage: _this4.stage,\n                    layer: _this4.layoutLayer,\n                    data: _this4.data,\n                    allData: _this4.allData\n                }));\n                val.ins.init();\n                val.ins.update(_this4.curRate);\n            });\n        }\n        /*\n        {\n        \"series\": [\n            {\n                \"type\": \"gauge\",\n                \"data\": [\n                    {\n                        \"value\": 200,\n                        \"total\": 134567,\n                        \"name\": \"完成率\"\n                    }\n                ]\n            }\n        ]\n        }\n        */\n\n    }, {\n        key: 'update',\n        value: function update(data, allData) {\n            var _this5 = this;\n\n            this.stage.removeChildren();\n            _get(Gauge.prototype.__proto__ || Object.getPrototypeOf(Gauge.prototype), 'update', this).call(this, data, allData);\n\n            //console.log( 123, data );\n\n            if (data && data.data && data.data.length) {\n                data.data.map(function (val) {\n                    _this5.curRate = val.value;\n                    _this5.totalNum = val.total;\n                });\n            }\n\n            /*\n            this.curRate = 600;\n            this.totalNum = 234567;\n            */\n\n            this.initDataLayout();\n\n            //console.log( 'gauge update', this.getAttackRateAngle() )\n            this.angle = this.arcOffset + this.arcOffsetPad;\n            this.animationAngle = this.getAttackRateAngle() + this.arcOffsetPad;\n            //console.log( this.angle, this.animationAngle );\n\n            this.updateWedge();\n\n            if (this.curRate) {\n                this.rateStep = Math.floor(this.curRate / (this.animationStep * 2));\n                this.animation();\n            }\n            if (this.totalNum) {\n                this.totalNumStep = Math.floor(this.totalNum / this.animationStep);\n                this.totalNumCount = 0;\n                this.animationText();\n            }\n\n            this.animationCircleLine();\n        }\n    }, {\n        key: 'animationCircleLine',\n        value: function animationCircleLine() {\n            var _this6 = this;\n\n            //console.log( 'animationCircleLine' );\n            if (this.isDestroy) return;\n            if (!this.circleLine) return;\n\n            if (!this.isAnimation()) {\n                return;\n            }\n\n            this.circleLineRotation += this.circleLineRotationStep;\n\n            this.circleLine.rotation(this.circleLineRotation);\n            this.stage.add(this.layoutLayer);\n\n            window.requestAnimationFrame(function () {\n                _this6.animationCircleLine();\n            });\n        }\n    }, {\n        key: 'drawText',\n        value: function drawText() {\n\n            var params = {\n                text: 0 + '',\n                x: this.cx,\n                y: this.textY,\n                fontSize: 26 * this.sizeRate,\n                fontFamily: 'HuXiaoBoKuHei',\n                fill: '#ffffff',\n                fontStyle: 'italic'\n            },\n                tmp = _jsonUtilsx2.default.clone(params);\n            tmp.text = this.totalNum;\n\n            this.totalText = new _konva2.default.Text(params);\n            this.addDestroy(this.totalText);\n\n            this.totalText.x(this.cx - this.totalText.textWidth / 2);\n            this.totalText.y(this.textY + 5);\n\n            this.tmpTotalText = new _konva2.default.Text(tmp);\n            this.addDestroy(this.tmpTotalText);\n        }\n    }, {\n        key: 'drawTextRect',\n        value: function drawTextRect() {\n\n            var textWidth = this.tmpTotalText.textWidth + 30,\n                textX = 0;\n            if (textWidth < 170) {\n                textWidth = 170;\n            }\n            textX = this.cx - textWidth / 2 + 2;\n\n            this.textRect = new _konva2.default.Rect({\n                fill: '#596ea7',\n                stroke: '#ffffff00',\n                strokeWidth: 0,\n                opacity: .3,\n                width: textWidth,\n                height: this.textHeight,\n                x: textX,\n                y: this.textY\n            });\n            this.addDestroy(this.textRect);\n\n            var points = [];\n            points.push('M', [textX, this.textY + this.textLineLength].join(','));\n            points.push('L', [textX, this.textY].join(','));\n            points.push('L', [textX + this.textLineLength, this.textY].join(','));\n\n            points.push('M', [textX + textWidth - this.textLineLength, this.textY].join(','));\n            points.push('L', [textX + textWidth, this.textY].join(','));\n            points.push('L', [textX + textWidth, this.textY + this.textLineLength].join(','));\n\n            points.push('M', [textX + textWidth, this.textY + this.textHeight - this.textLineLength].join(','));\n            points.push('L', [textX + textWidth, this.textY + this.textHeight].join(','));\n            points.push('L', [textX + textWidth - this.textLineLength, this.textY + this.textHeight].join(','));\n\n            points.push('M', [textX + this.textLineLength, this.textY + this.textHeight].join(','));\n            points.push('L', [textX, this.textY + this.textHeight].join(','));\n            points.push('L', [textX, this.textY + this.textHeight - this.textLineLength].join(','));\n\n            this.textLinePath = new _konva2.default.Path({\n                data: points.join(''),\n                stroke: this.lineColor,\n                strokeWidth: 1\n            });\n            this.addDestroy(this.textLinePath);\n\n            this.layoutLayer.add(this.textLinePath);\n            this.layoutLayer.add(this.textRect);\n            this.layoutLayer.add(this.totalText);\n        }\n    }, {\n        key: 'drawArcText',\n        value: function drawArcText() {\n            var _this7 = this;\n\n            if (!(this.textAr && this.textAr.length)) return;\n\n            this.textAr.map(function (val) {\n                var text = new _konva2.default.Text({\n                    x: val.point.x + _this7.cx,\n                    y: val.point.y + _this7.cy,\n                    text: val.text + '',\n                    fontSize: 11 * _this7.sizeRate\n                    //, rotation: val.angle\n                    , fontFamily: 'MicrosoftYaHei',\n                    fill: _this7.lineColor\n                });\n                _this7.addDestroy(text);\n                text.rotation(val.angle + 90);\n\n                _this7.layoutLayer.add(text);\n            });\n        }\n    }, {\n        key: 'drawArcLine',\n        value: function drawArcLine() {\n\n            var points = [];\n            points.push('M');\n            for (var i = this.arcOffset; i <= this.arcOffset + this.arcAngle; i += 0.5) {\n                var tmp = geometry.distanceAngleToPoint(this.arcLineRaidus, i);\n                points.push([tmp.x, tmp.y].join(',') + ',');\n                if (i == 90) {\n                    points.push('L');\n                }\n            }\n\n            this.arcLine = new _konva2.default.Path({\n                data: points.join(''),\n                x: this.cx,\n                y: this.cy,\n                stroke: this.lineColor,\n                strokeWidth: 1,\n                fill: '#ffffff00'\n            });\n            this.addDestroy(this.arcLine);\n\n            this.arcPartLine = new _konva2.default.Path({\n                data: this.arcPartLineAr.join(''),\n                x: this.cx,\n                y: this.cy,\n                stroke: '#00000088',\n                strokeWidth: 1,\n                fill: '#ffffff00'\n            });\n            this.addDestroy(this.arcPartLine);\n\n            this.arcOutlinePart = new _konva2.default.Path({\n                data: this.arcOutlinePartAr.join(''),\n                x: this.cx,\n                y: this.cy,\n                stroke: this.lineColor,\n                strokeWidth: 1,\n                fill: '#ffffff00'\n            });\n            this.addDestroy(this.arcOutlinePart);\n\n            this.layoutLayer.add(this.arcLine);\n            this.layoutLayer.add(this.arcPartLine);\n            this.layoutLayer.add(this.arcOutlinePart);\n        }\n    }, {\n        key: 'drawArc',\n        value: function drawArc() {\n\n            var params = {\n                x: this.cx,\n                y: this.cy,\n                innerRadius: this.arcInRadius,\n                outerRadius: this.arcOutRadius,\n                angle: this.arcAngle\n                //, fill: 'red'\n                , stroke: '#ffffff00',\n                strokeWidth: 0,\n                rotation: this.arcOffset,\n                fillLinearGradientStartPoint: { x: -50, y: -50 },\n                fillLinearGradientEndPoint: { x: 50, y: 50 },\n                fillLinearGradientColorStops: [0, '#ff9000', .5, '#64b185', 1, '#5a78ca']\n            };\n            this.arc = new _konva2.default.Arc(params);\n            this.addDestroy(this.arc);\n\n            this.layoutLayer.add(this.arc);\n        }\n    }, {\n        key: 'initDataLayout',\n        value: function initDataLayout() {\n            this.layer = new _konva2.default.Layer();\n            this.addDestroy(this.layer);\n\n            this.layoutLayer = new _konva2.default.Layer();\n            this.addDestroy(this.layoutLayer);\n\n            this.roundLine = new _konva2.default.Circle({\n                x: this.cx,\n                y: this.cy,\n                radius: this.roundRadius,\n                stroke: this.lineColor,\n                strokeWidth: 2.5,\n                fill: 'rgba( 0, 0, 0, .5 )'\n            });\n            this.addDestroy(this.roundLine);\n\n            this.percentText = new _konva2.default.Text({\n                x: this.cx,\n                y: this.cy,\n                text: this.getAttackText(),\n                fontSize: 18 * this.sizeRate,\n                fontFamily: 'HuXiaoBoKuHei',\n                fill: '#ffffff',\n                fontStyle: 'italic'\n            });\n            this.addDestroy(this.percentText);\n            this.percentText.x(this.cx - this.percentText.textWidth / 2 + this.textOffsetX);\n            this.percentText.y(this.cy - this.percentText.textHeight / 2 + this.textOffsetY);\n\n            /*\n            this.percentSymbolText = new Konva.Text( {\n                x: this.cx\n                , y: this.cy\n                , text: '%'\n                , fontSize: 17\n                , fontFamily: 'Agency FB'\n                , fill: '#c7d6ff'\n                , fontStyle: 'italic'\n            });\n            this.addDestroy( this.percentSymbolText );\n            this.percentSymbolText.x( this.percentText.attrs.x  + this.percentText.textWidth );\n            this.percentSymbolText.y( this.percentText.attrs.y  + this.percentText.textHeight -  this.percentSymbolText.textHeight - 2 );\n            */\n\n            //console.log( this.percentText );\n\n            var wedge = new _konva2.default.Wedge({\n                x: 0,\n                y: -3,\n                radius: 10,\n                angle: 20,\n                fill: '#ff5a00',\n                stroke: '#ff5a00',\n                strokeWidth: 1,\n                rotation: 90\n            });\n            this.addDestroy(wedge);\n\n            var wedge1 = new _konva2.default.Wedge({\n                x: 0,\n                y: -3,\n                radius: 10,\n                angle: 20,\n                fill: '#973500',\n                stroke: '#973500',\n                strokeWidth: 1,\n                rotation: 65\n            });\n            this.addDestroy(wedge1);\n\n            var group = new _konva2.default.Group({\n                x: this.cx,\n                y: this.cy\n            });\n            this.addDestroy(group);\n\n            group.add(wedge1);\n            group.add(wedge);\n\n            this.angle = this.arcOffset - 2;\n\n            this.group = group;\n\n            this.layer.add(group);\n            this.layer.add(this.roundLine);\n            this.layer.add(this.percentText);\n            //this.layer.add( this.percentSymbolText );\n\n\n            this.drawCircle();\n            this.drawCircleLine();\n            this.drawArc();\n            this.drawArcLine();\n            this.drawArcText();\n            this.drawText();\n            this.drawTextRect();\n\n            this.initRoundText();\n\n            this.stage.add(this.layer);\n            this.stage.add(this.layoutLayer);\n        }\n    }, {\n        key: 'animation',\n        value: function animation() {\n            var _this8 = this;\n\n            //console.log( this.angle, this.animationAngle );\n            if (this.isDestroy) return;\n            if (this.angle > this.animationAngle) return;\n\n            this.angle += this.rateStep;\n\n            if (this.angle >= this.animationAngle || !this.isAnimation()) {\n                this.angle = this.animationAngle;\n            };\n\n            this.updateWedge();\n\n            this.stage.add(this.layer);\n\n            window.requestAnimationFrame(function () {\n                _this8.animation();\n            });\n        }\n    }, {\n        key: 'updateWedge',\n        value: function updateWedge() {\n            var point = geometry.distanceAngleToPoint(this.roundRadius + 6, this.angle);\n            this.group.x(this.cx + point.x);\n            this.group.y(this.cy + point.y);\n            this.group.rotation(this.angle + 90);\n            this.group.rotation(this.angle + 90);\n            this.stage.add(this.layer);\n        }\n    }, {\n        key: 'animationText',\n        value: function animationText() {\n            var _this9 = this;\n\n            if (this.isDestroy) return;\n\n            if (this.totalNumCount >= this.totalNum) return;\n            this.totalNumCount += this.totalNumStep;\n\n            if (this.totalNumCount >= this.totalNum || !this.isAnimation()) {\n                this.totalNumCount = this.totalNum;\n            };\n\n            this.totalText.text(this.totalNumCount);\n            this.totalText.x(this.cx - this.totalText.textWidth / 2);\n            this.stage.add(this.layoutLayer);\n\n            window.requestAnimationFrame(function () {\n                _this9.animationText();\n            });\n        }\n    }, {\n        key: 'calcDataPosition',\n        value: function calcDataPosition() {}\n    }, {\n        key: 'animationLine',\n        value: function animationLine() {}\n    }, {\n        key: 'addIcon',\n        value: function addIcon(path, layer) {}\n    }, {\n        key: 'addText',\n        value: function addText(path, layer) {}\n    }, {\n        key: 'calcLayoutPosition',\n        value: function calcLayoutPosition() {}\n    }, {\n        key: 'drawCircle',\n        value: function drawCircle() {\n            this.circleRadius = Math.ceil(this.circlePercent * this.max / 2) * this.sizeRate;\n\n            this.circle = new _konva2.default.Circle({\n                x: this.cx,\n                y: this.cy,\n                radius: this.circleRadius,\n                stroke: this.lineColor,\n                strokeWidth: 1,\n                fill: '#ffffff00'\n            });\n            this.addDestroy(this.circle);\n            this.layoutLayer.add(this.circle);\n        }\n    }, {\n        key: 'drawCircleLine',\n        value: function drawCircleLine() {\n            this.circleLineRadius = Math.ceil(this.circleLinePercent * this.max / 2) * this.sizeRate;\n\n            var points = [];\n            points.push('M');\n            for (var i = 90; i <= 180; i++) {\n                var tmp = geometry.distanceAngleToPoint(this.circleLineRadius, i + 90);\n                points.push([tmp.x, tmp.y].join(',') + ',');\n                if (i == 90) {\n                    points.push('L');\n                }\n            }\n            points.push('M');\n            for (var _i = 270; _i <= 360; _i++) {\n                var _tmp = geometry.distanceAngleToPoint(this.circleLineRadius, _i + 90);\n                points.push([_tmp.x, _tmp.y].join(',') + ',');\n                if (_i == 270) {\n                    points.push('L');\n                }\n            }\n\n            this.circleLine = new _konva2.default.Path({\n                data: points.join(''),\n                x: this.cx,\n                y: this.cy,\n                stroke: this.lineColor,\n                strokeWidth: 1.5,\n                fill: '#ffffff00'\n            });\n            this.addDestroy(this.circleLine);\n\n            this.layoutLayer.add(this.circleLine);\n        }\n    }, {\n        key: 'reset',\n        value: function reset() {}\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            _get(Gauge.prototype.__proto__ || Object.getPrototypeOf(Gauge.prototype), 'destroy', this).call(this);\n            this.textRoundAngle.map(function (val) {\n                if (val.ins) val.ins.destroy();\n            });\n        }\n    }]);\n\n    return Gauge;\n}(_vischartbase2.default);\n\nexports.default = Gauge;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _vischartbase = require('../common/vischartbase.js');\n\nvar _vischartbase2 = _interopRequireDefault(_vischartbase);\n\nvar _geometry = require('../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _utils = require('../common/utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar RoundStateText = function (_VisChartBase) {\n    _inherits(RoundStateText, _VisChartBase);\n\n    function RoundStateText(box, width, height) {\n        _classCallCheck(this, RoundStateText);\n\n        var _this = _possibleConstructorReturn(this, (RoundStateText.__proto__ || Object.getPrototypeOf(RoundStateText)).call(this, box, width, height));\n\n        _this.name = 'RoundStateText ' + Date.now();\n\n        _this.radius = 30;\n\n        _this.textOffsetX = -2;\n        _this.textOffsetY = -1;\n\n        _this.circleLineRotation = 0;\n        _this.circleLineRotationStep = 4;\n\n        _this.curColor = '#deaf5c';\n        return _this;\n    }\n\n    _createClass(RoundStateText, [{\n        key: 'animationCircleLine',\n        value: function animationCircleLine() {\n            var _this2 = this;\n\n            if (this.isDestroy) return;\n            if (!this.circleLine) return;\n\n            if (!this.isAnimation()) {\n                return;\n            }\n\n            this.circleLineRotation += this.circleLineRotationStep;\n\n            this.circleLine.rotation(this.circleLineRotation);\n            this.stage.add(this.layer);\n\n            window.requestAnimationFrame(function () {\n                _this2.animationCircleLine();\n            });\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            //console.log( 'RoundStateText init', this );\n            this.circleRaidus = this.radius - 5;\n            this.circleRaidus *= this.sizeRate;\n\n            //this.lineColor = this.curColor;\n\n            this.initDataLayout();\n\n            this.animationCircleLine();\n\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(rate) {\n            this.rate = rate;\n\n            var color = this.lineColor;\n\n            if (rate >= this.min && rate < this.max) {\n                color = this.curColor;\n            }\n\n            this.text.fill(color);\n            this.circle.stroke(color);\n            this.circleLine.stroke(color);\n\n            return this;\n        }\n    }, {\n        key: 'initDataLayout',\n        value: function initDataLayout() {\n            this.drawText();\n            this.drawCircle();\n            this.drawCircleLine();\n        }\n    }, {\n        key: 'drawText',\n        value: function drawText() {\n            this.text = new _konva2.default.Text({\n                x: this.point.x,\n                y: this.point.y,\n                text: this.text,\n                fontSize: 32 * this.sizeRate,\n                fontFamily: 'HuXiaoBoKuHei',\n                fill: this.lineColor,\n                fontStyle: 'italic'\n            });\n            this.addDestroy(this.text);\n\n            this.text.x(this.point.x - this.text.textWidth / 2 + this.textOffsetX);\n            this.text.y(this.point.y - this.text.textHeight / 2 + this.textOffsetY);\n\n            this.layer.add(this.text);\n        }\n    }, {\n        key: 'drawCircle',\n        value: function drawCircle() {\n            this.circle = new _konva2.default.Circle({\n                x: this.point.x,\n                y: this.point.y,\n                radius: this.circleRaidus,\n                stroke: this.lineColor,\n                strokeWidth: 2,\n                fill: '#ffffff00'\n            });\n            this.addDestroy(this.circle);\n\n            this.layer.add(this.circle);\n        }\n    }, {\n        key: 'drawCircleLine',\n        value: function drawCircleLine() {\n            this.circleLineRadius = this.radius - 1;\n            this.circleLineRadius *= this.sizeRate;\n\n            var points = [];\n            points.push('M');\n            for (var i = 90; i <= 180; i++) {\n                var tmp = geometry.distanceAngleToPoint(this.circleLineRadius, i + 90);\n                points.push([tmp.x, tmp.y].join(',') + ',');\n                if (i == 90) {\n                    points.push('L');\n                }\n            }\n            points.push('M');\n            for (var _i = 270; _i <= 360; _i++) {\n                var _tmp = geometry.distanceAngleToPoint(this.circleLineRadius, _i + 90);\n                points.push([_tmp.x, _tmp.y].join(',') + ',');\n                if (_i == 270) {\n                    points.push('L');\n                }\n            }\n\n            this.circleLine = new _konva2.default.Path({\n                data: points.join(''),\n                x: this.point.x,\n                y: this.point.y,\n                stroke: this.lineColor,\n                strokeWidth: 2,\n                fill: '#ffffff00'\n            });\n            this.addDestroy(this.circleLine);\n\n            this.layer.add(this.circleLine);\n        }\n    }, {\n        key: 'reset',\n        value: function reset() {}\n    }, {\n        key: 'calcDataPosition',\n        value: function calcDataPosition() {}\n    }, {\n        key: 'animationLine',\n        value: function animationLine() {}\n    }, {\n        key: 'calcLayoutPosition',\n        value: function calcLayoutPosition() {}\n    }]);\n\n    return RoundStateText;\n}(_vischartbase2.default);\n\nexports.default = RoundStateText;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar CHART_TYPE = exports.CHART_TYPE = {\n    dount: 'dount',\n    gauge: 'gauge'\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _vischartbase = require('../common/vischartbase.js');\n\nvar _vischartbase2 = _interopRequireDefault(_vischartbase);\n\nvar _geometry = require('../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _konva = require('konva');\n\nvar _konva2 = _interopRequireDefault(_konva);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _utils = require('../common/utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Legend = function (_VisChartBase) {\n    _inherits(Legend, _VisChartBase);\n\n    function Legend(box, width, height) {\n        _classCallCheck(this, Legend);\n\n        var _this = _possibleConstructorReturn(this, (Legend.__proto__ || Object.getPrototypeOf(Legend)).call(this, box, width, height));\n\n        _this.name = 'Legend ' + Date.now();\n\n        _this.textColor = '#24a3ea';\n\n        _this.iconSpace = 5;\n\n        _this.text = [];\n        _this.icon = [];\n        _this.group = [];\n\n        _this.destroyList = [];\n        return _this;\n    }\n\n    _createClass(Legend, [{\n        key: 'setStage',\n        value: function setStage(stage) {\n            _get(Legend.prototype.__proto__ || Object.getPrototypeOf(Legend.prototype), 'setStage', this).call(this, stage);\n\n            this.layer = new _konva2.default.Layer({});\n            this.addDestroy(this.layer);\n\n            stage.add(this.layer);\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            var _this2 = this;\n\n            this.data.data.map(function (item, key) {\n                var x = 0,\n                    y = 0,\n                    count = key + 1,\n                    curRow = Math.floor(key / _this2.column());\n\n                switch (_this2.direction()) {\n                    case 'bottom':\n                        {\n                            x = _this2.space() + (_this2.space() + _this2.columnWidth()) * (key % _this2.column());\n                            y = _this2.height - (_this2.row() - curRow) * (_this2.spaceY() + _this2.rowHeight());\n                            //console.log( x, y, key, this.direction(), curRow );\n                            break;\n                        }\n                }\n\n                var label = item.name || key + '';\n\n                var color = _this2.colors[key % _this2.colors.length];\n\n                if (_jsonUtilsx2.default.jsonInData(item, 'textStyle.color')) {\n                    //path.fill( val.itemStyle.color );\n                    color = item.textStyle.color;\n                }\n\n                var rect = new _konva2.default.Rect({\n                    x: x,\n                    y: y,\n                    width: _this2.itemWidth(),\n                    height: _this2.itemHeight(),\n                    fill: color\n                });\n                _this2.addDestroy(rect);\n\n                var bg = new _konva2.default.Rect({\n                    x: x,\n                    y: y,\n                    width: _this2.columnWidth(),\n                    height: _this2.rowHeight(),\n                    fill: '#ffffff00'\n                });\n                _this2.addDestroy(bg);\n\n                var text = new _konva2.default.Text({\n                    text: label,\n                    x: x + _this2.iconSpace + rect.width(),\n                    y: y,\n                    fill: _this2.textColor,\n                    fontFamily: 'MicrosoftYaHei',\n                    fontSize: 12\n                });\n                _this2.addDestroy(text);\n\n                var group = new _konva2.default.Group();\n                _this2.addDestroy(group);\n                group.add(bg);\n                group.add(rect);\n                group.add(text);\n\n                var data = {\n                    ele: group,\n                    item: item,\n                    text: text,\n                    disabled: false\n                };\n\n                _this2.group.push(data);\n\n                group.on('click', function () {\n                    //console.log( 'click', key, data, group, item );\n                    data.disabled = !data.disabled;\n\n                    if (data.disabled) {\n                        group.opacity(.6);\n                    } else {\n                        group.opacity(1);\n                    }\n\n                    _this2.stage.add(_this2.layer);\n\n                    _this2.onChange && _this2.onChange(_this2.group);\n                });\n\n                _this2.layer.add(group);\n            });\n            this.stage.add(this.layer);\n\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(data) {\n            this.data = data || {};\n            if (!(this.data && this.data.data && this.data.data.length)) return;\n\n            /*\n            console.log( \n                this.column()\n                , this.row()\n                , this.direction() \n                , this.outerHeight()\n                , 'columnWidth:', this.columnWidth()\n            );\n            console.log( this.width, this.width - ( this.column() - 1  + 2 ) * this.space() );\n            */\n\n            this.init();\n        }\n    }, {\n        key: 'outerHeight',\n        value: function outerHeight() {\n            return this.rowHeight() * this.row() + this.space();\n        }\n    }, {\n        key: 'total',\n        value: function total() {\n            var r = 0;\n\n            return r;\n        }\n    }, {\n        key: 'itemWidth',\n        value: function itemWidth() {\n            return this.data.itemWidth || 5;\n        }\n    }, {\n        key: 'itemHeight',\n        value: function itemHeight() {\n            return this.data.itemHeight || 5;\n        }\n    }, {\n        key: 'columnWidth',\n        value: function columnWidth() {\n            return (this.width - (this.column() - 1 + 2) * this.space()) / this.column();\n        }\n    }, {\n        key: 'column',\n        value: function column() {\n            return this.data.column || 1;\n        }\n    }, {\n        key: 'space',\n        value: function space() {\n            return this.data.space || 15;\n        }\n    }, {\n        key: 'spaceY',\n        value: function spaceY() {\n            return this.data.space || 0;\n        }\n    }, {\n        key: 'rowHeight',\n        value: function rowHeight() {\n            return this.data.rowHeight || 22;\n        }\n    }, {\n        key: 'row',\n        value: function row() {\n            return Math.ceil(this.data.data.length / this.column());\n        }\n    }, {\n        key: 'direction',\n        value: function direction() {\n            var r = 'top';\n\n            if (this.data.bottom) {\n                r = 'bottom';\n            } else if (this.data.left) {\n                r = 'left';\n            } else if (this.data.right) {\n                r = 'right';\n            }\n\n            return r;\n        }\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            _get(Legend.prototype.__proto__ || Object.getPrototypeOf(Legend.prototype), 'destroy', this).call(this);\n            //console.log( this.name, 'destroy' );\n\n            this.group && this.group.length && this.group.map(function (item) {\n                //if( !item.ele ) return;\n                item.ele.off('click');\n            });\n        }\n    }]);\n\n    return Legend;\n}(_vischartbase2.default);\n\nexports.default = Legend;","\n\nimport VisChart from 'vischart';\n\nimport fontfaceobserver from 'fontfaceobserver';\n\nimport * as base64img from './data/base64img.js';\n\n\n//console.log( dountBig, dountIn );\n\nlet background = [\n    { \n        //\"url\": \"./img/dount-in.png\"\n        \"url\": base64img.dountIn\n        , \"isbase64\": true\n        , 'base64prefix': 'data:image/png;base64,'\n        , \"width\": 120\n        , \"height\": 120\n        , \"offsetX\": 0\n        , \"offsetY\": 1\n    }\n    , { \n        //\"url\": \"./img/dount-big.png\"\n        \"url\": base64img.dountBig\n        , \"isbase64\": true\n        , 'base64prefix': 'data:image/png;base64,'\n        , \"width\": 250\n        , \"height\": 248\n        , \"offsetX\": 0\n        , \"offsetY\": 1\n        , \"rotation\": 1\n    }\n];\n\n//console.log( background );\n\nlet font = new fontfaceobserver( 'HuXiaoBoKuHei' );\nfont.load().then(function () {\n\n    //let data = require( './data/dount.json' );\n    let data = require( './data/dount-tight8.json' );\n    //let data = require( './data/dount-disable-animation.json' );\n        data \n        && data.series \n        && data.series.map( item => {\n            item.background = background;\n        });\n\n    let box = document.querySelector('#twoBox');\n        \n    let dmins = new VisChart( box );\n        dmins.update( data, true ); \n\n    setInterval( ()=>{\n        //console.log( 'ins', Date.now() );\n        /*if( dmins ){\n            dmins.destroy();\n        }\n        dmins = new VisChart( box );*/\n        dmins.update( data, true ); \n    }, 5000 );\n\n    setTimeout( ()=>{\n        //dmins.destroy();\n        //dmins.resize( 500, 500 );\n        //box.style.width = '500px';\n        //box.style.height = '500px';\n        //dmins.resize( 600, 600 );\n        //dmins.update( data ); \n    }, 3000 );\n\n\n}, function () {\n  console.log('Font is not available');\n});\n\n\n"],"sourceRoot":""}